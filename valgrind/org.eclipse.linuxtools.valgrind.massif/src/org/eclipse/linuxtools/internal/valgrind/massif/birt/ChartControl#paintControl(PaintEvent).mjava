	public void paintControl(PaintEvent pe) {
		if (bIsPainting) {
			return;
		}
		Throwable paintError = null;

		Rectangle re = getClientArea();
		final Rectangle adjustedRe = new Rectangle(0, 0, re.width, re.height);

		if (adjustedRe.width - 2 * X_OFFSET <= 0
				|| adjustedRe.height - 2 * Y_OFFSET <= 0) {
			if (buffer != null && !buffer.isDisposed()) {
				buffer.dispose();
				buffer = null;
			}
			return;
		}

		if (cm == null) {
			buffer = null;
		} else {
			bIsPainting = true;
			Image oldBuffer = null;
			if (buffer == null) {
				buffer = new Image(Display.getDefault(), adjustedRe);
			} else {
				Rectangle ore = buffer.getBounds();

				oldBuffer = buffer;

				if (!adjustedRe.equals(ore)) {
					buffer = new Image(Display.getDefault(), adjustedRe);
				}
			}

			GC gcImage = new GC(buffer);

			// fill default background as white.
			gcImage.setForeground(Display.getDefault().getSystemColor(
					SWT.COLOR_WHITE));
			gcImage.fillRectangle(buffer.getBounds());

			Bounds bo = BoundsImpl.create(X_OFFSET, Y_OFFSET,
					adjustedRe.width - 2 * X_OFFSET, adjustedRe.height - 2
					* Y_OFFSET);

			try {
				deviceRenderer.setProperty(IDeviceRenderer.GRAPHICS_CONTEXT, gcImage);

				bo.scale(72d / deviceRenderer.getDisplayServer()
						.getDpiResolution()); // convert to points

				// generate and render the cart
				Generator gr = Generator.instance();
				if (needsGeneration) {
					needsGeneration = false;
					RunTimeContext rtc = new RunTimeContext();

					state = gr.build(deviceRenderer
							.getDisplayServer(), cm, bo, null, rtc, null);

				}
				gr.render(deviceRenderer, state);
				if (paintError != null) {
					buffer = oldBuffer;
				}
				if (oldBuffer != null && oldBuffer != buffer) {
					oldBuffer.dispose();
				}
				GC gc = pe.gc;
				if (buffer != null) {
					gc.drawImage(buffer, 0, 0);
				}
			} catch (Exception ex) {
				paintError = ex;
			} finally {
				gcImage.dispose();
			}			
			bIsPainting = false;
		}


	}

