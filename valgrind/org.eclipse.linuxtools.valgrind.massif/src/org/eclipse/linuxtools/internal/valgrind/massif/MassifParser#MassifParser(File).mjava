	public MassifParser(File inputFile) throws IOException {
		ArrayList<MassifSnapshot> list = new ArrayList<>();
		try (BufferedReader br = new BufferedReader(new FileReader(inputFile))){
			String line;
			MassifSnapshot snapshot = null;
			String cmd = null;
			TimeUnit unit = null;  
			int n = 0;

			// retrive PID from filename
			String filename = inputFile.getName();
			pid = ValgrindParserUtils.parsePID(filename, MassifLaunchDelegate.OUT_PREFIX);

			// parse contents of file
			while ((line = br.readLine()) != null) {
				if (line.startsWith(CMD + COLON)){
					cmd = ValgrindParserUtils.parseStrValue(line, COLON + SPACE);
				} else if (line.startsWith(TIME_UNIT + COLON)) {
					unit = parseTimeUnit(line);
				} else if (line.startsWith(SNAPSHOT)) {
					if (snapshot != null) {
						// this snapshot finished parsing
						list.add(snapshot);
						n++;
					}
					snapshot = new MassifSnapshot(n);
					snapshot.setCmd(cmd);
					snapshot.setUnit(unit);
				} else if (line.startsWith(TIME + EQUALS)) {
					snapshot.setTime(ValgrindParserUtils.parseLongValue(line, EQUALS));
				} else if (line.startsWith(MEM_HEAP_B + EQUALS)) {
					snapshot.setHeapBytes(ValgrindParserUtils.parseLongValue(line, EQUALS));
				} else if (line.startsWith(MEM_HEAP_EXTRA_B + EQUALS)) {
					snapshot.setHeapExtra(ValgrindParserUtils.parseLongValue(line, EQUALS));
				} else if (line.startsWith(MEM_STACKS_B + EQUALS)) {
					snapshot.setStacks(ValgrindParserUtils.parseLongValue(line, EQUALS));
				} else if (line.startsWith(HEAP_TREE + EQUALS)) {
					SnapshotType type = parseSnapshotType(line);
					snapshot.setType(type);
					switch (type) {
					case DETAILED:
					case PEAK:
						MassifHeapTreeNode node = parseTree(snapshot, null, br);
						node.setText(NLS.bind(Messages.getString("MassifParser.Snapshot_n"), n, node.getText())); // prepend snapshot number //$NON-NLS-1$
						snapshot.setRoot(node);
					}
				}
			}
			if (snapshot != null) {
				// last snapshot that finished parsing
				list.add(snapshot);
			}
			snapshots = list.toArray(new MassifSnapshot[list.size()]);
		}
	}

