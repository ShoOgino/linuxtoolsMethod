    public void openEditorForNode(MassifHeapTreeNode element) {
    	IRemoteFileProxy proxy = null;
    	try {
    		proxy = RemoteProxyManager.getInstance().getFileProxy(ValgrindUIPlugin.getDefault().getProfiledProject());
    	} catch (CoreException e1) {
    		e1.printStackTrace();
    		return;
    	}
    	IFileStore fs = proxy.getResource(element.getFilename());

    	// New versions of massif (e.g. 3.10) prints the full path
    	if(fs.fetchInfo().exists()) {
    		try {
    			ProfileUIUtils.openEditorAndSelect(element.getFilename(), element.getLine(), ValgrindUIPlugin.getDefault().getProfiledProject());
    		} catch (BadLocationException | CoreException e) {
    			// do nothing, the editor will not open.
    			e.printStackTrace();
    		}
    	}
    	else {
    		// do source lookup
    		if (locator instanceof ISourceLookupDirector) {
    			Object obj = ((ISourceLookupDirector) locator).getSourceElement(element.getFilename());
    			try {
    				if (obj instanceof IFile) {
    					ProfileUIUtils.openEditorAndSelect(((IFile)obj), element.getLine());
    				}
    			} catch (PartInitException|BadLocationException e) {
    				e.printStackTrace();
    			}
    		}
    	}
    }

