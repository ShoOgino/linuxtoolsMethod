	@Override
	public void createPartControl(Composite parent) {
		top = new Composite(parent, SWT.NONE);
		stackLayout = new StackLayout();
		top.setLayout(stackLayout);
		top.setLayoutData(new GridData(GridData.FILL_BOTH));
		
		viewer = new TableViewer(top, SWT.SINGLE | SWT.BORDER | SWT.FULL_SELECTION);

		Table table = viewer.getTable();
		table.setLayoutData(new GridData(GridData.FILL_BOTH));
		table.setHeaderVisible(true);
		table.setLinesVisible(true);

		String[] columnTitles = { Messages.getString("MassifViewPart.Snapshot"), Messages.getString("MassifViewPart.Time"), Messages.getString("MassifViewPart.Total"), Messages.getString("MassifViewPart.Useful_Heap"), Messages.getString("MassifViewPart.Extra_Heap"), Messages.getString("MassifViewPart.Stacks") }; //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$

		for (int i = 0; i < columnTitles.length; i++) {
			TableViewerColumn column = new TableViewerColumn(viewer, SWT.NONE);
			column.getColumn().setText(columnTitles[i]);
			column.getColumn().setWidth(COLUMN_SIZE);
			column.getColumn().setResizable(true);
		}
		table.setHeaderVisible(true);
		table.setLinesVisible(true);

		viewer.setContentProvider(new ArrayContentProvider());	
		viewer.setLabelProvider(new MassifLabelProvider());
		
		treeViewer = new MassifTreeViewer(top);
		treeViewer.getControl().setLayoutData(new GridData(GridData.FILL_BOTH));
		
		viewer.addDoubleClickListener(new IDoubleClickListener() {
			public void doubleClick(DoubleClickEvent event) {
				MassifSnapshot snapshot = (MassifSnapshot) ((IStructuredSelection) event.getSelection()).getFirstElement();
				if (snapshot.getType() != SnapshotType.EMPTY) {
					treeAction.setChecked(true);
					setTopControl(treeViewer.getControl());
					treeViewer.setSelection(new StructuredSelection(snapshot.getRoot()), true);
					treeViewer.expandToLevel(snapshot.getRoot(), TreeViewer.ALL_LEVELS);
				}
			}	
		});
			
		setTopControl(viewer.getControl());
	}

