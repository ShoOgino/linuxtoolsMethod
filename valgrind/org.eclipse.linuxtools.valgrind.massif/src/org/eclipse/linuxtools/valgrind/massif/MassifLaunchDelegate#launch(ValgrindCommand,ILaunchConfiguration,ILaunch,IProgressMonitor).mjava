	public void launch(ValgrindCommand command, ILaunchConfiguration config, ILaunch launch, IProgressMonitor monitor)
	throws CoreException {
		MassifPlugin.getDefault().setLaunch(launch);
		ArrayList<MassifSnapshot> list = new ArrayList<MassifSnapshot>();
		try {
			command.getProcess().waitFor();

			File[] massifOutputs = command.getTempDir().listFiles(MASSIF_FILTER);
			for (File output : massifOutputs) {
				MassifParser parser = new MassifParser(output);
				list.addAll(Arrays.asList(parser.getSnapshots()));
			}
			
			snapshots = list.toArray(new MassifSnapshot[list.size()]);
			
			Display.getDefault().syncExec(new Runnable() {
				public void run() {
					try {
						IWorkbenchPage activePage = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage();
						activePage.showView(ValgrindUIPlugin.VIEW_ID);

						ValgrindViewPart view = ValgrindUIPlugin.getDefault().getView();
						view.createDynamicView(TOOL_ID);
						IValgrindToolView massifPart = view.getDynamicView();
						if (massifPart instanceof MassifViewPart) {
							((MassifViewPart) massifPart).setSnapshots(snapshots);
						}						
						view.refreshView();
					} catch (PartInitException e) {
						e.printStackTrace();
					} catch (CoreException e) {
						e.printStackTrace();
					}
				}					
			});
		} catch (InterruptedException e) {
		} catch (IOException e) {
			e.printStackTrace();
			abort(Messages.getString("MassifLaunchDelegate.Error_parsing_output"), e, ICDTLaunchConfigurationConstants.ERR_INTERNAL_ERROR); //$NON-NLS-1$
		}

	}

