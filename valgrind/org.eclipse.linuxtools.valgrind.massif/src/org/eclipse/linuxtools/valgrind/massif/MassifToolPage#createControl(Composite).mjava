	public void createControl(Composite parent) {
		ScrolledComposite sc = new ScrolledComposite(parent, SWT.H_SCROLL | SWT.V_SCROLL);
		sc.setLayoutData(new GridData(GridData.FILL_BOTH));
		sc.setExpandHorizontal(true);
		sc.setExpandVertical(true);
		Composite top = new Composite(sc, SWT.NONE);
		
		GridLayout topLayout = new GridLayout(2, true);
		topLayout.horizontalSpacing = 10;
		top.setLayout(topLayout);
		top.setLayoutData(new GridData(GridData.FILL_BOTH));
		
		Composite heapTop = new Composite(top, SWT.NONE);
		heapTop.setLayout(new GridLayout(2, false));
		
		Label heapLabel = new Label(heapTop, SWT.NONE);
		heapLabel.setText(Messages.getString("MassifToolPage.profile_heap")); //$NON-NLS-1$
		
		heapButton = new Button(heapTop, SWT.CHECK);
		heapButton.addSelectionListener(selectListener);		
		
		Composite heapAdminTop = new Composite(top, SWT.NONE);
		heapAdminTop.setLayout(new GridLayout(2, false));
		
		Label heapAdminLabel = new Label(heapAdminTop, SWT.NONE);
		heapAdminLabel.setText(Messages.getString("MassifToolPage.administrative_bytes")); //$NON-NLS-1$
		
		heapAdminSpinner = new Spinner(heapAdminTop, SWT.BORDER);		
		heapAdminSpinner.addModifyListener(modifyListener);
			
		Composite stacksTop = new Composite(top, SWT.NONE);
		stacksTop.setLayout(new GridLayout(2, false));
		
		Label stacksLabel = new Label(stacksTop, SWT.NONE);
		stacksLabel.setText(Messages.getString("MassifToolPage.profile_stack")); //$NON-NLS-1$
		
		stacksButton = new Button(stacksTop, SWT.CHECK);
		stacksButton.addSelectionListener(selectListener);
		
		Composite depthTop = new Composite(top, SWT.NONE);
		depthTop.setLayout(new GridLayout(2, false));
		
		Label depthLabel = new Label(depthTop, SWT.NONE);
		depthLabel.setText(Messages.getString("MassifToolPage.allocation_tree_depth")); //$NON-NLS-1$
		
		depthSpinner = new Spinner(depthTop, SWT.BORDER);		
		depthSpinner.addModifyListener(modifyListener);
		
		Composite thresholdTop = new Composite(top, SWT.NONE);
		thresholdTop.setLayout(new GridLayout(3, false));
		
		Label thresholdLabel = new Label(thresholdTop, SWT.NONE);
		thresholdLabel.setText(Messages.getString("MassifToolPage.heap_allocation_threshold")); //$NON-NLS-1$
		
		thresholdSpinner = new Spinner(thresholdTop, SWT.BORDER);
		thresholdSpinner.setDigits(1);
		thresholdSpinner.setMaximum(1000);
		thresholdSpinner.addModifyListener(modifyListener);
		
		Label thresholdPercentLabel = new Label(thresholdTop, SWT.NONE);
		thresholdPercentLabel.setText("%"); //$NON-NLS-1$
		
		Composite peakInaccuracyTop = new Composite(top, SWT.NONE);
		peakInaccuracyTop.setLayout(new GridLayout(3, false));
		
		Label peakInaccuracyLabel = new Label(peakInaccuracyTop, SWT.NONE);
		peakInaccuracyLabel.setText(Messages.getString("MassifToolPage.allocation_peak_inaccuracy")); //$NON-NLS-1$
		
		peakInaccuracySpinner = new Spinner(peakInaccuracyTop, SWT.BORDER);
		peakInaccuracySpinner.setDigits(1);
		peakInaccuracySpinner.setMaximum(1000);
		peakInaccuracySpinner.addModifyListener(modifyListener);
		
		Label peakInaccuracyPercentLabel = new Label(peakInaccuracyTop, SWT.NONE);
		peakInaccuracyPercentLabel.setText("%"); //$NON-NLS-1$
		
		Composite timeUnitTop = new Composite(top, SWT.NONE);
		timeUnitTop.setLayout(new GridLayout(2, false));
		
		Label timeUnitLabel = new Label(timeUnitTop, SWT.NONE);
		timeUnitLabel.setText(Messages.getString("MassifToolPage.time_unit")); //$NON-NLS-1$
		
		timeUnitCombo = new Combo(timeUnitTop, SWT.READ_ONLY);
		String[] items = new String[] { Messages.getString("MassifToolPage.instructions"), Messages.getString("MassifToolPage.milliseconds"), Messages.getString("MassifToolPage.bytes") }; //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
		timeUnitCombo.setItems(items);
		timeUnitCombo.addSelectionListener(selectListener);
		
		Composite detailedFreqTop = new Composite(top, SWT.NONE);
		detailedFreqTop.setLayout(new GridLayout(2, false));
		
		Label detailedFreqLabel = new Label(detailedFreqTop, SWT.NONE);
		detailedFreqLabel.setText(Messages.getString("MassifToolPage.detailed_snapshot_freq")); //$NON-NLS-1$
		
		detailedFreqSpinner = new Spinner(detailedFreqTop, SWT.BORDER);
		detailedFreqSpinner.setMaximum(Integer.MAX_VALUE);
		detailedFreqSpinner.addModifyListener(modifyListener);
		
		Composite maxSnapshotsTop = new Composite(top, SWT.NONE);
		maxSnapshotsTop.setLayout(new GridLayout(2, false));
		
		Label maxSnapshotsLabel = new Label(maxSnapshotsTop, SWT.NONE);
		maxSnapshotsLabel.setText(Messages.getString("MassifToolPage.max_snapshots")); //$NON-NLS-1$
		
		maxSnapshotsSpinner = new Spinner(maxSnapshotsTop, SWT.BORDER);
		maxSnapshotsSpinner.setMaximum(Integer.MAX_VALUE);
		maxSnapshotsSpinner.addModifyListener(modifyListener);
		
		Composite alignmentTop = new Composite(top, SWT.NONE);
		alignmentTop.setLayout(new GridLayout(2, false));
		
		Label alignmentLabel = new Label(alignmentTop, SWT.NONE);
		alignmentLabel.setText(Messages.getString("MassifToolPage.minimum_heap_block")); //$NON-NLS-1$
		
		alignmentSpinner = new PowerOfTwoSpinner(alignmentTop, SWT.BORDER);
		alignmentSpinner.setMinimum(8);
		alignmentSpinner.setMaximum(4096);
		alignmentSpinner.addModifyListener(modifyListener);
		
		Composite allocFnTop = new Composite(top, SWT.NONE);
		allocFnTop.setLayout(new GridLayout(3, false));
		allocFnTop.setLayoutData(new GridData(SWT.BEGINNING, SWT.BEGINNING, false, false, 2, 1));
		
		Label allocFnLabel = new Label(allocFnTop, SWT.NONE);
		allocFnLabel.setText(Messages.getString("MassifToolPage.allocation_functions")); //$NON-NLS-1$
		allocFnLabel.setLayoutData(new GridData(SWT.BEGINNING, SWT.BEGINNING, false, false));
				
		createAllocFnControls(allocFnTop);
		
		sc.setContent(top);
		sc.setMinSize(top.computeSize(SWT.DEFAULT, SWT.DEFAULT));
	}

