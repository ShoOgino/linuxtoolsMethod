    @Override
    public void createControl(Composite parent) {
        Composite top = new Composite(parent, SWT.NONE);
        GridLayout helgrindLayout = new GridLayout(2, true);
        top.setLayout(helgrindLayout);
        top.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));

        lockordersButton = new Button(top, SWT.CHECK);
        lockordersButton.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
        lockordersButton.setText(Messages.getString("HelgrindToolPage.track_lockorders")); //$NON-NLS-1$
        lockordersButton.addSelectionListener(selectListener);

        Composite historyTop = new Composite(top, SWT.NONE);
        historyTop.setLayout(new GridLayout(2, false));
        historyTop.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));

        Label historyLabel = new Label(historyTop, SWT.NONE);
        historyLabel.setText(Messages.getString("HelgrindToolPage.history_level")); //$NON-NLS-1$
        historyCombo = new Combo(historyTop, SWT.READ_ONLY);
        String[] historyOpts = { HelgrindLaunchConstants.HISTORY_FULL, HelgrindLaunchConstants.HISTORY_APPROX, HelgrindLaunchConstants.HISTORY_NONE };
        historyCombo.setItems(historyOpts);
        historyCombo.addSelectionListener(selectListener);

        Composite conflictCacheSizeTop = new Composite(top, SWT.NONE);
        conflictCacheSizeTop.setLayout(new GridLayout(2, false));
        conflictCacheSizeTop.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));

        Label cacheSizeLabel = new Label(conflictCacheSizeTop, SWT.NONE);
        cacheSizeLabel.setText(Messages.getString("HelgrindToolPage.cache_size")); //$NON-NLS-1$
        cacheSizeSpinner = new Spinner(conflictCacheSizeTop, SWT.BORDER);
        cacheSizeSpinner.setMaximum(Integer.MAX_VALUE);
        cacheSizeSpinner.addModifyListener(modifyListener);
    }

