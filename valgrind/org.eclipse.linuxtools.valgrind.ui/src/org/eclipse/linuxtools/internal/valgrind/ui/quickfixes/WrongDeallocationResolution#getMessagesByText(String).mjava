	/**
	 * Returns all of the messages from the currently active Valgrind view that
	 * contains a given {@link String} in their description.
	 * @param text the {@link String} to match the Valgrind messages' descriptions
	 * @return
	 */
	private IValgrindMessage[] getMessagesByText(String text) throws ValgrindMessagesException{
		ValgrindViewPart valgrindView = ValgrindUIPlugin.getDefault().getView();
		ArrayList<IValgrindMessage> foundMessages = new ArrayList<IValgrindMessage>();

		if(valgrindView == null){
			throw new ValgrindMessagesException();
		}
		IValgrindMessage[] messages = valgrindView.getMessages();

		if(messages == null || messages.length == 0){
			throw new ValgrindMessagesException();
		}

		for (IValgrindMessage message : messages) {
			if(message.getText().contains(text)){
				foundMessages.add(message);
			}
		}
		IValgrindMessage[] foundMessagesArray = new IValgrindMessage[foundMessages.size()];
		foundMessages.toArray(foundMessagesArray);
		return foundMessagesArray;
	}

