	public Version findValgrindVersion() throws CoreException {
		if (valgrindLocation == null) {
			findValgrindLocation();
		}
		if (valgrindVersion == null) {
			try {
				String verString = getValgrindCommand().whichVersion(valgrindLocation.toOSString());
				verString = verString.replace(VERSION_PREFIX, ""); //$NON-NLS-1$
				if (verString.indexOf(VERSION_DELIMITER) > 0) {
					verString = verString.substring(0, verString.indexOf(VERSION_DELIMITER));
				} 
				if (verString.length() > 0) {
					valgrindVersion = Version.parseVersion(verString);
				}
				else {
					throw new CoreException(new Status(IStatus.ERROR, PLUGIN_ID, NLS.bind(Messages.getString("ValgrindLaunchPlugin.Couldn't_determine_version"), valgrindLocation))); //$NON-NLS-1$
				}
			} catch (IOException e) {
				IStatus status = new Status(IStatus.ERROR, PLUGIN_ID, NLS.bind(Messages.getString("ValgrindLaunchPlugin.Couldn't_determine_version"), valgrindLocation), e); //$NON-NLS-1$
				throw new CoreException(status);
			}
		}
		return valgrindVersion;
	}

