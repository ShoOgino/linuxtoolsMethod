    @Test
    public void testDefaults() throws Exception {
        ILaunchConfigurationWorkingCopy wc = initConfig();
        ILaunch launch = saveAndLaunch(wc, "testDefaults"); //$NON-NLS-1$
        IProcess[] p = launch.getProcesses();
        assertTrue("process array should not be empty", p.length > 0);
        String cmd = p[0].getAttribute(IProcess.ATTR_CMDLINE);
        assertEquals(0, p[0].getExitValue());
        assertTrue(cmd.contains("--tool=cachegrind")); //$NON-NLS-1$
        assertFalse(cmd.contains("--xml=yes")); //$NON-NLS-1$
        assertTrue(cmd.contains("-q")); //$NON-NLS-1$
        assertTrue(cmd.contains("--trace-children=no")); //$NON-NLS-1$
        assertTrue(cmd.contains("--child-silent-after-fork=yes")); //$NON-NLS-1$
        assertTrue(cmd.contains("--demangle=yes")); //$NON-NLS-1$
        assertTrue(cmd.contains("--num-callers=12")); //$NON-NLS-1$
        assertTrue(cmd.contains("--error-limit=yes")); //$NON-NLS-1$
        assertTrue(cmd.contains("--show-below-main=no")); //$NON-NLS-1$
        assertFalse(cmd.contains("--suppressions")); //$NON-NLS-1$
        assertTrue(cmd.contains("--max-stackframe=2000000")); //$NON-NLS-1$
        assertTrue(cmd.contains("--run-libc-freeres=yes")); //$NON-NLS-1$

        assertTrue(cmd.contains("--cache-sim=yes")); //$NON-NLS-1$
        assertTrue(cmd.contains("--branch-sim=no")); //$NON-NLS-1$
    }

