	public CachegrindFunction(CachegrindFile parent, String name) {
		this.parent = parent;
		this.name = name;
		lines = new ArrayList<CachegrindLine>();

		IAdaptable pModel = parent.getModel();
		if (pModel instanceof ICElement) {
			ICElement element = (ICElement) pModel;
			try {
				if (element instanceof ITranslationUnit) {
					// Cachegrind labels parameter types for C++ methods
					int paramIndex = name.indexOf("("); //$NON-NLS-1$
					if (paramIndex >= 0) {
						name = name.substring(0, paramIndex);
					}

					model = findElement(name, (IParent) element);
					if (model == null) {
						while (name.contains(SCOPE_RESOLUTION)) {
							String[] parts = name.split(SCOPE_RESOLUTION, 2);
							String structureName = parts[0];
							name = parts[1];

							List<ICElement> dom = ((IParent) element).getChildrenOfType(ICElement.C_CLASS);
							dom.addAll(((IParent) element).getChildrenOfType(ICElement.C_STRUCT));
							dom.addAll(((IParent) element).getChildrenOfType(ICElement.C_UNION));
							for (int i = 0; i < dom.size(); i++) {
								ICElement e = dom.get(i);
								if (e instanceof IStructure && e.getElementName().equals(structureName)) {
									element = e;
								}
							}
						}
						model = findElement(name, (IParent) element);
					}
				}
			} catch (CoreException e) {
				e.printStackTrace();
			}
		}
	}

