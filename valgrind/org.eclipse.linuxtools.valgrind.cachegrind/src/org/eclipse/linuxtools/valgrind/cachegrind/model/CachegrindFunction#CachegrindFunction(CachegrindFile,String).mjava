	public CachegrindFunction(CachegrindFile parent, String name) {
		this.parent = parent;
		this.name = name;
		lines = new ArrayList<CachegrindLine>();

		IAdaptable pModel = parent.getModel();
		if (pModel instanceof ICElement) {
			ICElement element = (ICElement) pModel;
			try {
				if (element instanceof ITranslationUnit) {
					//FIXME Does this work for C++?
					//TODO create CachegrindClass and nest methods inside of it, like how the outline view does it
//					if (name.contains(SCOPE_RESOLUTION)) {
//						IStructure structure = null;
//						String structureName = name.substring(0, name.indexOf(SCOPE_RESOLUTION));
//						List<ICElement> dom = ((ITranslationUnit) element).getChildrenOfType(ICElement.C_CLASS);
//						dom.addAll(((ITranslationUnit) element).getChildrenOfType(ICElement.C_STRUCT));
//						dom.addAll(((ITranslationUnit) element).getChildrenOfType(ICElement.C_UNION));
//						for (int i = 0; i < dom.size(); i++) {
//							ICElement e = dom.get(i);
//							if (e instanceof IStructure && e.getElementName().equals(structureName)) {
//								structure = (IStructure) e;
//							}
//						}
//						if (structure != null) {
//							
//						}
//					}
//					else {
						List<ICElement> dom = ((ITranslationUnit) element).getChildrenOfType(ICElement.C_FUNCTION);
						for (int i = 0; i < dom.size(); i++) {
							ICElement func = dom.get(i);
							if (func instanceof IFunction && func.getElementName().equals(name)) {
								model = func;
							}
						}
//					}
				}
			} catch (CoreException e) {
				e.printStackTrace();
			}
		}
	}

