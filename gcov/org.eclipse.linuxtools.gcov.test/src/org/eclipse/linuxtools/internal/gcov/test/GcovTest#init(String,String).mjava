    public static SWTWorkbenchBot init(String projectName, String projectType)
            throws Exception {
        bot = new SWTWorkbenchBot();
        testProjectName = projectName;
        testProjectType = projectType;
        bot.captureScreenshot(projectName + ".beforeClass.1.jpg");
        try {
            bot.viewByTitle("Welcome").close();
            // hide Subclipse Usage stats popup if present/installed
            bot.shell("Subclipse Usage").activate();
            bot.button("Cancel").click();
        } catch (WidgetNotFoundException e) {
            // ignore
        }

        bot.perspectiveByLabel("C/C++").activate();
        for (SWTBotShell sh : bot.shells()) {
            if (sh.getText().startsWith("C/C++")) {
                sh.activate();
                mainShell = sh;
                break;
            }
        }

        bot.captureScreenshot(projectName + ".beforeClass.2.jpg");
        // Turn off automatic building by default
        SWTBotMenu windowsMenu = bot.menu("Window");
        windowsMenu.menu("Preferences").click();
        SWTBotShell shell = bot.shell("Preferences");
        shell.activate();
        bot.text().setText("Workspace");
        bot.waitUntil(new NodeAvailableAndSelect(bot.tree(), "General", "Workspace"));
        SWTBotCheckBox buildAuto = bot.checkBox("Build automatically");
        if (buildAuto != null && buildAuto.isChecked()) {
            buildAuto.click();
        }
        bot.waitUntil(new UnCheckTest(buildAuto));
        bot.button("Apply").click();
        bot.button("OK").click();
        bot.waitUntil(Conditions.shellCloses(shell));


        // define & repopulate project explorer
        projectExplorer = bot.viewByTitle(PROJECT_EXPLORER);
        createProject();
        populateProject();
        compileProject();
        return bot;
    }

