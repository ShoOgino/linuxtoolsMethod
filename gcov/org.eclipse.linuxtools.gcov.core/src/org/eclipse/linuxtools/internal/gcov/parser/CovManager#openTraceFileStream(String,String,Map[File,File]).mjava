    private DataInput openTraceFileStream(String filePath, String extension, Map<File, File> sourcePath)
            throws FileNotFoundException {
        Path p = new Path(filePath);
        // get the file path transformed to work on local OS (e.g. Windows)
        filePath = getTransformedPathString(p);
        File f = new File(filePath).getAbsoluteFile();
        String filename = f.getName();
        if (f.isFile() && f.canRead()) {
            FileInputStream fis = new FileInputStream(f);
            InputStream inputStream = new BufferedInputStream(fis);
            return new DataInputStream(inputStream);
        } else {
            String postfix = ""; //$NON-NLS-1$
            File dir = null;
            do {
                if (postfix.isEmpty()) {
                    postfix = f.getName();
                } else {
                    postfix = f.getName() + File.separator + postfix;
                }
                f = f.getParentFile();
                if (f != null) {
                    dir = sourcePath.get(f);
                } else {
                    break;
                }
            } while (dir == null);

            if (dir != null) {
                f = new File(dir, postfix);
                if (f.isFile() && f.canRead()) {
                    return openTraceFileStream(f.getAbsolutePath(), extension, sourcePath);
                }
            }

			// We need to ask user for location. Open up a dialog.
			final StringHolder holder = new StringHolder();
			final String filePathToUse = filePath;
			Display.getDefault().syncExec(() -> {
				Shell shell = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getShell();
				FileDialog fg = new FileDialog(shell, SWT.OPEN);
				fg.setFilterExtensions(new String[] { "*" + extension, "*.*", "*" }); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
				fg.setFileName(filename);
				fg.setText(NLS.bind(Messages.CovManager_No_FilePath_Error, new Object[] { filePathToUse, filename }));
				String s = fg.open();
				holder.setString(s);
			});
			// transform String path to stream
			String s = holder.getString();
            if (s == null) {
				return null;
            } else {
				f = new File(s).getAbsoluteFile();
				addSourceLookup(sourcePath, f, new File(filePath).getAbsoluteFile());
				if (f.isFile() && f.canRead()) {
					FileInputStream fis = new FileInputStream(f);
					InputStream inputStream = new BufferedInputStream(fis);
					return new DataInputStream(inputStream);
				}
            }
        }
        return null;
    }

