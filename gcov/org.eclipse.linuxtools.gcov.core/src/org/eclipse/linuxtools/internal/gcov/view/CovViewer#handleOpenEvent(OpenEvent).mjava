    @Override
    protected void handleOpenEvent(OpenEvent event) {

        IStructuredSelection selection = (IStructuredSelection) event
        .getSelection();
        TreeElement element = (TreeElement) selection.getFirstElement();

        if (element != null) {
            if (element.getParent() != null) {
                String sourceLoc = ""; //$NON-NLS-1$
                long lineNumber = 0;

                if (element.getClass() == CovFileTreeElement.class) {
                    sourceLoc = element.getName();
                } else if (element.getClass() == CovFunctionTreeElement.class) {
                    sourceLoc = ((CovFunctionTreeElement) element).getSourceFilePath();
                    lineNumber  =((CovFunctionTreeElement)element).getFirstLnNmbr();
                }
                CovManager cvm = (CovManager) this.getInput();
                SourceFile sourceFile = cvm.getSourceFile(sourceLoc);
                if (sourceFile != null) {
                    String binaryLoc = cvm.getBinaryPath();
                    IPath binaryPath = new Path(binaryLoc);
                    //FIXME EK-LINUXTOOLS: IFile binary = root.getFileForLocation(binaryPath);
                    IFile binary = STSymbolManager.sharedInstance.findFileFromPath(binaryPath);
                    IProject project = null;
                    if (binary != null) {
                        project = binary.getProject();
                    }

                    OpenSourceFileAction.openAnnotatedSourceFile(project,
                            binary, sourceFile, (int)lineNumber);
                }
            }
        }
    }

