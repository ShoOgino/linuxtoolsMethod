	@Override
	protected Control createContents(Composite parent) {
		initializeDialogUnits(parent);

		result= new Composite(parent, SWT.NONE);
		GridLayout layout= new GridLayout();
		layout.marginHeight= convertVerticalDLUsToPixels(IDialogConstants.VERTICAL_MARGIN);
		layout.marginWidth= 0;
		layout.numColumns= 1;
		result.setLayout(layout);
		String paths[][] = fillPaths();

		//defaults
		getPreferenceStore().setDefault(LaunchCoreConstants.LINUXTOOLS_PATH_SYSTEM_NAME, LinuxtoolsPathProperty.getInstance().getLinuxtoolsPathSystemDefault());
		getPreferenceStore().setDefault(LINUXTOOLS_PATH_COMBO_NAME, LinuxtoolsPathProperty.getInstance().getLinuxtoolsPathDefault());

		// Add radio buttons
		Composite radios = new Composite(result, SWT.NONE);
		GridLayout layoutRadios= new GridLayout();
		layoutRadios.marginWidth= 0;
		layoutRadios.numColumns= 1;
		radios.setLayout(layoutRadios);

		Composite space = new Composite(result, SWT.NONE);

		boolean systemPathSelected = getPreferenceStore().getBoolean(LaunchCoreConstants.LINUXTOOLS_PATH_SYSTEM_NAME);
		systemEnvButton = new Button(radios, SWT.RADIO);
		systemEnvButton.setText(Messages.LINUXTOOLS_PATH_SYSTEM_ENV);
		systemEnvButton.setSelection(systemPathSelected);
		systemEnvButton.addSelectionListener(new SelectionAdapter() {
				@Override
				public void widgetSelected(SelectionEvent e) {
					updateOptionsEnable();
				}
		});

		customButton = new Button(radios, SWT.RADIO);
		customButton.setText(Messages.LINUXTOOLS_PATH_CUSTOM);
		customButton.setToolTipText(Messages.LINUXTOOLS_PATH_CUSTOM_TOOLTIP);
		customButton.setSelection(!systemPathSelected);

		//Add combo box
		linuxtoolsPathCombo = new CustomComboFieldEditor(
									LINUXTOOLS_PATH_COMBO_NAME,
									Messages.LINUXTOOLS_PATH_COMBO,
									paths,
									result);
		linuxtoolsPathCombo.setPage(this);
		linuxtoolsPathCombo.setPreferenceStore(getPreferenceStore());
		linuxtoolsPathCombo.load();
		linuxtoolsPathCombo.setPropertyChangeListener(new IPropertyChangeListener (){
			@Override
			public void propertyChange(PropertyChangeEvent event) {
				customSelected = event.getNewValue().toString().equals(""); //$NON-NLS-1$
				if (!customSelected){
					linuxtoolsPath.setStringValue(event.getNewValue().toString());
				}
				updateOptionsEnable();
			}
		});

		//Add textbox
		linuxtoolsPath = new StringFieldEditor(
				LaunchCoreConstants.LINUXTOOLS_PATH_NAME,
				Messages.LINUXTOOLS_PATH, result);

		linuxtoolsPath.setPage(this);
		linuxtoolsPath.setPreferenceStore(getPreferenceStore());
		linuxtoolsPath.getTextControl(result).setToolTipText(Messages.LINUXTOOLS_PATH_TOOLTIP);

		String selected = getPreferenceStore().getString(LINUXTOOLS_PATH_COMBO_NAME);
		customSelected = selected.equals(""); //$NON-NLS-1$
		getPreferenceStore().setDefault(LaunchCoreConstants.LINUXTOOLS_PATH_NAME, LinuxtoolsPathProperty.getInstance().getLinuxtoolsPathDefault());
		linuxtoolsPath.load();
		linuxtoolsPathCombo.setSelectedValue(linuxtoolsPath.getStringValue());
		Dialog.applyDialogFont(result);
		updateOptionsEnable();
		return result;
	}

