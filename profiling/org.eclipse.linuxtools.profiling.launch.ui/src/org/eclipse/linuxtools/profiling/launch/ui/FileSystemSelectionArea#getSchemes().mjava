	private FileSystemElement[] getSchemes() {
		if (fsElements == null) {
			fsElements = new LinkedList<FileSystemElement>();

			// Add all of the ones declared by the registry.
			IExtensionPoint extensionPoint = Platform.getExtensionRegistry().getExtensionPoint(Activator.PLUGIN_ID, EXTENSION_POINT_ID);
			IConfigurationElement[] infos = extensionPoint.getConfigurationElements();
			for (int i = 0; i < infos.length; i++) {
				IConfigurationElement configurationElement = infos[i];
				if (configurationElement.getName().equals(RESOURCE_SELECTOR_PROXY_NAME)) {
					IRemoteResourceSelectorProxy remoteSelector = null;
					try {
						Object obj = configurationElement.createExecutableExtension(EXT_ATTR_CLASS);
						if (obj instanceof IRemoteResourceSelectorProxy) {
							remoteSelector = (IRemoteResourceSelectorProxy)obj;
						}
					} catch (CoreException e) {
						Activator.log(IStatus.ERROR, ResourceSelectorWidgetMessages.FileSystemSelectionArea_exception_while_creating_runnable_class + configurationElement.getAttribute(EXT_ATTR_CLASS), e);
					}
					FileSystemElement element = new FileSystemElement(
							configurationElement.getAttribute(SCHEME_ID),
							configurationElement.getAttribute(SCHEME_LABEL_ID),
							Boolean.valueOf(configurationElement.getAttribute(IS_DEFAULT_ID)),
							remoteSelector);
					fsElements.addLast(element);
				}
			}
		}
		return fsElements.toArray(new FileSystemElement[fsElements.size()]);
	}

