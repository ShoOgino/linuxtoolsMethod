	/**
	 * Verify the validity of executable path. If the executable is to be
	 * copied, then no additional verification is required. Otherwise, the path
	 * must point to an existing file.
	 *
	 * @param monitor
	 *            progress monitor
	 * @return IPath representing path to the executable (either local or
	 *         remote)
	 * @throws CoreException
	 *             if the resource can't be found or the monitor was canceled.
	 * @since 5.0
	 */
	public IPath verifyExecutablePath(
			IProgressMonitor monitor) throws CoreException {
		String executablePath = getExecutablePath();
		URI executableURI;

		try {
			executableURI = new URI(executablePath);
		} catch (URISyntaxException e) {
			return null;
		}
		RemoteConnection rc = new RemoteConnection(executableURI);
		IFileStore fs = rc.getRmtFileProxy().getResource(executableURI.getPath());
		IFileInfo fi = fs.fetchInfo();

		if (fi.exists())
			return Path.fromOSString(executableURI.getPath());
		else
			return null;
	}

