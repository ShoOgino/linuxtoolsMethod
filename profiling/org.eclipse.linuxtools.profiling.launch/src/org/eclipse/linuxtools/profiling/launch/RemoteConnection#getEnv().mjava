	/**
	 * Returns the current environment from the remote host.  This method returns
	 * the environment variables as a map to make lookups and replacements simpler.
	 * @return Map&lt;String,String&gt; with the environment variable names as keys.
	 * @throws CoreException
	 */
	public Map<String,String> getEnv() throws CoreException {
		IPath envPath = Path.fromOSString(ENV_CMD);
		ByteArrayOutputStream stdout = new ByteArrayOutputStream();
		ByteArrayOutputStream stderr = new ByteArrayOutputStream();
		String empty[] = new String[0];

		rmtCmdLauncher.execute(envPath, empty, empty, null, new NullProgressMonitor());
		rmtCmdLauncher.waitAndRead(stdout, stderr, new NullProgressMonitor());
		Map<String,String> env = new HashMap<String, String>();
		String envLines[] = getLines(stdout.toString());
		// Skip the first line, which is just env command being issued
		for (int idx = 1; idx < envLines.length; idx++) {
			String keyAndVal[] = envLines[idx].split("=", 2); //$NON-NLS-1$
			// If there's a full "<env_var>=<value>|<null>" expression, add this var to the map
			// Note: <value> may be an empty string.
			if (keyAndVal.length == 2)
				env.put(keyAndVal[0], keyAndVal[1]);
			else if (keyAndVal.length == 1)
				env.put(keyAndVal[0], null);
		}
		return env;
	}

