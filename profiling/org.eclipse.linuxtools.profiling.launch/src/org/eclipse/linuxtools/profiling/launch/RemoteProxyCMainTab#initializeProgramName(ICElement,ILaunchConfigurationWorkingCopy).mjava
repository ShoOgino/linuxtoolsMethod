	/**
	 * Set the program name attributes on the working copy based on the
	 * ICElement
	 */
	protected void initializeProgramName(ICElement cElement,
			ILaunchConfigurationWorkingCopy config) {
		boolean renamed = false;

		if (!(cElement instanceof IBinary)) {
			cElement = cElement.getCProject();
		}

		if (cElement instanceof ICProject) {
			IProject project = cElement.getCProject().getProject();
			String name = project.getName();
			ICProjectDescription projDes = CCorePlugin.getDefault()
					.getProjectDescription(project);
			if (projDes != null) {
				String buildConfigName = projDes.getActiveConfiguration()
						.getName();
				// Bug 234951
				name = NLS.bind(LaunchMessages.CMainTab_Configuration_name,
						name, buildConfigName);
			}
			name = getLaunchConfigurationDialog().generateName(name);
			config.rename(name);
			renamed = true;
		}

		IBinary binary = null;
		if (cElement instanceof ICProject) {
			IBinary[] bins = getBinaryFiles((ICProject) cElement);
			if (bins != null && bins.length == 1) {
				binary = bins[0];
			}
		} else if (cElement instanceof IBinary) {
			binary = (IBinary) cElement;
		}

		String projectDir = EMPTY_STRING;
		ConfigUtils configUtils = new ConfigUtils(config);
		IProject project = null;
		try {
			project = ConfigUtils.getProject(configUtils.getProjectName());
		} catch (CoreException e) {
			setErrorMessage(fPreviouslyCheckedWorkingDirErrorMsg = ProxyLaunchMessages.error_accessing_working_directory);
		}
		if(project != null){
			try {
				projectDir = RemoteProxyManager.getInstance().getRemoteProjectLocation(project);
			} catch (CoreException e) {
				setErrorMessage(fPreviouslyCheckedWorkingDirErrorMsg = ProxyLaunchMessages.error_accessing_working_directory);
			}
		}

		String path = EMPTY_STRING;
		if (binary != null) {
			path = binary.getResource().getProjectRelativePath().toOSString();
			if (!renamed) {
				String name = binary.getElementName();
				int index = name.lastIndexOf('.');
				if (index > 0) {
					name = name.substring(0, index);
				}
				name = getLaunchConfigurationDialog().generateName(name);
				config.rename(name);
				renamed = true;
			}
		}
		config.setAttribute(
				ICDTLaunchConfigurationConstants.ATTR_PROGRAM_NAME, projectDir + IPath.SEPARATOR + path);

		if (!renamed) {
			String name = getLaunchConfigurationDialog().generateName(
					cElement.getCProject().getElementName());
			config.rename(name);
		}
	}

