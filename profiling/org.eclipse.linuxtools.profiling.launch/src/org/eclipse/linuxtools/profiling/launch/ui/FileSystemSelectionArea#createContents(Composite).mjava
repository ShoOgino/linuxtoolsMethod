    /**
     * Create the contents of the receiver in composite.
     * @param composite Parent composite for created components.
     */
    public void createContents(Composite composite) {

        fileSystemTitle = new Label(composite, SWT.NONE);
        fileSystemTitle.setText(ResourceSelectorWidgetMessages.fileSystemSelectionText);
        fileSystemTitle.setFont(composite.getFont());

        fileSystems = new ComboViewer(composite, SWT.READ_ONLY);
        fileSystems.getControl().setFont(composite.getFont());

        fileSystems.setLabelProvider(new LabelProvider() {
            @Override
            public String getText(Object element) {
                return ((FileSystemElement)element).getSchemeLabel();
            }
        });

        fileSystems.setContentProvider(new IStructuredContentProvider() {

            @Override
            public void dispose() {
                // Nothing to do
            }

            @Override
            public Object[] getElements(Object inputElement) {
                return getSchemes();
            }

            @Override
            public void inputChanged(org.eclipse.jface.viewers.Viewer viewer,
                    Object oldInput, Object newInput) {
                // Nothing to do
            }
        });

        fileSystems.setInput(this);
        Iterator<FileSystemElement> fsEltItr = fsElements.iterator();
        boolean foundDefault = false;
        while (fsEltItr.hasNext()) {
            FileSystemElement fsElt = fsEltItr.next();
            if (fsElt.getIsDefault()) {
                if (foundDefault) {
                    ProfileLaunchPlugin.log(IStatus.WARNING, ResourceSelectorWidgetMessages.FileSystemSelectionArea_found_multiple_default_extensions + fsElt.getScheme());
                    // use only the first one we found marked as default
                    continue;
                }
                fileSystems.setSelection(new StructuredSelection(fsElt));
                foundDefault = true;
            }
        }
    }

