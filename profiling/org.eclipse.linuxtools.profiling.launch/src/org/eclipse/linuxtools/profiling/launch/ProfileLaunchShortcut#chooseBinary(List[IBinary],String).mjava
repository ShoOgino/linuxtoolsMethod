    /**
     * Prompts the user to select a  binary
     * @param binList The list of binaries.
     * @param mode Old and not used parameter.
     *
     * @return the selected binary or <code>null</code> if none.
     */
    // TODO remove unused mode parameter for 4.0
    protected IBinary chooseBinary(List<IBinary> binList, String mode) {
        ILabelProvider programLabelProvider = new CElementLabelProvider() {
            @Override
            public String getText(Object element) {
                if (element instanceof IBinary) {
                    return ((IBinary)element).getPath().lastSegment();
                }
                return super.getText(element);
            }
        };

        ILabelProvider qualifierLabelProvider = new CElementLabelProvider() {
            @Override
            public String getText(Object element) {
                if (element instanceof IBinary) {
                    IBinary bin = (IBinary)element;
                    StringBuilder name = new StringBuilder();
                    name.append(bin.getCPU() + (bin.isLittleEndian() ? "le" : "be")); //$NON-NLS-1$ //$NON-NLS-2$
                    name.append(" - "); //$NON-NLS-1$
                    name.append(bin.getPath().toString());
                    return name.toString();
                }
                return super.getText(element);
            }
        };

        TwoPaneElementSelector dialog = new TwoPaneElementSelector(getActiveWorkbenchShell(), programLabelProvider, qualifierLabelProvider);
        dialog.setElements(binList.toArray());
        dialog.setTitle(Messages.ProfileLaunchShortcut_Profile);
        dialog.setMessage(Messages.ProfileLaunchShortcut_Choose_a_local_application);
        dialog.setUpperListLabel(Messages.ProfileLaunchShortcut_Binaries);
        dialog.setLowerListLabel(Messages.ProfileLaunchShortcut_Qualifier);
        dialog.setMultipleSelection(false);
        if (dialog.open() == Window.OK) {
            return (IBinary) dialog.getFirstResult();
        }

        return null;
    }

