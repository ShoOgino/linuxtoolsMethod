    /**
     * Get a profiling tab that is associated with the specified id.
     * This looks through extensions of the extension point
     * <code>org.eclipse.linuxtools.profiling.launch.launchProvider</code> that have a
     * specific id.
     *
     * @param id A unique identifier
     * @return a tab that implements <code>ProfileLaunchConfigurationTabGroup</code>
     * and provides the necessary profiling type, or <code>null</code> if none could be found.
     * @since 2.0
     */
    public static ProfileLaunchConfigurationTabGroup getTabGroupProviderFromId(
            String id) {
        IConfigurationElement[] configs = getConfigurationElements();
        for (IConfigurationElement config : configs) {
            if (config.getName().equals("provider")) { //$NON-NLS-1$
                String currentId = config.getAttribute("id"); //$NON-NLS-1$
                String tabgroup = config.getAttribute("tabgroup"); //$NON-NLS-1$
                if (currentId != null && tabgroup != null
                        && currentId.equals(id)) {
                    try {
                        Object obj = config
                                .createExecutableExtension("tabgroup"); //$NON-NLS-1$
                        if (obj instanceof ProfileLaunchConfigurationTabGroup) {
                            return (ProfileLaunchConfigurationTabGroup) obj;
                        }
                    } catch (CoreException e) {
                        // continue, perhaps another configuration will succeed
                    }
                }
            }
        }
        return null;
    }

