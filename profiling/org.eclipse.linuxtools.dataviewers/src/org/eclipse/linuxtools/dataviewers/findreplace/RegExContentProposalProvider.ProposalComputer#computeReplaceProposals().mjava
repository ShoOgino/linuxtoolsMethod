        /**
         * Computes applicable proposals for the replace field.
         * 
         * @return the proposals
         */
        public IContentProposal[] computeReplaceProposals() {
            if (fDocumentOffset > 0 && '$' == fExpression.charAt(fDocumentOffset - 1)) {
                addProposal("", RegExMessages.displayString_dollar, RegExMessages.additionalInfo_dollar); //$NON-NLS-1$
            } else {
                addProposal("$", RegExMessages.displayString_dollar, RegExMessages.additionalInfo_dollar); //$NON-NLS-1$
                addBsProposal("\\", RegExMessages.displayString_replace_bs, RegExMessages.additionalInfo_replace_bs); //$NON-NLS-1$
                addProposal("\t", RegExMessages.displayString_tab, RegExMessages.additionalInfo_tab); //$NON-NLS-1$
            }
            return fProposals.toArray(new IContentProposal[fProposals.size()]);
        }

