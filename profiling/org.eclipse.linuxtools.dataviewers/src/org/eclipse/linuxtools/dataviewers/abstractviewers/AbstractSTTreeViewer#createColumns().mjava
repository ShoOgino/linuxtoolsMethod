    /**
     * Create the columns in the tree.
     *
     */
    @Override
    protected void createColumns() {
        Tree tree = getViewer().getTree();
        TableLayout layout = new TableLayout();
        tree.setLayout(layout);
        tree.setHeaderVisible(true);
        tree.setLinesVisible(true);

        for (int i = 0; i < getAllFields().length; i++) {
            ISTDataViewersField field = getAllFields()[i];
            TreeColumn tc = new TreeColumn(tree, field.getAlignment(), i);
            tc.setText(field.getColumnHeaderText());
            tc.setToolTipText(field.getColumnHeaderTooltip());
            tc.setImage(field.getColumnHeaderImage());
            tc.setWidth(field.getPreferredWidth());
            tc.setResizable(true);
            tc.setMoveable(true);

            tc.addSelectionListener(createHeaderListener());
            tc.setData(field);

            // defining the column label provider.
            // this has to be done after setting the column's data.
            TreeViewerColumn viewerColumn = new TreeViewerColumn(getViewer(), tc);
            viewerColumn.setLabelProvider(createColumnLabelProvider(tc));
        }

        tree.addMouseMoveListener(e -> {
		    Tree tree1 = (Tree) e.widget;
		    TreeItem item = tree1.getItem(new Point(e.x, e.y));
		    if (item == null) {
		        return;
		    }
		    tree1.setCursor(e.display.getSystemCursor(SWT.CURSOR_ARROW));
		});
    }

