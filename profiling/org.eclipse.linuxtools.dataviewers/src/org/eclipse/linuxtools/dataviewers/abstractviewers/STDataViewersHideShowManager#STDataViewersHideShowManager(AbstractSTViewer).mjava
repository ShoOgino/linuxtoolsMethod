    /*
     * Creates a new instance of STDataViewersHideShowManager Adding a ColumnSizeListener in order handle the column
     * width
     */
    public STDataViewersHideShowManager(AbstractSTViewer stViewer) {
        this.stViewer = stViewer;

        columns = stViewer.getColumns();
        int[] widths = new int[columns.length];
        int[] states = new int[columns.length];
        for (int i = 0; i < columns.length; i++) {
            widths[i] = stViewer.getColumnWidth(columns[i]);
            states[i] = STATE_SHOWN;
        }

        this.columnsWidth = widths;
        this.columnsState = states;

        this.defaultColumnsWidth = new int[columns.length];
        for (int i = columns.length; i-- > 0;) {
            ISTDataViewersField field = (ISTDataViewersField) columns[i].getData();
            this.defaultColumnsWidth[i] = field.getPreferredWidth();
            STColumnSizeListener l = new STColumnSizeListener(this);
            columnsSizeListener.put(columns[i], l);
            columns[i].addListener(SWT.Resize, l);
            columns[i].addDisposeListener(new DisposeListener() {

                @Override
				public void widgetDisposed(DisposeEvent e) {
                    Item column = (Item) e.widget;
                    column.removeListener(SWT.Resize, columnsSizeListener.get(column));

                }

            });
        }
    }

