    /**
     * Percentage drawer.
     */
    @Override
    public void handleEvent(Event event) {
        Item item = (Item) event.item;
        Display display = event.widget.getDisplay();
        int index = event.index;
        int widthcol = 0;

        if (event.widget instanceof Tree) {
            Tree tree = (Tree) event.widget;
            widthcol = tree.getColumn(index).getWidth();
        } else { // event.widget instanceof Table
            Table table = (Table) event.widget;
            widthcol = table.getColumn(index).getWidth();
        }

        float d = getPercentage(item.getData());
        int percent = (int) (d + 0.5);
        GC gc = event.gc;

        //--Define the size of the Progress bar.
        int totalProgBarLength = (int) (widthcol * 0.3); //This makes it grow/shrink dynamically.
        if (totalProgBarLength > 0) {
            // ------------------------------------------------------
            // ------------------- Draw Progress bar
            // ------------------------------------------------------

            // ---- Shared elements
            int totalProgBarHeight = (int) (event.height * 0.5);

            // --- Draw Green (covered) part
            gc.setBackground(display.getSystemColor(SWT.COLOR_DARK_GREEN));
            int progBarGreenWidth = (int) (totalProgBarLength * (percent * 0.01));
            int progBarGreenHorizontalPos = event.x;
            int progBarGreenHeight = (int) (event.height * 0.5);
            int progBarGreenVerticalPos = event.y + (totalProgBarHeight / 2) + 1;
            gc.fillRectangle(progBarGreenHorizontalPos, progBarGreenVerticalPos, progBarGreenWidth,
                    progBarGreenHeight);

            // --- Draw Red (uncovered) Part
            gc.setBackground(display.getSystemColor(SWT.COLOR_DARK_RED));
            int progBarRedWidth = totalProgBarLength - progBarGreenWidth;
            int progBarRedHorizontalPos = progBarGreenHorizontalPos + progBarGreenWidth;
            int progBarRedHeight = progBarGreenHeight;
            int progBarRedVerticalPos = progBarGreenVerticalPos;
            gc.fillRectangle(progBarRedHorizontalPos, progBarRedVerticalPos, progBarRedWidth,
                    progBarRedHeight);
        }
        // ------------------------------------------------------
        // ------------------- Draw text next to Progress bar
        // ------------------------------------------------------

        //------- Define the 'text' format.  % text     e.g 94.0%
        String text = "%";
        text = (isSettedNumberFormat() ? getNumberFormat().format(d) : d) + text;
        Point size = gc.textExtent(text);
        int offset = Math.max(0, (event.height - size.y) / 2);

        //------- Position the text
        Color foreground = gc.getForeground();
        gc.setForeground(display.getSystemColor(SWT.COLOR_LIST_FOREGROUND));

        //add offset of progress bar. (so that the text is to the right of the progress bar).
        int progBarOffset = totalProgBarLength + (widthcol / 20); //(prog bar size) + (20th of column widht)
        gc.drawText(text, event.x + progBarOffset, event.y + offset, true);
        gc.setForeground(foreground);
    }

