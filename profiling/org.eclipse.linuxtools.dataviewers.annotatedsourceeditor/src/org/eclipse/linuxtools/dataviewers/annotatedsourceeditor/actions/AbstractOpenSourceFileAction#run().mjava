    @Override
    public void run() {

        IWorkbenchWindow window = PlatformUI.getWorkbench().getActiveWorkbenchWindow();

        IFileStore fileStore = getFileStore();

        if (fileStore != null && !fileStore.fetchInfo().isDirectory()) {
            if (fileStore.fetchInfo().exists()) {
                long timeStamp = fileStore.fetchInfo().getLastModified();

                if (timeStamp > ts) {
                    MessageBox msg = new MessageBox(window.getShell(), SWT.ICON_WARNING | SWT.APPLICATION_MODAL
                            | SWT.YES | SWT.NO);
                    msg.setText(fileStore.toString());
                    msg.setMessage(NLS.bind(Messages.OpenSourceFileAction_warning_inconsistency, fileStore));
                }

                try {
                    IWorkbenchPage page = window.getActivePage();
                    if (page != null) {
                        IFileStore fs = EFS.getStore(fileStore.toURI());
                        IEditorInput input = getInput(fs);
                        page.openEditor(input, EDITOR_ID, false);
                    }
                } catch (Exception e) {
                    Status s = new Status(IStatus.ERROR, STAnnotatedSourceEditorActivator.PLUGIN_ID,
                            IStatus.ERROR, Messages.OpenSourceFileAction_view_error, e);
                    STAnnotatedSourceEditorActivator.getDefault().getLog().log(s);
                }
            } else {
				showMessage(NLS.bind(Messages.OpenSourceFileAction_file_dne,fileStore), window.getShell());
            }
        }

    }

