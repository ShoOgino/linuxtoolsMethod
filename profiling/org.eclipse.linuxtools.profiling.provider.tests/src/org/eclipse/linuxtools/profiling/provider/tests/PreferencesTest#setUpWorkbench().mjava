	@BeforeClass
	public static void setUpWorkbench() throws Exception {
		// Set up is based from from GcovTest{c,CPP}.

		SWTWorkbenchBot bot = new SWTWorkbenchBot();
		try {
			bot.viewByTitle("Welcome").close(); //$NON-NLS-1$
			// hide Subclipse Usage stats popup if present/installed
			bot.shell("Subclipse Usage").activate(); //$NON-NLS-1$
			bot.button("Cancel").click(); //$NON-NLS-1$
		} catch (WidgetNotFoundException e) {
			// ignore
		}

		// Set C/C++ perspective.
		bot.perspectiveByLabel("C/C++").activate(); //$NON-NLS-1$
		bot.sleep(500);
		for (SWTBotShell sh : bot.shells()) {
			if (sh.getText().startsWith("C/C++")) { //$NON-NLS-1$
				sh.activate();
				bot.sleep(500);
				break;
			}
		}

		// Turn off automatic building by default to avoid timing issues
		SWTBotMenu windowsMenu = bot.menu("Window"); //$NON-NLS-1$
		windowsMenu.menu("Preferences").click(); //$NON-NLS-1$
		SWTBotShell shell = bot.shell("Preferences"); //$NON-NLS-1$
		shell.activate();
		bot.text().setText("Workspace"); //$NON-NLS-1$
		bot.waitUntil(new NodeAvailableAndSelect(bot.tree(), "General", "Workspace")); //$NON-NLS-1$ //$NON-NLS-2$
		SWTBotCheckBox buildAuto = bot.checkBox("Build automatically"); //$NON-NLS-1$
		if (buildAuto != null && buildAuto.isChecked()) {
			buildAuto.click();
		}
		bot.sleep(1000);
		bot.button("Apply").click(); //$NON-NLS-1$
		bot.button("OK").click(); //$NON-NLS-1$
		bot.waitUntil(shellCloses(shell));
	}

