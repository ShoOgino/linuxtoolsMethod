    private static void checkDefaultPreference(String preferenceCategory, String profilingType){
        SWTWorkbenchBot bot = new SWTWorkbenchBot();

        // Open preferences shell.
        SWTBotMenu windowsMenu = bot.menu("Window"); //$NON-NLS-1$
        windowsMenu.menu("Preferences").click(); //$NON-NLS-1$
        SWTBotShell shell = bot.shell("Preferences"); //$NON-NLS-1$
        shell.activate();

        // Go to specified tree item in "Profiling Categories" preferences page.
        bot.text().setText(preferenceCategory);
        bot.waitUntil(new NodeAvailableAndSelect(bot.tree(),
                "C/C++", "Profiling", "Categories", preferenceCategory)); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$

        // Restore defaults.
        bot.button("Restore Defaults").click(); //$NON-NLS-1$
        bot.button("Apply").click(); //$NON-NLS-1$

        // Get information for default tool.
        String defaultToolId = ProviderFramework.getProviderIdToRun(null, profilingType);
        String defaultToolName = ProviderFramework.getToolInformationFromId(defaultToolId , "name"); //$NON-NLS-1$
        String defaultToolInfo = ProviderFramework.getToolInformationFromId(defaultToolId , "information"); //$NON-NLS-1$
        String defaultToolDescription = ProviderFramework.getToolInformationFromId(defaultToolId , "description"); //$NON-NLS-1$
        String defaultToolLabel = defaultToolName + " [" + defaultToolDescription + "]"; //$NON-NLS-1$ //$NON-NLS-2$

        // Assert default radio is as expected.
        SWTBotRadio defaultRadio = bot.radio(defaultToolLabel);
        assertNotNull(defaultRadio);
        assertEquals(defaultToolInfo, defaultRadio.getToolTipText());

        bot.button("Apply").click(); //$NON-NLS-1$
        bot.button("OK").click(); //$NON-NLS-1$
    }

