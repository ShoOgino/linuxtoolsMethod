	/**
	 * <h1>Get the tool that holds the option 'template'.</h1>
	 *
	 * <p> Each option has a parent tool. this acquires the 'ITool' <br>
	 * based on it's name from the active configuration. </p>
	 *
	 * <p> The parent tool is later read to acquire the option template, which is used to set an option. </p>
	 *
	 * @param parentToolName a string representing the parent of the option.  (like 'GCC C++ Compiler').
	 * @param activeConf The current active configuration of the project, from which we should be able to find the ITool name.
	 * @return the parent 'ITool' instance.
	 */
	@Deprecated
	private static ITool helperGetGccCompilerTool(String parentToolName, IConfiguration activeConf) {
		ITool[] tools = activeConf.getTools();
		ITool gccCompileriTool = null;
		for (ITool iTool : tools) {
			if (iTool.getName().equals(parentToolName)) {
				gccCompileriTool = iTool;
				break;
			}
		}
		return gccCompileriTool;
	}

