	@Test
	public void testGetOS() {
		String actualOS = null;
		try {
			/*
			 * Test got OS for local URIs and project
			 */
			actualOS = proxyManager.getOS(URI.create("/path/to/file"));
			assertNotNull(actualOS);
			assertTrue("Should have returned the OS name", !actualOS.isEmpty());
			actualOS = proxyManager.getOS(URI.create("file:/path/to/file"));
			assertNotNull(actualOS);
			assertTrue("Should have returned the OS name", !actualOS.isEmpty());
			actualOS = proxyManager.getOS(localProject.getLocationURI());
			assertNotNull(actualOS);
			assertTrue("Should have returned the OS name", !actualOS.isEmpty());
			actualOS = proxyManager.getOS(localProject);
			assertNotNull(actualOS);
			assertTrue("Should have returned the OS name", !actualOS.isEmpty());
			/*
			 * Test got OS for remote URIs and project
			 */
			actualOS = proxyManager.getOS(syncProject);
			assertNotNull(actualOS);
			assertTrue("Should have returned the OS name", !actualOS.isEmpty());
		} catch (CoreException e) {
			fail("Unabled to get OS name: " + e.getMessage());
		}

		/*
		 * Test the proxy for unsupported URIs
		 */
		try {
			// As of org.eclipse.remote 2.0, remotetools scheme is no longer
			// support
			actualOS = proxyManager.getOS(URI.create("remotetools://MyConnection/path/to/file"));
			fail("remotetools scheme should not be recognized");
		} catch (CoreException e) {
			assertTrue(true);
		}
	}

