	protected void buildProject(IProject proj) throws CoreException {
		IWorkspace wsp = ResourcesPlugin.getWorkspace();
		final IProject curProject = proj;
		ISchedulingRule rule = wsp.getRuleFactory().buildRule();
		Job buildJob = new Job("project build job") { //$NON-NLS-1$
			@Override
			protected IStatus run(IProgressMonitor monitor) {
				try {
					curProject.build(
							IncrementalProjectBuilder.FULL_BUILD, null);
				} catch (CoreException e) {
					fail(e.getStatus().getMessage());
				} catch (OperationCanceledException e) {
					fail(NLS.bind(Messages.getString("AbstractTest.Build_cancelled"), curProject.getName(), e.getMessage())); //$NON-NLS-1$
				}
				return Status.OK_STATUS;
			}
		};
		buildJob.setRule(rule);

		buildJob.schedule();

		try {
			buildJob.join();
		} catch (InterruptedException e) {
			fail(NLS.bind(Messages.getString("AbstractTest.Build_interrupted"), curProject.getName(), e.getMessage())); //$NON-NLS-1$
		}

		IStatus status = buildJob.getResult();
		if (status.getCode() != IStatus.OK) {
			fail(NLS.bind(Messages.getString("AbstractTest.Build_failed"), curProject.getName(), status.getMessage())); //$NON-NLS-1$
		}

		IWorkspaceRunnable runnable = new IWorkspaceRunnable() {
			public void run(IProgressMonitor monitor) throws CoreException {
				curProject.refreshLocal(IResource.DEPTH_INFINITE, null);
			}
		};

		wsp.run(runnable, wsp.getRoot(), IWorkspace.AVOID_UPDATE, null);
	}

