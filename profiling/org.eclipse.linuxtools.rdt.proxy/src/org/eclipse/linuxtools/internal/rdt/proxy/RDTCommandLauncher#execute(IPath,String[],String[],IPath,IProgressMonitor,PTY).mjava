    /**
     * @see org.eclipse.cdt.core.IRemoteCommandLauncher#execute(IPath, String[], String[], IPath, IProgressMonitor)
     */
    @Override
    public Process execute(IPath commandPath, String[] args, String[] env, IPath changeToDirectory, IProgressMonitor monitor, PTY pty) {
        try {
            // add platform specific arguments (shell invocation)
            fCommandArgs = constructCommandArray(commandPath.toOSString(), args);
            fShowCommand = true;
            IRemoteServices services = RemoteServices.getRemoteServices(uri);
            IRemoteConnection connection = services.getConnectionManager().getConnection(uri);
            IRemoteFileManager fm = connection.getFileManager();
            IRemoteProcessBuilder builder = connection.getProcessBuilder(Arrays.asList(fCommandArgs));

            if (changeToDirectory != null)
                builder.directory(fm.getResource(changeToDirectory.toString()));

            Map<String,String> envMap = builder.environment();

            for (int i = 0; i < env.length; ++i) {
                String s = env[i];
                String[] tokens = s.split("=", 2); //$NON-NLS-1$
                switch (tokens.length) {
                    case 1:
                        envMap.put(tokens[0], null);
                        break;
                    case 2:
                        envMap.put(tokens[0], tokens[1]);
                        break;
                    default:
                        Activator.log(IStatus.WARNING, Messages.RDTCommandLauncher_malformed_env_var_string + s);
                }
            }

            fProcess = builder.start();
            fErrorMessage = ""; //$NON-NLS-1$
        } catch (IOException e) {
            fErrorMessage = e.getMessage();
            return null;
        }
        return new RemoteProcessAdapter(fProcess);
    }

