    /*
     * (non-Javadoc)
     * 
     * @see org.eclipse.jface.dialogs.Dialog#createDialogArea(org.eclipse.swt.widgets.Composite)
     */
    @Override
    protected Control createDialogArea(Composite parent) {
        Composite composite = (Composite) super.createDialogArea(parent);

        Composite titleComp = new Composite(composite, SWT.NONE);
        titleComp.setLayout(new RowLayout(SWT.HORIZONTAL));

        Label icon = new Label(titleComp, SWT.NONE);
        icon.setImage(Activator.getImage("icons/chart_icon.png"));

        Label label = new Label(titleComp, SWT.WRAP);
        label.setText("Chart builder");
        GridData data = new GridData(GridData.GRAB_HORIZONTAL | GridData.GRAB_VERTICAL | GridData.HORIZONTAL_ALIGN_FILL
                | GridData.VERTICAL_ALIGN_CENTER);
        data.widthHint = convertHorizontalDLUsToPixels(IDialogConstants.MINIMUM_MESSAGE_AREA_WIDTH);
        titleComp.setLayoutData(data);

        Group chartTypeGroup = new Group(composite, SWT.NONE);
        data = new GridData(GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL);
        chartTypeGroup.setLayoutData(data);
        chartTypeGroup.setLayout(new GridLayout(2, false));
        chartTypeGroup.setText("Select your chart type");

        ValidateSelectionListener listener = new ValidateSelectionListener();

        barGraphButton = new Button(chartTypeGroup, SWT.RADIO);
        barGraphButton.setText("Bar graph");
        barGraphButton.addSelectionListener(listener);
        barGraphButton.addSelectionListener(new SelectionAdapter() {
            @Override
            public void widgetSelected(SelectionEvent e) {
                verticalBarsButton.setEnabled(barGraphButton.getSelection());
            }
        });
        data = new GridData();
        barGraphButton.setLayoutData(data);

        verticalBarsButton = new Button(chartTypeGroup, SWT.CHECK);
        verticalBarsButton.setText("Vertical bars");
        data = new GridData();
        verticalBarsButton.setLayoutData(data);

        pieChartButton = new Button(chartTypeGroup, SWT.RADIO);
        pieChartButton.setText("Pie chart");
        pieChartButton.addSelectionListener(listener);
        data = new GridData();
        data.horizontalSpan = 2;
        pieChartButton.setLayoutData(data);

        Group chartColumnGroup = new Group(composite, SWT.NONE);
        chartColumnGroup.setLayout(new GridLayout(1, true));
        data = new GridData(GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL);
        chartColumnGroup.setLayoutData(data);
        chartColumnGroup.setText("Select the columns(s) to show");

        addColumnButtons(chartColumnGroup, listener);

        errorMessageText = new Text(composite, SWT.READ_ONLY);
        errorMessageText.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL));
        errorMessageText.setBackground(errorMessageText.getDisplay().getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));

        applyDialogFont(composite);

        setWidgetsValues();

        return composite;
    }

