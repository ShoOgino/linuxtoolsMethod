	private void drawPieChart(PaintEvent e, int chartnum, Rectangle bounds) {
		double series[] = seriesValues[chartnum];
		int nelemSeries = series.length;
		double sumTotal = 0;

		pieSliceAngles[chartnum] = new int[nelemSeries - 1]; // Don't need first angle; it's always 0
		for (int i = 0; i < nelemSeries; i++) {
			sumTotal += series[i];
		}

		GC gc = e.gc;
		Font oldFont = gc.getFont();
		gc.setLineWidth(1);

		int pieX = bounds.x + (bounds.width - pieWidth) / 2;
		int pieY = bounds.y + (bounds.height - pieWidth) / 2;
		pieCenters[chartnum] = new Point(pieX + pieWidth / 2, pieY + pieWidth / 2);
		if (sumTotal == 0) {
			gc.drawOval(pieX, pieY, pieWidth, pieWidth);
		} else {
			double factor = 100 / sumTotal;
			int sweepAngle = 0;
			int incrementAngle = 0;
			int initialAngle = 90;
			for (int i = 0; i < nelemSeries; i++) {
				// Stored angles increase in clockwise direction from 0 degrees at 12:00
				if (i > 0) {
					pieSliceAngles[chartnum][i - 1] = 90 - initialAngle;
				}

				gc.setBackground(((IBarSeries) chart.getSeriesSet().getSeries()[i]).getBarColor());

				if (i == (nelemSeries - 1)) {
					sweepAngle = 360 - incrementAngle;
				} else {
					double angle = series[i] * factor * 3.6;
					sweepAngle = (int) Math.round(angle);
				}
				gc.fillArc(pieX, pieY, pieWidth, pieWidth, initialAngle, (-sweepAngle));
				gc.drawArc(pieX, pieY, pieWidth, pieWidth, initialAngle, (-sweepAngle));
				incrementAngle += sweepAngle;
				initialAngle += (-sweepAngle);
			}
			gc.drawLine(pieCenters[chartnum].x, pieCenters[chartnum].y, pieCenters[chartnum].x, pieCenters[chartnum].y - pieWidth / 2);
		}

		Font font = new Font(Display.getDefault(), FONT, 12, SWT.BOLD);
		gc.setForeground(BLACK);
		gc.setBackground(WHITE);
		gc.setFont(font);
		String text = seriesNames[chartnum];
		Point textSize = e.gc.textExtent(text);
		gc.drawText(text, pieX + (pieWidth - textSize.x) / 2, pieY + pieWidth + textSize.y);
		gc.setFont(oldFont);
		font.dispose();
	}

