	@Test
	public void testGetSingleTask() throws Exception {
		initSpaces();
		OSIORestClient client = connector.getClient(repository, requestProvider);
		OSIORestConfiguration config = client.getConfiguration(repository, new NullOperationMonitor());
		config.setSpaces(spaceMap);
		connector.setConfiguration(config);
		RepositoryLocation location = client.getClient().getLocation();
		location.setProperty(IOSIORestConstants.REPOSITORY_AUTH_ID, "user");
		location.setProperty(IOSIORestConstants.REPOSITORY_AUTH_TOKEN, "xxxxxxTokenxxxxxx");

		OSIORestGetSingleTaskData data = new OSIORestGetSingleTaskData(client.getClient(), connector, "/workitems/WORKITEM-0001", repository);
		
		String bundleLocation = Activator.getContext().getBundle().getLocation();
		int index = bundleLocation.indexOf('/');
		String fileName = bundleLocation.substring(index) + "/testjson/workitem.data";
		FileReader in = new FileReader(fileName);
		TaskData taskData = data.testParseFromJson(in);
		
		TaskAttribute root = taskData.getRoot();
		OSIORestTaskSchema schema = OSIORestTaskSchema.getDefault();
		
		TaskAttribute space = root.getAttribute(schema.SPACE.getKey());
		assertEquals("mywork", space.getValue());
		
		TaskAttribute spaceid = root.getAttribute(schema.SPACE_ID.getKey());
		assertEquals("SPACE-0001", spaceid.getValue());
		
		TaskAttribute uuid = root.getAttribute(schema.UUID.getKey());
		assertEquals("WORKITEM-0001", uuid.getValue());
		
		TaskAttribute labelsLink = root.getAttribute(schema.LABELS_LINK.getKey());
		assertEquals("https://openshift.io/api/workitems/WORKITEM-0001/labels", labelsLink.getValue());
		
		TaskAttribute creatorId = root.getAttribute(schema.CREATOR_ID.getKey());
		assertEquals("USER-0001", creatorId.getValue());
		
		TaskAttribute taskUrl = root.getAttribute(schema.TASK_URL.getKey());
		assertEquals("https://openshift.io/api/workitems/WORKITEM-0001", taskUrl.getValue());
	
		TaskAttribute assigneeIds = root.getAttribute(schema.ASSIGNEE_IDS.getKey());
		assertEquals("USER-0001", assigneeIds.getValue());
		
		TaskAttribute id = root.getAttribute(schema.ID.getKey());
		assertEquals("user/mywork#1", id.getValue());
		
		TaskAttribute status = root.getAttribute(schema.STATUS.getKey());
		assertEquals("resolved", status.getValue());
		
		TaskAttribute title = root.getAttribute(schema.SUMMARY.getKey());
		assertEquals("00001", title.getValue());
		
		TaskAttribute description = root.getAttribute(schema.DESCRIPTION.getKey());
		assertEquals("Test bug", description.getValue());
		
		TaskAttribute version = root.getAttribute(schema.VERSION.getKey());
		assertEquals("11", version.getValue());
		
		TaskAttribute order = root.getAttribute(schema.ORDER.getKey());
		assertEquals("1000", order.getValue());
		
		TaskAttribute created_at = root.getAttribute(schema.DATE_CREATION.getKey());
		assertEquals(getDate("2017-08-14T21:37:15.863435Z"), created_at.getValue());
		
		TaskAttribute updated_at = root.getAttribute(schema.DATE_MODIFICATION.getKey());
		assertEquals(getDate("2017-09-15T15:54:43.08915Z"), updated_at.getValue());
	}

