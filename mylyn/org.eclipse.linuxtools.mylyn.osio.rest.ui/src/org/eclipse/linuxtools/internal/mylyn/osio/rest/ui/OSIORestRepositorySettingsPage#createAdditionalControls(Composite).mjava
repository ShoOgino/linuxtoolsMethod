	@Override
	protected void createAdditionalControls(Composite parent) {
		Composite authTokenContainer = new Composite(parent, SWT.NONE);
		GridLayoutFactory.fillDefaults().margins(0, 0).numColumns(2).applyTo(authTokenContainer);
		GridDataFactory.fillDefaults().grab(true, true).align(SWT.FILL, SWT.FILL).applyTo(authTokenContainer);


		userIdLabel = new Label(authTokenContainer, SWT.NONE);
		userIdLabel.setText(Messages.OSIORestRepositorySettingsPage_auth_username);
		userId = new Text(authTokenContainer, SWT.BORDER);
		GridDataFactory.fillDefaults()
		.grab(true, false)
		.align(SWT.FILL, SWT.CENTER)
		.hint(300, SWT.DEFAULT)
		.applyTo(userId);
		
		authTokenLabel = new Label(authTokenContainer, SWT.NONE);
		authTokenLabel.setText(Messages.OSIORestRepositorySettingsPage_auth_token);
		authToken = new StyledText(authTokenContainer, SWT.BORDER | SWT.WRAP | SWT.PASSWORD);
		authToken.setEnabled(true);
		GridDataFactory.fillDefaults()
				.grab(true, true)
				.align(SWT.FILL, SWT.CENTER)
				.hint(300, 600)
				.applyTo(authToken);
		if (repository != null) {
			String apiKeyValue = repository.getProperty(IOSIORestConstants.REPOSITORY_AUTH_TOKEN);
			authToken.setText(Strings.nullToEmpty(apiKeyValue));
			authToken.setEnabled(true);
		}

		updateURLInformation();
		serverUrlCombo.add("https://openshift.io/api"); //$NON-NLS-1$
		serverUrlCombo.select(0);
		serverUrlCombo.setEnabled(false);
		serverUrlCombo.addModifyListener(new ModifyListener() {

			@Override
			public void modifyText(ModifyEvent e) {
				updateURLInformation();
			}
		});
		serverUrlCombo.addSelectionListener(new SelectionAdapter() {

			@Override
			public void widgetSelected(SelectionEvent e) {
				updateURLInformation();
			}
		});
	}

