		@Override
		public List<OSIORestUser> deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)
				throws JsonParseException {
			ArrayList<OSIORestUser> response = new ArrayList<OSIORestUser>();
			for (JsonElement dataElement : json.getAsJsonObject().get("data").getAsJsonArray()) { //$NON-NLS-1$

				JsonObject data = (JsonObject)dataElement.getAsJsonObject(); //$NON-NLS-1$
				JsonObject attributes = (JsonObject)data.get("attributes"); //$NON-NLS-1$

				OSIORestUser user = new OSIORestUser();

				String userId = attributes.get("userId").getAsString(); //$NON-NLS-1$
				user.setUserID(userId);

				String identityId = attributes.get("identityId").getAsString(); //$NON-NLS-1$
				user.setIdentityID(identityId);

				String fullName = attributes.get("fullName").getAsString(); //$NON-NLS-1$
				user.setFullName(fullName);

				String email = attributes.get("email").getAsString(); //$NON-NLS-1$
				user.setEmail(email);

				String imageURL = attributes.get("imageURL").getAsString(); //$NON-NLS-1$
				user.setImageURL(imageURL);

				String company = attributes.get("company").getAsString(); //$NON-NLS-1$
				user.setCompany(company);

				String username = attributes.get("username").getAsString(); //$NON-NLS-1$
				user.setUsername(username);

				String bio = attributes.get("bio").getAsString(); //$NON-NLS-1$
				user.setBio(bio);

				String providerType = attributes.get("providerType").getAsString(); //$NON-NLS-1$
				user.setProviderType(providerType);

				Boolean registrationCompleted = attributes.get("registrationCompleted").getAsBoolean();
				user.setRegistrationCompleted(registrationCompleted);

				String created_at = attributes.get("created-at").getAsString(); //$NON-NLS-1$
				user.setCreated_at(created_at);

				String updated_at = attributes.get("updated-at").getAsString(); //$NON-NLS-1$
				user.setUpdated_at(updated_at);
				
				response.add(user);
			}

			return response;
		}

