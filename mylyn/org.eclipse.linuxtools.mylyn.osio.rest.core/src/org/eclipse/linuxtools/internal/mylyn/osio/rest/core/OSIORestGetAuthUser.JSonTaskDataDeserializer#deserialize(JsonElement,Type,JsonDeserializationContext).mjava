		@Override
		public OSIORestUser deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)
				throws JsonParseException {
			OSIORestUser response = new OSIORestUser();
			
			JsonObject data = ((JsonObject)json.getAsJsonObject().get("data")); //$NON-NLS-1$
			JsonObject attributes = (JsonObject)data.get("attributes"); //$NON-NLS-1$
			
			String userId = attributes.get("userID").getAsString(); //$NON-NLS-1$
			response.setUserID(userId);
			
			String identityId = attributes.get("identityID").getAsString(); //$NON-NLS-1$
			response.setIdentityID(identityId);
			
			String fullName = attributes.get("fullName").getAsString(); //$NON-NLS-1$
			response.setFullName(fullName);
			
			String email = attributes.get("email").getAsString(); //$NON-NLS-1$
			response.setEmail(email);
			
			String imageURL = attributes.get("imageURL").getAsString(); //$NON-NLS-1$
			response.setImageURL(imageURL);
			
			String company = attributes.get("company").getAsString(); //$NON-NLS-1$
			response.setCompany(company);
			
			String username = attributes.get("username").getAsString(); //$NON-NLS-1$
			response.setUsername(username);
			
			String bio = attributes.get("bio").getAsString(); //$NON-NLS-1$
			response.setBio(bio);
			
			String providerType = attributes.get("providerType").getAsString(); //$NON-NLS-1$
			response.setProviderType(providerType);
			
			Boolean registrationCompleted = attributes.get("registrationCompleted").getAsBoolean();
			response.setRegistrationCompleted(registrationCompleted);
			
			String created_at = attributes.get("created-at").getAsString(); //$NON-NLS-1$
			response.setCreated_at(created_at);
			
			String updated_at = attributes.get("updated-at").getAsString(); //$NON-NLS-1$
			response.setUpdated_at(updated_at);

			return response;
		}

