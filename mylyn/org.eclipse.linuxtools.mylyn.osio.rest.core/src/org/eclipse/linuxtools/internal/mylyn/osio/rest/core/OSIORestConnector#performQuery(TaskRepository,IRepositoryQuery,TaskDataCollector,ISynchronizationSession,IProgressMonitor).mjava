	@Override
	public IStatus performQuery(TaskRepository repository, IRepositoryQuery query, TaskDataCollector collector,
			ISynchronizationSession session, IProgressMonitor monitor) {
		monitor = Policy.monitorFor(monitor);
		try {
			monitor.beginTask("performQuery", IProgressMonitor.UNKNOWN);
			OSIORestClient client = getClient(repository);
			IOperationMonitor progress = OperationUtil.convert(monitor, "performQuery", 3); //$NON-NLS-1$
			return client.performQuery(repository, query, collector, progress);
		} catch (CoreException e) {
			return new Status(IStatus.ERROR, OSIORestCore.ID_PLUGIN, IStatus.INFO,
					"CoreException from performQuery", e);
		} catch (OSIORestException e) {
			return new Status(IStatus.ERROR, OSIORestCore.ID_PLUGIN, IStatus.INFO,
					"OSIORestException from performQuery", e);
		} finally {
			monitor.done();
		}
	}

