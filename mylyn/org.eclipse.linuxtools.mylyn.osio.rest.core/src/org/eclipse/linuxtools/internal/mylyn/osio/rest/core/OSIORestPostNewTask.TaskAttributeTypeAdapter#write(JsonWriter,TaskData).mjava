		@Override
		public void write(JsonWriter out, TaskData taskData) throws IOException {
			out.beginObject();
			out.name("data"); //$NON-NLS-1$
			out.beginObject();
			out.name("attributes"); //$NON-NLS-1$
			out.beginObject();
			out.name("system.state").value("new"); //$NON-NLS-1$ //$NON-NLS-2$
			TaskAttribute titleAttribute = taskData.getRoot().getAttribute(taskSchema.SUMMARY.getKey());
			out.name("system.title").value(titleAttribute.getValue()); //$NON-NLS-1$
			out.name("version").value("1"); //$NON-NLS-1$ //$NON-NLS-2$
			TaskAttribute descAttribute = taskData.getRoot().getAttribute(taskSchema.DESCRIPTION.getKey());
			if (descAttribute != null) {
				String description = descAttribute.getValue();
				if (description != null && !description.isEmpty()) {
					out.name("system.description").value(description);
				}
			}
			out.endObject();
			out.name("relationships"); //$NON-NLS-1$
			out.beginObject();
			out.name("baseType"); //$NON-NLS-1$
			out.beginObject();
			out.name("data"); //$NON-NLS-1$
			out.beginObject();
			TaskAttribute taskType = taskData.getRoot().getAttribute(taskSchema.WORKITEM_TYPE.getKey());
			WorkItemTypeData taskTypeData = space.getWorkItemTypes().get(taskType.getValue());
			out.name("id").value(taskTypeData.getId()); //$NON-NLS-1$
			out.name("type").value("workitemtypes"); //$NON-NLS-1$
			out.endObject();
			out.endObject();
			out.name("space"); //$NON-NLS-1$
			out.beginObject();
			out.name("data"); //$NON-NLS-1$
			out.beginObject();
			out.name("id").value(space.getId()); //$NON-NLS-1$
			out.name("type").value("spaces"); //$NON-NLS-1$ //$NON-NLS-2$
			out.endObject();
			out.endObject();
			out.endObject();
			out.name("type").value("workitems"); //$NON-NLS-1$ //$NON-NLS-2$
			out.endObject();
			out.name("included"); //$NON-NLS-1$
			out.beginArray();
			out.value(true);
			out.endArray();
			out.endObject();
		}

