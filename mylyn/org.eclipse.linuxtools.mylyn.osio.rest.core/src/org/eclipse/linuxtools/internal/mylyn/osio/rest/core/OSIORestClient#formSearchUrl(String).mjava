	private String formSearchUrl(String url) throws OSIORestException {
		String searchFilter = ""; //$NON-NLS-1$
		int index = url.indexOf("?");
		if (index < 0) {
			return searchFilter;
		}
		String query = url.substring(index + 1);
		String[] settings = query.split("&"); //$NON-NLS-1$
		
		Map<String, Set<String>> fieldMap = new HashMap<>();
		
		for (String setting : settings) {
			String[] tokens = setting.split("="); //$NON-NLS-1$
			String name = tokens[0];
			String value = tokens[1];
			
			Set<String> field = fieldMap.get(name);
			if (field == null) {
				field = new TreeSet<>();
				fieldMap.put(name, field);
			}
			
			field.add(value);
		}
		
		if (!fieldMap.isEmpty()) {
		searchFilter += "filter[expression]={\"$AND\":["; //$NON-NLS-1$
		String lastKey = null;
		String keySeparator = ""; //$NON-NLS-1$
		String itemSeparator = ""; //$NON-NLS-1$
		Map<String, Space> spaces = getCachedSpaces(new NullOperationMonitor());
		Set<String> allSpaceNames = new TreeSet<>(spaces.keySet());
		Space firstSpace = spaces.values().iterator().next();
		Map<String, WorkItemTypeData> workitemTypes = firstSpace.getWorkItemTypes();
		for (String key : fieldMap.keySet()) {
			if (!key.equals(lastKey)) {
				searchFilter += keySeparator + "{\"$OR\":["; //$NON-NLS-1$
				keySeparator = "]},"; //$NON-NLS-1$
				itemSeparator = ""; //$NON-NLS-1$
			}
			if ("space".equals(key)) { //$NON-NLS-1$
				Set<String> spaceSet = fieldMap.get(key);
				for (String name : spaceSet) {
					Space space = null;
					if (spaces != null) {
						space = spaces.get(name);
					}
					if (space != null) {
						searchFilter += itemSeparator + "{\"space\":\"" + space.getId() + "\"}"; //$NON-NLS-1$ //$NON-NLS-2$
						itemSeparator = ","; //$NON-NLS-1$
					}
				}
			} else if ("assignees".equals(key)) { //$NON-NLS-1$
				Set<String> userSet = fieldMap.get(key);
				Set<String> spaceNames = fieldMap.get("space") != null ? fieldMap.get("space") : allSpaceNames;
				for (String spaceName : spaceNames) { //$NON-NLS-1$
					Space space = cachedSpaces.get(spaceName);
					if (space != null) {
						Map<String, User> users = space.getUsers();
						if (users != null) {
							for (String name : userSet) {
								User user = users.get(name);
								if (user != null) {
									searchFilter += itemSeparator + "{\"assignee\":\"" + user.getAttributes().getIdentityID() + "\"}"; //$NON-NLS-1$ //$NON-NLS-2$
									itemSeparator = ","; //$NON-NLS-1$
								}
							}
						}
					}
				}
			} else if ("baseType".equals(key)) { //$NON-NLS-1$
				Set<String> workitemSet = fieldMap.get(key);
				for (String name : workitemSet) {
					WorkItemTypeData workitemType = null;
					if (workitemTypes != null) {
						workitemType = workitemTypes.get(name);
					}
					if (workitemType != null) {
						searchFilter += itemSeparator + "{\"workitemtype\":\"" + workitemType.getId() + "\"}"; //$NON-NLS-1$ //$NON-NLS-2$
						itemSeparator = ","; //$NON-NLS-1$
					}
				}
			} else if ("area".equals(key)) { //$NON-NLS-1$ 
				Set<String> areaSet = fieldMap.get(key);
				for (String spaceName : fieldMap.get("space")) { //$NON-NLS-1$
					Space space = cachedSpaces.get(spaceName);
					if (space != null) {
						Map<String, Area> areas = space.getAreas();
						if (areas != null) {
							for (String name : areaSet) {
								Area area = areas.get(name);
								if (area != null) {
									searchFilter += itemSeparator + "{\"area\":\"" + area.getId() + "\"}"; //$NON-NLS-1$ //$NON-NLS-2$
									itemSeparator = ","; //$NON-NLS-1$
								}
							}
						}
					}
				}
			} else if ("iteration".equals(key)) { //$NON-NLS-1$ 
				Set<String> iterationSet = fieldMap.get(key);
				for (String spaceName : fieldMap.get("space")) { //$NON-NLS-1$
					Space space = cachedSpaces.get(spaceName);
					if (space != null) {
						Map<String, Iteration> iterations = space.getIterations();
						if (iterations != null) {
							for (String name : iterationSet) {
								Iteration iteration = iterations.get(name);
								if (iteration != null) {
									searchFilter += itemSeparator + "{\"iteration\":\"" + iteration.getId() + "\"}"; //$NON-NLS-1$ //$NON-NLS-2$
									itemSeparator = ","; //$NON-NLS-1$
								}
							}
						}
					}
				}
			} else if ("system.state".equals(key)) { //$NON-NLS-1$
				Set<String> stateSet = fieldMap.get(key);
				for (String name : stateSet) {
					searchFilter += itemSeparator + "{\"state\":\"" + name + "\"}"; //$NON-NLS-1$ //$NON-NLS-2$
					itemSeparator = ","; //$NON-NLS-1$
				}
			}
		}
		searchFilter += "]}]}"; //$NON-NLS-1$
		}
		
		searchFilter = URLQueryEncoder.transform(searchFilter);
		
		return location.getUrl() + "/search?" + searchFilter;
	}

