	/**
	 * Determine the editor id from the given editor input and optional input object.
	 * When a translation unit can be obtained, the project-specific content-type
	 * mechanism is used to determine the correct editor id.
	 * If that fails, the editor id is determined by file name and extension using
	 * the workspace-wide content-type definitions.
	 * 
	 * @param input  the editor input
	 * @param inputObject  the input object (used to create the editor input) or <code>null</code>
	 * @return a valid editor id, never <code>null</code>
	 */
	public static String getEditorID(IEditorInput input, Object inputObject) {

		ITranslationUnit tunit = null;
		if (inputObject instanceof ITranslationUnit) {
			tunit= (ITranslationUnit)inputObject;
		} else if (input instanceof IFileEditorInput) {
			IFileEditorInput editorInput = (IFileEditorInput)input;
			IFile file = editorInput.getFile();
			ICElement celement = CoreModel.getDefault().create(file);
			if (celement instanceof ITranslationUnit) {
				tunit = (ITranslationUnit)celement;
			}
		} else if (input instanceof ITranslationUnitEditorInput) {
			ITranslationUnitEditorInput editorInput = (ITranslationUnitEditorInput)input;
			tunit = editorInput.getTranslationUnit();
		}

		if (tunit != null) {
			// Choose an editor based on the content type
			String contentTypeId= tunit.getContentTypeId();
			if (contentTypeId != null) {
				IContentType contentType= Platform.getContentTypeManager().getContentType(contentTypeId);
				IEditorRegistry registry = PlatformUI.getWorkbench().getEditorRegistry();
				IEditorDescriptor desc= registry.getDefaultEditor(input.getName(), contentType);
				if (desc != null) {
					return desc.getId();
				}
			}
			// Choose an editor based on the language (obsolete?)
			if (tunit.isCLanguage()) {
				return CUIPlugin.EDITOR_ID;
			} else if (tunit.isCXXLanguage()) {
				return CUIPlugin.EDITOR_ID;
			} else if (tunit.isASMLanguage()) {
				return "org.eclipse.cdt.ui.editor.asm.AsmEditor"; //$NON-NLS-1$
			}
		}

		// Choose an editor based on filename/extension
		String editorId = getEditorID(input.getName());

		return editorId;
	}

