	@SuppressWarnings("restriction")
	@Override
	public void createProject(IProject project, boolean defaults, boolean onFinish, IProgressMonitor monitor) throws CoreException {
		super.createProject(project, defaults, onFinish, monitor);
		// Fix for bug #312298
		// Following is required to get around the fact that the Scanner Discovery BuildInfo isn't
		// created at this point.  This is due to some complications caused by us superclassing the
		// gnu gcc compiler or gnu g++ compiler as tools in our toolchain.  We are essentially
		// copying the logic from the Discovery Tab of the C/C++ Properties when the Ok button
		// gets pushed.  We reset the project description and this causes the Scanner Discovery
		// BuildInfo to be written to the .cproject file.  Without this fix, a new project
		// will require rebuilding upon startup of Eclipse each time to recreate the Scanner
		// Discovery info and avoid warnings regarding header files and errors regarding missing
		// macro definitions.  This code will likely go away when the Scanner Discovery mechanism
		// gets rewritten in CDT (post 8.0).
		ICProjectDescriptionManager mngr = CoreModel.getDefault().getProjectDescriptionManager();
		ICProjectDescription des = mngr.getProjectDescription(project);
		ICConfigurationDescription cfgd = des.getActiveConfiguration();
		IConfiguration cfg = ManagedBuildManager.getConfigurationForDescription(cfgd);
		ICfgScannerConfigBuilderInfo2Set cbi = CfgScannerConfigProfileManager.getCfgScannerConfigBuildInfo(cfg);
		IScannerConfigBuilderInfo2Set baseCbi = ScannerConfigProfileManager.createScannerConfigBuildInfo2Set(project);
		Map<InfoContext, IScannerConfigBuilderInfo2> baseInfoMap = baseCbi.getInfoMap();
		Map<CfgInfoContext, IScannerConfigBuilderInfo2> infoMap = cbi.getInfoMap();
		for (Map.Entry<CfgInfoContext, IScannerConfigBuilderInfo2> e : infoMap.entrySet()) {
			@SuppressWarnings("unused")
			String s = null;
			CfgInfoContext cfgInfoContext = e.getKey();
			IResourceInfo rcInfo = cfgInfoContext.getResourceInfo();
			if (rcInfo == null) { // per configuration
				s = cfgInfoContext.getConfiguration().getName();
			} else { // per resource
				IInputType typ = cfgInfoContext.getInputType();
				s = typ.getName();
			}
			IScannerConfigBuilderInfo2 bi2 = infoMap.get(cfgInfoContext);
			String profileId = bi2.getSelectedProfileId();
			bi2.setSelectedProfileId(profileId);
		}
		CoreModel.getDefault().setProjectDescription(project, des);
	}

