	/**
	 * Sorts files by relevance for CDT, by the criteria listed below. The most relevant files
	 * is listed first.
	 * <br> Accessible files
	 * <br> Files of preferred project
	 * <br> Files of CDT projects
	 * <br> Files on a source root of a CDT project
	 */
	public static void sortFilesByRelevance(IFile[] filesToSort, final IProject preferredProject) {
		Collections.sort(Arrays.asList(filesToSort), new Comparator<IFile>() {
			public int compare(IFile f1, IFile f2) {
				int r1= FileRelevance.getRelevance(f1, preferredProject);
				int r2= FileRelevance.getRelevance(f2, preferredProject);
				
				if (r1 > r2)
					return -1;
				if (r1 < r2)
					return 1;
				
				return f1.getFullPath().toString().compareTo(f2.getFullPath().toString());
			}
		});
	}

