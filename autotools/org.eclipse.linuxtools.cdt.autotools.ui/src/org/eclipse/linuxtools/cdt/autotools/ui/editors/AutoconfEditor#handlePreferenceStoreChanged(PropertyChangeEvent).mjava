	/* (non-Javadoc)
	 * @see org.eclipse.ui.texteditor.AbstractTextEditor#handlePreferenceStoreChanged(org.eclipse.jface.util.PropertyChangeEvent)
	 */
	protected void handlePreferenceStoreChanged(PropertyChangeEvent event) {
		ISourceViewer sourceViewer= getSourceViewer();
		if (sourceViewer == null)
			return;

        String property = event.getProperty();

        AutoconfCodeScanner scanner = (AutoconfCodeScanner)getAutoconfCodeScanner();
        if (scanner != null) {
        	if (scanner.affectsBehavior(event)) {
        		scanner.adaptToPreferenceChange(event);
        		sourceViewer.invalidateTextPresentation();
        	}
        }

        if (AutotoolsEditorPreferenceConstants.AUTOCONF_VERSION.equals(property) ||
        		AutotoolsEditorPreferenceConstants.AUTOMAKE_VERSION.equals(property)) {
        	handleVersionChange(sourceViewer);
        } else if (AutotoolsEditorPreferenceConstants.EDITOR_FOLDING_ENABLED.equals(property)) {
			if (sourceViewer instanceof ProjectionViewer) {
				ProjectionViewer projectionViewer= (ProjectionViewer) sourceViewer;
				if (fProjectionFileUpdater != null)
					fProjectionFileUpdater.uninstall();
				// either freshly enabled or provider changed
				fProjectionFileUpdater= new ProjectionFileUpdater();
				if (fProjectionFileUpdater != null) {
					fProjectionFileUpdater.install(this, projectionViewer);
				}
			}
			return;
		}

		super.handlePreferenceStoreChanged(event);
	}

