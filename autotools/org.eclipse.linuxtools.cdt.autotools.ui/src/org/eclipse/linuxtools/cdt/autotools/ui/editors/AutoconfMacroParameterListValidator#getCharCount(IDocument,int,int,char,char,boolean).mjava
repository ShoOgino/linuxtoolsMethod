	private int getCharCount(IDocument document, int start, int end, 
							 char increment, char decrement, boolean considerNesting) throws BadLocationException {
		
		Assert.isTrue((increment != 0 || decrement != 0) && increment != decrement);
		
		// There are two nesting levels to worry about.  Arguments can be
		// quoted with [] which means to treat the contents as one arg.
		// As well, macro calls can be nested within macro calls so we
		// have to handle parentheses.
		int macroQuotingLevel = 0; // Pertaining to '[' and ']' quoted args.
		int macroNestingLevel = -1; // Set to -1 to take into account first ( for function call
		int charCount = 0;
		while (start < end) {
			char curr = document.getChar(start++);
			switch (curr) {
				case 'd':
					if (start < end - 2) {
						char next= document.getChar(start);
						if (next == 'n') {
							// a comment starts, advance to the comment end
							next = document.getChar(start + 1);
							if (next == 'l')
							// dnl-comment: nothing to do anymore on this line 
								start= end;
						}
					}
					break;
				case '"':
				case '\'':
					start= getStringEnd(document, start, end, curr);
					break;
				default:
					if ('[' == curr)
						++ macroQuotingLevel;
					else if (']' == curr)
						-- macroQuotingLevel;
					if (macroQuotingLevel != 0)
						break;
					if (considerNesting) {
						if ('(' == curr)
							++ macroNestingLevel;
						else if (')' == curr) {
							-- macroNestingLevel;
						}
						if (macroNestingLevel != 0)
							break;
					}
					if (increment != 0) {
						if (curr == increment) {
							++charCount;
						}
					}
					
					if (decrement != 0) {
						if (curr == decrement) {
							-- charCount;
						}
					}
			}
		}
		
		return charCount;
	}

