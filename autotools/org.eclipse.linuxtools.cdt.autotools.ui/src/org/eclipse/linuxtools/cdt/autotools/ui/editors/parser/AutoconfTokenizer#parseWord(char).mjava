	private Token parseWord(char ch) {
		StringBuffer buffer = new StringBuffer();
		
		buffer.append(ch);
		offset++;
		do {
			if (offset >= chars.length)
				break;
			ch = chars[offset];
			if (!isIdentifierChar(ch))
				break;
			buffer.append(ch);
			offset++;
		} while (true);
		
		String text = buffer.toString();
		
		if (!isM4Context) {
			// detect sh tokens
			if ("case".equals(text))
				return makeToken(ITokenConstants.SH_CASE, text);
			if ("in".equals(text))
				return makeToken(ITokenConstants.SH_IN, text);
			if ("esac".equals(text))
				return makeToken(ITokenConstants.SH_ESAC, text);
			if ("while".equals(text))
				return makeToken(ITokenConstants.SH_WHILE, text);
			if ("select".equals(text))
				return makeToken(ITokenConstants.SH_SELECT, text);
			if ("until".equals(text))
				return makeToken(ITokenConstants.SH_UNTIL, text);
			if ("for".equals(text))
				return makeToken(ITokenConstants.SH_FOR, text);
			if ("do".equals(text))
				return makeToken(ITokenConstants.SH_DO, text);
			if ("done".equals(text))
				return makeToken(ITokenConstants.SH_DONE, text);
			if ("if".equals(text))
				return makeToken(ITokenConstants.SH_IF, text);
			if ("then".equals(text))
				return makeToken(ITokenConstants.SH_THEN, text);
			if ("else".equals(text))
				return makeToken(ITokenConstants.SH_ELSE, text);
			if ("elif".equals(text))
				return makeToken(ITokenConstants.SH_ELIF, text);
			if ("fi".equals(text))
				return makeToken(ITokenConstants.SH_FI, text);
		}
		
		// other identifier-looking word
		return makeToken(ITokenConstants.WORD, text);
	}

