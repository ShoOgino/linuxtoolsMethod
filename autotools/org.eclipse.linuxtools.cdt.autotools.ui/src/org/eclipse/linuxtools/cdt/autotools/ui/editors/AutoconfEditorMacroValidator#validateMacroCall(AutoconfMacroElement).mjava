	/* (non-Javadoc)
	 * @see org.eclipse.linuxtools.cdt.autotools.ui.editors.parser.IAutoconfMacroValidator#validateMacroCall(org.eclipse.linuxtools.cdt.autotools.core.ui.editors.parser.AutoconfMacroElement)
	 */
	public void validateMacroCall(AutoconfMacroElement macro)
			throws ParseException, InvalidMacroException {
		AutoconfPrototype p = AutoconfTextHover.getPrototype(macro.getName(), fEditor);
		if (p != null) {
			boolean tooFew = false;
			boolean tooMany = false;
			boolean justRight = false;
			int parms = macro.getParameterCount();
			int numPrototypes = p.getNumPrototypes();
			int minParms = 0;
			int maxParms = 0;
			for (int i = 0; i < numPrototypes; ++i) {
				if (parms < p.getMinParms(i)) {
					tooFew = true;
					minParms = p.getMinParms(i);
				} else if (parms > p.getMaxParms(i)) {
					tooMany = true;
					maxParms = p.getMaxParms(i);
				} else {
					justRight = true;
					break;
				}
			}
			
			int length = macro.getEndOffset() - macro.getStartOffset();
			int start = macro.getStartOffset();
			int end = macro.getEndOffset();
			int lineNumber = 0;
			try {
				lineNumber = macro.getDocument().getLineOfOffset(start);
			} catch (BadLocationException e) {
				
			}
			
			if (!justRight) {
				if (tooFew) {
					String formatString = AutoconfEditorMessages.getFormattedString(AUTOCONF_MACRO_ARGS_TOO_FEW, 
							AutotoolsPlugin.getDefault().getPreferenceStore().getString(AutotoolsEditorPreferenceConstants.AUTOCONF_VERSION),
							p.getName(), Integer.toString(minParms));
					throw new ParseException(
							formatString,
							start, end,
							lineNumber, 0, length,
							IMarker.SEVERITY_WARNING);
				} else if (tooMany) {
					String formatString = AutoconfEditorMessages.getFormattedString(AUTOCONF_MACRO_ARGS_TOO_MANY,
							AutotoolsPlugin.getDefault().getPreferenceStore().getString(AutotoolsEditorPreferenceConstants.AUTOCONF_VERSION),
							p.getName(), Integer.toString(maxParms));
					throw new ParseException(
							formatString,
							start, end,
							lineNumber, 0, length,
							IMarker.SEVERITY_WARNING);
				}
			}
			
			IProject project = fEditor.getProject();
			String acDocVer = AutoconfTextHover.getDefaultAutoconfMacrosVer();
			try {
				String acVer = project.getPersistentProperty(AutotoolsPropertyConstants.AUTOCONF_VERSION);
				if (acVer != null)
					acDocVer = acVer;
				else { // look for compat project properties
					acVer = project.getPersistentProperty(AutotoolsPropertyConstants.AUTOCONF_VERSION_COMPAT);
					if (acVer != null)
						acDocVer = acVer;
				}
			} catch (CoreException ce1) {
				// do nothing
			}
			
			macro.validate(acDocVer);

		}

	}

