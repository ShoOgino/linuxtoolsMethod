	protected static Document getAMDoc(String amDocName) {
		Document am_document = null;
		if (amHoverDocs == null) {
			amHoverDocs = new HashMap<String, Document>();
		}
		am_document = (Document)amHoverDocs.get(amDocName);
		if (am_document == null) {
			Document doc = null;
			try {
				// see comment in initialize()
				try {
					// Either open the html file or file system file depending
					// on what has been specified.
					URI amDoc = new URI(amDocName);
					IPath p = URIUtil.toPath(amDoc);
					InputStream docStream = null;
					if (p == null) {
						URL url = amDoc.toURL();
						docStream = url.openStream();
					} else {
						docStream = new FileInputStream(p.toFile());
					}
					DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
					factory.setValidating(false);
					try {
						DocumentBuilder builder = factory.newDocumentBuilder();
						doc = builder.parse(docStream);
					}
					catch (SAXParseException saxException) {
						System.out.println(saxException.getMessage());
						System.out.println(saxException.getLineNumber());
						doc = null;
					}
					catch (SAXException saxEx) {
						doc = null;
					}
					catch (ParserConfigurationException pce) {
						doc = null;
					}
					catch (IOException ioe) {
						doc = null;
					}
				} catch (FileNotFoundException e) {
					CUIPlugin.log(e);
				} catch (MalformedURLException e) {
					CUIPlugin.log(e);
				} catch (URISyntaxException e) {
					CUIPlugin.log(e);
				}
				am_document = doc;
			}
			catch (IOException ioe) {
			}
		}
		amHoverDocs.put(amDocName, am_document);
		return am_document;
	}

