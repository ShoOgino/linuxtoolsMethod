	protected void doRun(IProgressMonitor monitor) throws CoreException {
		monitor.beginTask(AutotoolsPlugin.getResourceString("WizardAutotoolsProjectConversion.monitor.convertingToMakeProject"), 2); //$NON-NLS-1$
		try {
			super.doRun(new SubProgressMonitor(monitor, 1));
		} finally {
			monitor.done();
		}
		
//		// Add the ManagedProject to the project
//		IManagedProject newManagedProject = null;
//		IManagedBuildInfo info = null;
//		try {
//			project = getProjectHandle();
//			info = ManagedBuildManager.createBuildInfo(project);
//			IProjectType parent = getProjectType();
//			newManagedProject = ManagedBuildManager.createManagedProject(project, parent);
//			if (newManagedProject != null) {
//				IConfiguration [] selectedConfigs = getSelectedConfigurations();
//				for (int i = 0; i < selectedConfigs.length; i++) {
//					IConfiguration config = selectedConfigs[i];
//					int id = ManagedBuildManager.getRandomNumber();
//					IConfiguration newConfig = newManagedProject.createConfiguration(config, config.getId() + "." + id); //$NON-NLS-1$
//					newConfig.setArtifactName(newManagedProject.getDefaultArtifactName());
//				}
//				// Now add the first supported config in the list as the default
//				IConfiguration defaultCfg = null;
//				IConfiguration[] newConfigs = newManagedProject.getConfigurations();
//				for(int i = 0; i < newConfigs.length; i++) {
//					if(newConfigs[i].isSupported()){
//						defaultCfg = newConfigs[i];
//						break;
//					}
//				}
//				
//				if(defaultCfg == null && newConfigs.length > 0)
//					defaultCfg = newConfigs[0];
//				
//				if(defaultCfg != null) {
//					ManagedBuildManager.setDefaultConfiguration(project, defaultCfg);
//					ManagedBuildManager.setSelectedConfiguration(project, defaultCfg);
//				}
//				ManagedBuildManager.setNewProjectVersion(project);
//				ICDescriptor desc = null;
//				try {
//					desc = CCorePlugin.getDefault().getCProjectDescription(project, true);
//					desc.create(CCorePlugin.BUILD_SCANNER_INFO_UNIQ_ID, ManagedBuildManager.INTERFACE_IDENTITY);
//					//  TODO:  The binary parser setting is currently per-project in the rest of CDT.
//					//         In the MBS, it is per-coonfiguration.  For now, select the binary parsers of the
//					//         first configuration.
//					if (newConfigs.length > 0) {
//						IToolChain tc = newConfigs[0].getToolChain();
//						ITargetPlatform targetPlatform = tc.getTargetPlatform();
//					}
//				} catch (CoreException e) {
//					ManagedBuilderUIPlugin.log(e);
//				}
//			}
//		} catch (BuildException e) {
//			ManagedBuilderUIPlugin.log(e);
//		}
//
//		// Modify the project settings
//		if (project != null) {
//			optionPage.performApply(new SubProgressMonitor(monitor, 2));
//		}
//
//		// Save the build options
//		monitor.subTask(AutotoolsPlugin.getResourceString(MSG_SAVE));
//		if (info != null) {
//			info.setValid(true);
//			ManagedBuildManager.saveBuildInfo(project, true);
//		}
//		monitor.done();
	}

