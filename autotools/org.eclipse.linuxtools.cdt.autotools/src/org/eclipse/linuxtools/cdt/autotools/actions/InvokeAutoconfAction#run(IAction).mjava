	public void run(IAction action) {
		IContainer container = getSelectedContainer();
		if (container == null)
			return;
		
		IPath execDir = getExecDir(container);

		String autoconf_error;
		String autoconf_result;

		if (container != null) {
			IProject project = container.getProject();
			String autoconfCommand = null;
			try {
				autoconfCommand = project.getPersistentProperty(AutotoolsPropertyConstants.AUTOCONF_TOOL);
			} catch (CoreException e) {
				// do nothing
			}
			
			// If unset for the project, default to system path
			if (autoconfCommand == null)
				autoconfCommand = "autoconf"; // $NON-NLS-1$
			
			HashMap<String, String> result = executeCommand(new Path(autoconfCommand), new String[]{}, null, execDir);
			
			autoconf_error = (String)result.get("stderr"); //$NON-NLS-1$
			autoconf_result = (String)result.get("stdout"); //$NON-NLS-1$
			
			// if the process produced stdout/err, display in dialog
			if (autoconf_error.length() > 0) {
				showError(InvokeMessages
						.getString("InvokeAutoconfAction.windowTitle.stderr"), //$NON-NLS-1$
						autoconf_error);
			} else if (autoconf_result.length() > 0) {
				showInformation(InvokeMessages
						.getString("InvokeAutoconfAction.windowTitle.stdout"), //$NON-NLS-1$
						autoconf_result);
			} else {
				String args[] = new String[1];
				args[0] = execDir.toOSString();
				showSuccess(InvokeMessages
						.getFormattedString("InvokeAutoconfAction.command", args)); //$NON-NLS-1$
			}
		}
	}

