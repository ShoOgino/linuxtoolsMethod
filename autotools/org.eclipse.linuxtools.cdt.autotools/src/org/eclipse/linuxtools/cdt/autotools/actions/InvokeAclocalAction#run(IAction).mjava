	public void run(IAction action) {

		IContainer container = getSelectedContainer();
		if (container == null)
			return;
		
		IPath execDir = getExecDir(container);
		String cwd = InvokeMessages.getString("CWD") + getCWD(container); //$NON-NLS-1$

		TwoInputDialog optionDialog = new TwoInputDialog(
				new Shell(),
				cwd,
				InvokeMessages
						.getString("InvokeAclocalAction.windowTitle.options"), //$NON-NLS-1$
				InvokeMessages
						.getString("InvokeAclocalAction.message.options.otherOptions"), //$NON-NLS-1$
				InvokeMessages
						.getString("InvokeAclocalAction.message.options.includeDir"), DEFAULT_OPTION, null); //$NON-NLS-1$

		optionDialog.open();

		// chop args into string array
		String rawArgList = optionDialog.getValue();

		String[] optionsList = separateOptions(rawArgList);

		// chop args into string array
		rawArgList = optionDialog.getSecondValue();

		String[] targetList = separateTargets(rawArgList);

		if (targetList == null) {

			showError(InvokeMessages
					.getString("InvokeAction.execute.windowTitle.error"), //$NON-NLS-1$
					InvokeMessages
							.getString("InvokeAction.windowTitle.quoteError")); //$NON-NLS-1$
			return;
		}

		int iOption = 0;
		if (targetList.length > 0)
			iOption = 1;

		String[] argumentList = new String[targetList.length
				+ optionsList.length + iOption];

		System.arraycopy(optionsList, 0, argumentList, 0, optionsList.length);

		if (iOption == 1)
			argumentList[optionsList.length] = "-I"; //$NON-NLS-1$

		System.arraycopy(targetList, 0, argumentList, optionsList.length
				+ iOption, targetList.length);

		if (container != null) {
			String aclocalCommand = null;
			IProject project = getSelectedContainer().getProject();
			try {
				aclocalCommand = project.getPersistentProperty(AutotoolsPropertyConstants.ACLOCAL_TOOL);
			} catch (CoreException e) {
				// do nothing
			}
			
			// If unset, use default system path
			if (aclocalCommand == null)
				aclocalCommand = DEFAULT_COMMAND;
			
			executeConsoleCommand(DEFAULT_COMMAND, aclocalCommand,
					argumentList, execDir);
		}
	}

