	protected void clean(IProgressMonitor monitor) throws CoreException {
		// See what type of cleaning the user has set up in the
		// build properties dialog.
		String cleanDelete = null;
		try {
			cleanDelete = getProject().getPersistentProperty(AutotoolsPropertyConstants.CLEAN_DELETE);
		} catch (CoreException ce) {
			// do nothing
		}
		
		if (cleanDelete != null && cleanDelete.equals(AutotoolsPropertyConstants.TRUE))
			removeBuildDir(monitor);
		else {
			IBuilder builders[] = new IBuilder[1];
			IProject project = getProject();
			IManagedBuildInfo info = ManagedBuildManager.getBuildInfo(project);
			IConfiguration cfg = info.getDefaultConfiguration();
			IManagedBuilderMakefileGenerator generator = ManagedBuildManager.getBuildfileGenerator(cfg);
			generator.initialize(getProject(), info, monitor);

			// Hijack the builder itself so that instead of ManagedMake
			// policy of defaulting the build path to the configuration name,
			// we get the build occurring in the builddir configure tool setting.
			builders[0] = new AutotoolsBuilder(cfg.getEditableBuilder(), project);
			builders[0].setBuildPath(project.getLocation().append(generator.getBuildWorkingDir()).toOSString());
			builders[0].setAutoBuildEnable(true);
			builders[0].setCleanBuildEnable(true);
			builders[0].setManagedBuildOn(false);
			try {
				build(CLEAN_BUILD, project, builders, true, monitor);
			} finally {
				builders[0].setManagedBuildOn(true);
				builders[0].setCleanBuildEnable(false);
			}
		}
	}

