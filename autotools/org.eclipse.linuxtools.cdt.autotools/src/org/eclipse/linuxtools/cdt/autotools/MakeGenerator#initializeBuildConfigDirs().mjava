	private void initializeBuildConfigDirs() {
		ITool tool = cfg.getToolFromOutputExtension("status"); //$NON-NLS-1$
		IOption[] options = tool.getOptions();
		for (int i = 0; i < options.length; ++i) {
			String id = options[i].getId();
			if (id.indexOf("builddir") > 0) { //$NON-NLS-1$
				buildDir = (String) options[i].getValue();
				try {
					String resolved = ManagedBuildManager.getBuildMacroProvider().resolveValue(buildDir, "", null, 
							IBuildMacroProvider.CONTEXT_CONFIGURATION, cfg);
					if (resolved != null && (resolved = resolved.trim()).length() > 0)
						buildDir = resolved;
				} catch (BuildMacroException e) {
					// do nothing
				}
//				try {
//					builder.setBuildAttribute(IMakeCommonBuildInfo.BUILD_LOCATION, 
//							project.getLocation().append(buildDir).toOSString());
//				} catch (CoreException e) {
//					e.printStackTrace();
//				}
			} else if (id.indexOf("configdir") > 0) {  //$NON-NLS-1$
				srcDir = (String) options[i].getValue();
				try {
					String resolved = ManagedBuildManager.getBuildMacroProvider().resolveValue(srcDir, "", null, 
							IBuildMacroProvider.CONTEXT_CONFIGURATION, cfg);
					if (resolved != null && (resolved = resolved.trim()).length() > 0)
						srcDir = resolved;
				} catch (BuildMacroException e) {
					// do nothing
				}
			}
		}
	}

