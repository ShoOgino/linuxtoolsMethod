	protected void performOK() {
		IProject project = getProject();
		if (fCleanDelete.getSelection()) {
			try {
				project.setPersistentProperty(AutotoolsPropertyConstants.CLEAN_DELETE, TRUE); 
			} catch (CoreException ce) {
				// FIXME: what can we do here?
			}
		} else {
			try {
				project.setPersistentProperty(AutotoolsPropertyConstants.CLEAN_DELETE, FALSE);
			} catch (CoreException ce) {
				// FIXME: what can we do here?
			}
			try {
				project.setPersistentProperty(AutotoolsPropertyConstants.CLEAN_MAKE_TARGET, fCleanMakeTarget.getText());
			} catch (CoreException ce) {
				// FIXME: what can we do here?
			}
		}
		boolean setScannerInfoDirty = false;
		try {
			// Get old scanner method setting to see if it has changed.
			String oldScannerMakeW = project.getPersistentProperty(AutotoolsPropertyConstants.SCANNER_USE_MAKE_W);
			if (fScannerMakeW.getSelection()) {
				project.setPersistentProperty(AutotoolsPropertyConstants.SCANNER_USE_MAKE_W, TRUE);
				if (oldScannerMakeW == null || !oldScannerMakeW.equals(TRUE))
					setScannerInfoDirty = true;
			} else {
				project.setPersistentProperty(AutotoolsPropertyConstants.SCANNER_USE_MAKE_W, null);
				if (oldScannerMakeW != null && oldScannerMakeW.equals(TRUE))
					setScannerInfoDirty = true;
			}
		} catch (CoreException ce) {
			ce.printStackTrace(); // FIXME: what can we do here?
		}
		// If the scanner info method changes, we must mark the current data as
		// dirty so it will be recalculated.
		if (setScannerInfoDirty) {
			try {
				project.setSessionProperty(AutotoolsPropertyConstants.SCANNER_INFO_DIRTY, Boolean.TRUE);
			} catch (CoreException ce2) {
				// FIXME: what can we do here?
			}
		}
	}

