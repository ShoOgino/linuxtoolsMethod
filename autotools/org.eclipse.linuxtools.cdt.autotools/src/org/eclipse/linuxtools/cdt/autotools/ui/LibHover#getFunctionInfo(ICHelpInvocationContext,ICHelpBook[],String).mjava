	public IFunctionSummary getFunctionInfo(ICHelpInvocationContext context, ICHelpBook[] helpBooks, String name) {
        FunctionSummary f;

        f = null;
        
        if ((null != document) && (null != name)) {
        	String sss;

        	for (int ci = 0; ci < constructTypes.length; ci++) {
        		sss = constructTypes[ci] + "-" + name; // $NON-NLS-1$
                Element elem = document.getElementById(sss);
                if (null != elem) {
                	switch(ci) {
                	case dtypeIndex:
                		break;
                	case enumIndex:
                		break;
                	case functionIndex:
                		NodeList functionNode = elem.getElementsByTagName("function"); // $NON-NLS-1$
                        if (null != functionNode) {
                        	for (int fni = 0; fni < functionNode.getLength(); fni++) {
                        		Node function_node = functionNode.item(fni);
                                String function_node_name = function_node.getNodeName();
                                if (function_node_name.equals("function")) { // $NON-NLS-1$
                                    f = getFunctionSummaryFromNode(name, function_node);
                                }			// function node
                        	}				// fni loop
                        }					// null != functionNode
                		break;
                    case structIndex:
                        break;
                    case typeIndex:
                        break;
                    case unionIndex:
                        break;
                	}
                }
        	}
        }
        
        return f;
	}

