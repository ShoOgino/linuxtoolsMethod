	/**
	 * Utility method to resolve a file system location to a workspace resource.
	 * If a context element is given and there are multiple matches in the workspace,
	 * a resource with the same project of the context element are preferred.
	 * 
	 * @param location  a valid file system location
	 * @param context  an element related to the target file, may be <code>null</code>
	 * @return an <code>IFile</code> or <code>null</code>
	 */
	private static IFile getWorkspaceFileAtLocation(IPath location, ICElement context) {
		IFile file= FileBuffers.getWorkspaceFileAtLocation(location);
		if (file == null) {
			// try to find a linked resource
			IProject project= null;
			if (context != null) {
				ICProject cProject= context.getCProject();
				if (cProject != null) {
					project= cProject.getProject();
				}
			}
			IFile bestMatch= null;
			IWorkspaceRoot root= ResourcesPlugin.getWorkspace().getRoot();
			IFile[] files= root.findFilesForLocation(location);
			for (int i= 0; i < files.length; i++) {
				file= files[i];
				if (file.isAccessible()) {
					if (project != null && file.getProject() == project) {
						bestMatch= file;
						break;
					}
					if (bestMatch == null) {
						bestMatch= file;
						if (project == null) {
							break;
						}
					}
				}
			}
			return bestMatch;
		}
		return file;
	}

