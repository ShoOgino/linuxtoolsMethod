	private void checkChildren(IParent parent) {
		IDirective[] directives = parent.getDirectives();
		for (int i = 0; i < directives.length; i++) {
			IDirective directive = directives[i];
			if (directive instanceof IParent) {
				checkChildren((IParent)directive);
			} else if (directive instanceof BadDirective) {
				
				int lineNumber = directive.getStartLine();
				
				Map<String, Object> map = new HashMap<String, Object>();
				MarkerUtilities.setLineNumber(map, lineNumber);
				// FIXME:  message
				MarkerUtilities.setMessage(map, "Bad Directive");
				map.put(IMarker.MESSAGE, "Bad Directive");
				map.put(IMarker.LOCATION, Integer.valueOf(lineNumber));
				
				Integer charStart = getCharOffset(lineNumber - 1, 0);
				if (charStart != null) {
					map.put(IMarker.CHAR_START, charStart);
				}
				// FIXME:  probably a better way to do this
				// This is the end character
				Integer charEnd = new Integer(getCharOffset(directive.getEndLine(), 0).intValue() - 1);
				if (charEnd != null) {
					map.put(IMarker.CHAR_END, charEnd);
				}
				
				// FIXME:  add severity level
				map.put(IMarker.SEVERITY, new Integer(IMarker.SEVERITY_ERROR));
				
				try {
					IMarker marker = createMarker(map, AUTOMAKE_ERROR_MARKER_ID); // ICModelMarker.C_MODEL_PROBLEM_MARKER);

					MarkerAnnotation annotation = new MarkerAnnotation(marker);
					Position p = new Position(charStart.intValue(),charEnd.intValue() - charStart.intValue());
					fAnnotationModel.addAnnotation(annotation, p);
				} catch (CoreException ce) {
					// do nothing
				}
			}
		}
		return;
	}

