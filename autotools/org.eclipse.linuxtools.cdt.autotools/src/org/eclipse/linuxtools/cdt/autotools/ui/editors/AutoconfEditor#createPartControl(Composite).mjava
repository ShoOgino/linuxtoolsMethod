    /**
     * The <code>AbstractTextEditor</code> implementation of this 
     * <code>IWorkbenchPart</code> method creates the vertical ruler and
     * source viewer. Subclasses may extend.
     * 
     * We attach our own mouseDown listener on the menu bar, 
     * and our own listener for cursor/key/selection events to update cursor position in
     * status bar.

     * @param parent Parent composite of the control.
     */
    public void createPartControl(Composite parent) {
    	super.createPartControl(parent);

    	// Sticky hover support
    	IInformationControlCreator informationControlCreator= new IInformationControlCreator() {
    		public IInformationControl createInformationControl(Shell shell) {
       			return new DefaultInformationControl(shell, true);
    		}
    	};

    	fInformationPresenter= new InformationPresenter(informationControlCreator);
    	fInformationPresenter.setSizeConstraints(60, 10, true, true);
    	fInformationPresenter.install(getSourceViewer());
    	fInformationPresenter.setDocumentPartitioning(AutoconfPartitionScanner.AUTOCONF_MACRO);

    	ProjectionViewer projectionViewer= (ProjectionViewer) getSourceViewer();

    	fProjectionSupport= new ProjectionSupport(projectionViewer, getAnnotationAccess(), getSharedColors());
    	fProjectionSupport.addSummarizableAnnotationType("org.eclipse.ui.workbench.texteditor.error"); //$NON-NLS-1$
    	fProjectionSupport.addSummarizableAnnotationType("org.eclipse.ui.workbench.texteditor.warning"); //$NON-NLS-1$
    	fProjectionSupport.install();

    	if (isFoldingEnabled())
    		projectionViewer.doOperation(ProjectionViewer.TOGGLE);
    	
		fProjectionFileUpdater= new ProjectionFileUpdater();
		if (fProjectionFileUpdater != null) {
			fProjectionFileUpdater.install(this, projectionViewer);
			fProjectionFileUpdater.initialize();
		}

    	PlatformUI.getWorkbench().getHelpSystem().setHelp(parent, IAutotoolHelpContextIds.AC_EDITOR_VIEW);

    	// TODO: Do we need the following two lines?
//  	fEditorSelectionChangedListener= new EditorSelectionChangedListener();
//  	fEditorSelectionChangedListener.install(getSelectionProvider());
    }

