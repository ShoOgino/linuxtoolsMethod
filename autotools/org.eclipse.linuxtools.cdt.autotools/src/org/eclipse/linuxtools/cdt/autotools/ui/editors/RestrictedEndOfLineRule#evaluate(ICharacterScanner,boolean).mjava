	public IToken evaluate(ICharacterScanner scanner, boolean resume) {
		int column = scanner.getColumn();
		// Check if we are at EOF, in which case rules don't hold
		if (column < 0)
			return Token.UNDEFINED;
		if (!resume) {
			startIndex = scanner.getColumn();
			if (super.evaluate(scanner, false) != Token.UNDEFINED) {
				// Outer rule is true for a section.  Now we can
				// set the boundaries for the internal rules.
				// End boundary for internal rules is the start of
				// the end sequence.
				endIndex = scanner.getColumn();
				// Back up scanner to just after start sequence.
				backupScanner(scanner, startIndex + startSequence.length());
			}
			else
				// Base rule doesn't hold.
				return Token.UNDEFINED;
		}

		// At this point, we want to check for restricted chars in the
		// token.  If we find them, we stop there.
		
		int start = scanner.getColumn();
		column = start;
		while (column < endIndex) {
			int ch = scanner.read();
			if (ch == ICharacterScanner.EOF
					|| restrictedChars.indexOf(ch) >= 0) {
				scanner.unread();
				return getSuccessToken();
			}
			++column;
		}
		startIndex = 0;
		endIndex = 0;
		return getSuccessToken();
	}

