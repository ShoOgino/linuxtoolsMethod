	public IToken evaluate(ICharacterScanner scanner, boolean resume) {
		buffer.setLength(0);
		int c;
		int state = INIT_STATE;

		if (resume)
			scanToBeginOfLine(scanner);

		for (c = scanner.read(); c != ICharacterScanner.EOF; c = scanner.read()) {
			switch (state) {
				case INIT_STATE :
					if (c != '\n' && Character.isWhitespace((char) c)) {
						break;
					}
					if (isValidCharacter(c)) {
						state = VAR_STATE;
					} else {
						state = ERROR_STATE;
					}
					break;
				case VAR_STATE :
					if (isValidCharacter(c)) {
						break;
					}
				case END_VAR_STATE :
					if (Character.isWhitespace((char) c)) {
						state = END_VAR_STATE;
					} else if (c == ':' || c == '+') {
						state = EQUAL_STATE;
					} else if (c == '=') {
						state = FINISH_STATE;
					} else {
//						if (state == END_VAR_STATE) {
//							scanner.unread(); // Return back to the space
//						}
						state = ERROR_STATE;
					}
					break;
				case EQUAL_STATE :
					if (c == '=') {
						state = FINISH_STATE;
					} else {
						state = ERROR_STATE;
					}
					break;
				case FINISH_STATE :
					break;
				default :
					break;
			}
			if (state >= FINISH_STATE) {
				break;
			}
			buffer.append((char) c);
		}

		if (state == FINISH_STATE) {
			scanToEndOfLine(scanner);
			return token;
		}

        boolean debug = true;
        if (debug) {
//        	System.out.println("This should be a 'c':  " + peek(scanner));
//                System.out.println("This is what's in the **REST OF** the buffer:");
//                int count = 0;
//                for (int c = scanner.read(); c != ICharacterScanner.EOF; c = scanner.read()) {
//                        System.out.println((char) c);
//                        count++;
//                }
//                // Unread what we just displayed
//                for (int i = 0; i < count; i++) {
//                        scanner.unread();
//                }
        }
		
		if (defaultToken.isUndefined()) {
			// If c is EOF, we've read it and broken out of the for loop above,
			// but we need to unread it since it got read but not put into the
			// buffer
			if (state == ERROR_STATE || c == ICharacterScanner.EOF)
				scanner.unread();
			unreadBuffer(scanner);
            debug = true;
            if (debug) {
//            	System.out.println("This should be an 'i':  " + peek(scanner));
//                    System.out.println("We've supposedly just unread the entire buffer.  Here it is:");
//                    int count = 0;
//                    for (int c = scanner.read(); c != ICharacterScanner.EOF; c = scanner.read()) {
//                            System.out.println((char) c);
//                            count++;
//                    }
//                    // Unread what we just displayed
//                    for (int i = 0; i < count + 1; i++) {
//                            scanner.unread();
//                    }
//                    System.out.println("... just to be safe, here's the first character:  " + peek(scanner));
            }

		}
		
		return Token.UNDEFINED;
	}

