	/** 
	 * Conditionally output line to outputStream. If stream 
	 * supports error markers, use it, otherwise use conventional stream
	 */
	private void outputLine(String line, ProblemMarkerInfo marker) {
		String l = line + "\n";  //$NON-NLS-1$
		if ( outputStream == null ) return; 
		try {
			Class<?> c = outputStream.getClass();
			Method m = null;
			try {
				if (marker != null) {
					m = c.getDeclaredMethod("write", String.class, ProblemMarkerInfo.class);
					if (m != null) {
						m.invoke(outputStream, l, marker);
						return;
					}
				}
			} catch (SecurityException e) {
				// do nothing
			} catch (NoSuchMethodException e) {
				// do nothing
			} catch (IllegalArgumentException e) {
				// do nothing
			} catch (IllegalAccessException e) {
				// do nothing
				AutotoolsPlugin.log(e);
			} catch (InvocationTargetException e) {
				// do nothing
			}		
			byte[] b = l.getBytes();
			outputStream.write(b, 0, b.length);			
		} catch (IOException e) {
			AutotoolsPlugin.log(e);
		}
	}

