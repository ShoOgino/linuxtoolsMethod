	public void run(IMarker marker) {
		// We have a pkgconfig library missing requirement for "pkg".  Now, "pkg" does
		// not necessarily match the actual system package needed to be updated (e.g.
		// gtk+-2.0 is the name of the pkgconfig file for gtk2).
		// We can try and find the "pkg.pc" file and look at what real package provides
		// it.  Updating that package will update the actual package in question as well
		// as updating the pkgconfig info for "pkg".
		// Note, that we won't have any pkgconfig path settings from the configure call
		// so we can't handle the situation where the user doesn't have pkgconfig files
		// stored in the usual place.
		IPath pkgconfigPath = 
			new Path("/usr/lib/pkgconfig").append(pkgName+".pc"); //$NON-NLS-1$ //$NON-NLS-2$
		// Get a launcher for the config command
		CommandLauncher launcher = new CommandLauncher();
		IPath commandPath = new Path("rpm"); //$NON-NLS-1$
		String[] commandArgs = 
			new String[] {"-q", //$NON-NLS-1$
				"--queryformat", //$NON-NLS-1$
				"%{NAME}", //$NON-NLS-1$
				"--whatprovides", //$NON-NLS-1$
				pkgconfigPath.toOSString()};
		try {
			// Use CDT launcher to run rpm to query the package that provides
			// the pkgconfig .pc file for the package in question.
			ConsoleOutputStream output = new ConsoleOutputStream();
			Process proc = launcher.execute(commandPath, commandArgs, null,
					new Path("."), new NullProgressMonitor());
			if (proc != null) {
				try {
					// Close the input of the process since we will never write to
					// it
					proc.getOutputStream().close();
				} catch (IOException e) {
				}
				if (launcher.waitAndRead(output, output, new NullProgressMonitor())
						!= CommandLauncher.OK) {
					AutotoolsPlugin.logErrorMessage(launcher.getErrorMessage());
				} else {
					String result = output.readBuffer();
					if (!result.startsWith("error:")) //$NON-NLS-1$
						System.out.println("need to execute update of " + result);
				}
			}
			
		} catch (CoreException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} //$NON-NLS-1$
	}

