	/**
	 * @param activePart
	 *            the active {@link IWorkbenchPart}
	 * @param targetClass
	 * @return the {@link List} of selected {@link IDockerContainer} in the
	 *         given active part of {@link Collections#emptyList()} if none was
	 *         selected
	 */
	private static <T> List<T> getSelectedElements(
			final IWorkbenchPart activePart, final Class<T> targetClass) {
		if (activePart instanceof DockerContainersView) {
			final IStructuredSelection selection = ((DockerContainersView) activePart)
					.getStructuredSelection();
			return castSelectionTo(selection, targetClass);
		} else if (activePart instanceof DockerImagesView) {
			final IStructuredSelection selection = ((DockerImagesView) activePart)
					.getStructuredSelection();
			return castSelectionTo(selection, targetClass);
		} else if (activePart instanceof DockerExplorerView) {
			final IStructuredSelection selection = ((DockerExplorerView) activePart)
					.getCommonViewer().getStructuredSelection();
			return castSelectionTo(selection, targetClass);
		} else if (activePart instanceof DockerImageHierarchyView) {
			final IStructuredSelection selection = ((DockerImageHierarchyView) activePart)
					.getCommonViewer().getStructuredSelection();
			return adaptSelectionTo(selection, targetClass);
		}
		return Collections.emptyList();
	}

