	@Override
	public Object[] getChildren(final Object parentElement) {
		if (parentElement instanceof IDockerConnection) {
			final IDockerConnection dockerConnection = (IDockerConnection) parentElement;
			return new Object[] { new DockerImagesCategory(dockerConnection),
					new DockerContainersCategory(dockerConnection) };
		} else if (parentElement instanceof DockerContainersCategory) {
			final DockerContainersCategory containersCategory = (DockerContainersCategory) parentElement;
			final IDockerConnection connection = containersCategory.getConnection();
			if(connection.isContainersLoaded()) {
				return connection.getContainers().toArray();
			}
			loadContainers(containersCategory);
			return new Object[] { new LoadingStub(containersCategory) };
		} else if (parentElement instanceof DockerImagesCategory) {
			final DockerImagesCategory imagesCategory = (DockerImagesCategory) parentElement;
			final IDockerConnection connection = imagesCategory.getConnection();
			if(connection.isImagesLoaded()) {
				return connection.getImages().toArray();
			}
			loadImages(imagesCategory);
			return new Object[] { new LoadingStub(imagesCategory) };
		} else if (parentElement instanceof IDockerContainer) {
			final DockerContainer container = (DockerContainer) parentElement;
			if (container.isInfoLoaded()) {
				final IDockerContainerInfo info = container.info();
				final IDockerNetworkSettings networkSettings = (info != null)
						? info.networkSettings() : null;
				final IDockerHostConfig hostConfig = (info != null)
						? info.hostConfig() : null;
				return new Object[] {
						new DockerContainerPortMappingsCategory(container,
								(networkSettings != null)
										? networkSettings.ports()
										: Collections
												.<String, List<IDockerPortBinding>> emptyMap()),
						new DockerContainerVolumesCategory(container,
								(hostConfig != null) ? hostConfig.binds()
										: Collections.<String> emptyList()),
						new DockerContainerLinksCategory(container,
								(hostConfig != null) ? hostConfig.links()
										: Collections.<String> emptyList()) };
			}
			loadContainerInfo(container);
			return new Object[] { new LoadingStub(container) };
		} else if (parentElement instanceof DockerContainerLinksCategory) {
			final DockerContainerLinksCategory linksCategory = (DockerContainerLinksCategory) parentElement;
			return linksCategory.getLinks().toArray();
		} else
			if (parentElement instanceof DockerContainerPortMappingsCategory) {
			final DockerContainerPortMappingsCategory portMappingsCategory = (DockerContainerPortMappingsCategory) parentElement;
			return portMappingsCategory.getPortMappings().toArray();

		} else if (parentElement instanceof DockerContainerVolumesCategory) {
			final DockerContainerVolumesCategory volumesCategory = (DockerContainerVolumesCategory) parentElement;
			return volumesCategory.getVolumes().toArray();
		}
		return EMPTY;
	}

