	/**
	 * @return the current {@link IDockerConnection} associated with the given
	 *         {@link IWorkbenchPart} or {@code null} if none could be found.
	 * @param activePart
	 *            - active Workbench part
	 */
	public static IDockerConnection getCurrentConnection(final IWorkbenchPart activePart) {
		if (activePart instanceof DockerContainersView) {
			return ((DockerContainersView) activePart).getConnection();
		} else if (activePart instanceof DockerImagesView) {
			return ((DockerImagesView) activePart).getConnection();
		} else if (activePart instanceof DockerExplorerView) {
			final ITreeSelection selection = ((DockerExplorerView) activePart)
					.getCommonViewer().getStructuredSelection();
			final Object firstElement = selection.getFirstElement();
			if (firstElement instanceof IDockerConnection) {
				return (IDockerConnection) firstElement;
			} else if (firstElement instanceof IDockerContainer) {
				return ((IDockerContainer) firstElement).getConnection();
			} else if (firstElement instanceof IDockerImage) {
				return ((IDockerImage) firstElement).getConnection();
			} else if (firstElement instanceof DockerImagesCategory) {
				return ((DockerImagesCategory) firstElement).getConnection();
			}
		}
		return null;
	}

