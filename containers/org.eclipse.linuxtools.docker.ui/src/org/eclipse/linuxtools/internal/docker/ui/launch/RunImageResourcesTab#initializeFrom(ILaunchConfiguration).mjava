	@Override
	public void initializeFrom(ILaunchConfiguration configuration) {
		try {
			boolean enableLimits = configuration.getAttribute(
					IRunDockerImageLaunchConfigurationConstants.ENABLE_LIMITS,
					false);
			model.setEnableResourceLimitations(enableLimits);
			long cpuShareWeight = Long.parseLong(configuration.getAttribute(
					IRunDockerImageLaunchConfigurationConstants.CPU_PRIORITY,
					Long.toString(
							ImageRunResourceVolumesVariablesModel.CPU_MEDIUM)));
			model.setCpuShareWeight(cpuShareWeight);

			int maxMemory = this.model.getTotalMemory();
			// retrieve memory limit stored in MB
			final long memoryLimit = Long
					.parseLong(configuration.getAttribute(MEMORY_LIMIT,
							Long.toString(
							ImageRunResourceVolumesVariablesModel.DEFAULT_MEMORY)));
			// make sure memory limit is not higher than maxMemory
			model.setMemoryLimit(Math.min(maxMemory, memoryLimit));
			toggleResourceLimitationControls(getContainer());
		} catch (CoreException e) {
			Activator.logErrorMessage(
					LaunchMessages.getString(
							"RunDockerImageLaunchConfiguration.load.failure"), //$NON-NLS-1$
					e);
		}
		model.addPropertyChangeListener(
				new LaunchConfigurationChangeListener());
	}

