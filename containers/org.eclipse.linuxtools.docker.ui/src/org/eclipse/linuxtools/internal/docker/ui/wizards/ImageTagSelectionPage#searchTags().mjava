	private void searchTags() {
		try {
			final BlockingQueue<List<DockerImageTagSearchResult>> searchResultQueue = new ArrayBlockingQueue<>(
					1);
			ImageTagSelectionPage.this.getContainer().run(true, true,
					monitor -> {
						try {
							monitor.beginTask(
									WizardMessages.getString(
											"ImageTagSelectionPage.searchTask"), //$NON-NLS-1$
									2);
							final String selectedImageName = ImageTagSelectionPage.this.model
									.getSelectedImage().getName();
							final List<IRepositoryTag> repositoryTags = new DockerHubRegistry()
									.getTags(selectedImageName);
							monitor.worked(1);
							final List<DockerImageTagSearchResult> searchResults = new ArrayList<>();
							final IDockerConnection connection = model
									.getSelectedConnection();
							for (IRepositoryTag repositoryTag : repositoryTags) {
								searchResults
										.add(new DockerImageTagSearchResult(
												selectedImageName,
												repositoryTag,
												connection.hasImage(
														selectedImageName,
														repositoryTag
																.getName())));
							}
							monitor.worked(1);
							searchResultQueue.offer(searchResults);
						} catch (DockerException | InterruptedException
								| ExecutionException e) {
							Activator.log(e);
						}
						monitor.done();
					});
			List<DockerImageTagSearchResult> res = searchResultQueue.poll(10,
					TimeUnit.SECONDS);
			final List<DockerImageTagSearchResult> searchResult = (res == null)
					? new ArrayList<>() : res;
			Display.getCurrent().asyncExec(new Runnable() {
				@Override
				public void run() {
					ImageTagSelectionPage.this.model
							.setImageTagSearchResult(searchResult);
					// refresh the wizard buttons
					getWizard().getContainer().updateButtons();
				}
			});
			// display a warning in the title area if the search result is empty
			if (searchResult.isEmpty()) {
				this.setMessage(
						WizardMessages.getString(
								"ImageTagSelectionPage.noTagWarning"), //$NON-NLS-1$
						WARNING);
			} else if (searchResult.size() == 1) {
				this.setMessage(
						WizardMessages.getString(
								"ImageTagSelectionPage.oneTagMatched"), //$NON-NLS-1$
						INFORMATION);
			} else {
				this.setMessage(
						WizardMessages.getFormattedString(
								"ImageTagSelectionPage.tagsMatched", //$NON-NLS-1$
								Integer.toString(searchResult.size())),
						INFORMATION);
			}
		} catch (InvocationTargetException | InterruptedException e) {
			Activator.log(e);
		}
	}

