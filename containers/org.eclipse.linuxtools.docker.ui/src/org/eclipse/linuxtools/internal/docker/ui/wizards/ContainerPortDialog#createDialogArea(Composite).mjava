	@Override
	protected Control createDialogArea(Composite parent) {
		final int COLUMNS = 2;
		final Composite container = new Composite(parent, SWT.NONE);
		GridDataFactory.fillDefaults().align(SWT.FILL, SWT.FILL)
				.span(COLUMNS, 1).grab(true, true).applyTo(container);
		GridLayoutFactory.fillDefaults().numColumns(COLUMNS).margins(6, 6)
				.applyTo(container);
		final Label explanationLabel = new Label(container, SWT.NONE);
		explanationLabel.setText("Specify the container port to expose:"); //$NON-NLS-1$
		GridDataFactory.fillDefaults().align(SWT.FILL, SWT.CENTER)
				.span(COLUMNS, 1).grab(false, false).applyTo(explanationLabel);
		final Label containerLabel = new Label(container, SWT.NONE);
		containerLabel.setText("Container port:"); //$NON-NLS-1$
		GridDataFactory.fillDefaults().align(SWT.FILL, SWT.CENTER)
				.grab(false, false).applyTo(containerLabel);
		final Text containerPortText = new Text(container, SWT.BORDER);
		GridDataFactory.fillDefaults().align(SWT.FILL, SWT.CENTER)
				.grab(true, false).applyTo(containerPortText);
		final Label hostAddressLabel = new Label(container, SWT.NONE);
		hostAddressLabel.setText("Host address:"); //$NON-NLS-1$
		GridDataFactory.fillDefaults().align(SWT.FILL, SWT.CENTER)
				.grab(false, false).applyTo(hostAddressLabel);
		final Text hostAddressText = new Text(container, SWT.BORDER);
		GridDataFactory.fillDefaults().align(SWT.FILL, SWT.CENTER)
				.grab(true, false).applyTo(hostAddressText);
		final Label hostPortLabel = new Label(container, SWT.NONE);
		hostPortLabel.setText("Host port:"); //$NON-NLS-1$
		GridDataFactory.fillDefaults().align(SWT.FILL, SWT.CENTER)
				.grab(false, false).applyTo(hostPortLabel);
		final Text hostPortText = new Text(container, SWT.BORDER);
		GridDataFactory.fillDefaults().align(SWT.FILL, SWT.CENTER)
				.grab(true, false).applyTo(hostPortText);
		// error message
		final Label errorMessageLabel = new Label(container, SWT.NONE);
		GridDataFactory.fillDefaults().align(SWT.FILL, SWT.CENTER)
				.span(COLUMNS, 1).grab(true, false).applyTo(errorMessageLabel);

		// listening to changes
		final ISWTObservableValue containerPortObservable = WidgetProperties
				.text(SWT.Modify).observe(containerPortText);
		dbc.bindValue(containerPortObservable,
				BeanProperties
						.value(ContainerPortDialogModel.class,
								ContainerPortDialogModel.CONTAINER_PORT)
						.observe(model));
		final ISWTObservableValue hostAddressObservable = WidgetProperties
				.text(SWT.Modify).observe(hostAddressText);
		dbc.bindValue(hostAddressObservable,
				BeanProperties
						.value(ContainerPortDialogModel.class,
								ContainerPortDialogModel.HOST_ADDRESS)
						.observe(model));
		final ISWTObservableValue hostPortObservable = WidgetProperties
				.text(SWT.Modify).observe(hostPortText);
		dbc.bindValue(hostPortObservable,
				BeanProperties
						.value(ContainerPortDialogModel.class,
								ContainerPortDialogModel.HOST_PORT)
						.observe(model));

		containerPortObservable.addValueChangeListener(
				onContainerPortSettingsChanged(errorMessageLabel));
		hostPortObservable.addValueChangeListener(
				onContainerPortSettingsChanged(errorMessageLabel));
		hostAddressObservable.addValueChangeListener(
				onContainerPortSettingsChanged(errorMessageLabel));
		return container;
	}

