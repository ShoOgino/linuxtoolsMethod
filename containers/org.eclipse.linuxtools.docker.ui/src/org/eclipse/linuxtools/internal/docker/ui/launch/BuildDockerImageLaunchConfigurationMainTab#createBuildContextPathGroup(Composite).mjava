	private void createBuildContextPathGroup(final Composite container) {
		final Group buildContextPathLocationGroup = new Group(container,
				SWT.BORDER);
		GridDataFactory.fillDefaults().align(SWT.FILL, SWT.FILL)
				.grab(true, false).applyTo(buildContextPathLocationGroup);
		GridLayoutFactory.fillDefaults().margins(6, 6).numColumns(3)
				.applyTo(buildContextPathLocationGroup);
		buildContextPathLocationGroup
				.setText(LaunchMessages.getString(BUILD_CONTEXT_PATH_LABEL));
		this.buildContextPathText = new Text(
				buildContextPathLocationGroup, SWT.BORDER);
		this.buildContextPathText
				.addModifyListener(new LaunchConfigurationChangeListener());
		GridDataFactory.fillDefaults().align(SWT.FILL, SWT.CENTER)
				.grab(true, false).span(3, 1)
				.applyTo(this.buildContextPathText);
		GridDataFactory.fillDefaults().align(SWT.FILL, SWT.CENTER)
				.grab(true, false)
				.applyTo(new Label(buildContextPathLocationGroup, SWT.NONE));
		final Button browseWorkspaceButton = new Button(
				buildContextPathLocationGroup, SWT.NONE);
		browseWorkspaceButton
				.setText(LaunchMessages.getString(BROWSE_WORKSPACE));
		GridDataFactory.fillDefaults().align(SWT.FILL, SWT.CENTER)
				.grab(false, false).applyTo(browseWorkspaceButton);
		browseWorkspaceButton
				.addSelectionListener(onBrowseWorkspace(buildContextPathText, IContainer.class));
		final Button browseFileSystemButton = new Button(
				buildContextPathLocationGroup, SWT.NONE);
		browseFileSystemButton
				.setText(LaunchMessages.getString(BROWSE_FILESYSTEM));
		GridDataFactory.fillDefaults().align(SWT.FILL, SWT.CENTER)
				.grab(false, false).applyTo(browseFileSystemButton);
		browseFileSystemButton.addSelectionListener(
				onBrowseFileSystemForDirectory(this.buildContextPathText));
	}

