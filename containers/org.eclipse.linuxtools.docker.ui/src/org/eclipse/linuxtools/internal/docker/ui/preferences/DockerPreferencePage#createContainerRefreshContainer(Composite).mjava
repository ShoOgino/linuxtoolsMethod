	/**
	 * Create a container for the refresh rate property
	 * @param parent the parent container
	 */
	private void createContainerRefreshContainer(Composite parent) {
		final Composite container = new Composite(parent, SWT.NONE);
		GridDataFactory.fillDefaults().align(SWT.FILL, SWT.FILL).span(1,  1).grab(true, false).applyTo(container);
		GridLayoutFactory.fillDefaults().margins(0, 0).spacing(10, 2).applyTo(container);
		refreshTimeField = new IntegerFieldEditor(
				PreferenceConstants.REFRESH_TIME,
				Messages.getString(REFRESH_TIME_MSG), container);
		refreshTimeField.setPreferenceStore(getPreferenceStore());
		refreshTimeField
				.setValidateStrategy(StringFieldEditor.VALIDATE_ON_KEY_STROKE);
		refreshTimeField.setValidRange(5, 200);
		refreshTimeField.setPage(this);
		refreshTimeField
				.setErrorMessage(Messages.getString(INVALID_REFRESH_TIME_MSG));
		refreshTimeField.showErrorMessage();
		refreshTimeField.load();
		// If the preference changes, alert the Refresh Manager
		refreshTimeField
				.setPropertyChangeListener(event -> {
					if (event.getSource().equals(refreshTimeField)) {
						if (refreshTimeField.isValid()) {
							DockerContainerRefreshManager.getInstance()
									.setRefreshTime(
											refreshTimeField.getIntValue());
							setErrorMessage(null);
						} else {
							setErrorMessage(refreshTimeField.getErrorMessage());
						}
						setValid(refreshTimeField.isValid());
					}
				});
	}

