	public Object getColumnCompareObject(Object element, int columnIndex) {
		Column c = Column.getColumn(columnIndex);
		IDockerImage i = (IDockerImage) element;
		switch (c) {
		case CREATED:
			// We want latest created by default so we want lowest time value to
			// be higher by default.
			Long l = Long.valueOf(Long.MAX_VALUE) - Long.valueOf(i.created());
			return l;
		case SIZE:
			// For size, it is numeric, so just use the original numerical
			// ordering.
			return i.size();
		case VIRTSIZE:
			// For virtual size, it is numeric, so just use the original
			// numerical ordering.
			return i.virtualSize();
		case ID:
			return i.id();
		case PARENT:
			return i.parentId();
		case TAGS:
			// For tags, there are multiple values, just use the first for
			// ordering.
			return i.repoTags().get(0);
		}
		return "";
	}

