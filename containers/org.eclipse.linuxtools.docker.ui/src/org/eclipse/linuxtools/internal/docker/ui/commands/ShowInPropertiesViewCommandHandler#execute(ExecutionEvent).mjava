	@Override
	public Object execute(final ExecutionEvent event) {
		final IWorkbenchPart activePart = HandlerUtil.getActivePart(event);
		final List<IDockerContainer> containers = CommandUtils
				.getSelectedContainers(activePart);
		if (containers == null || containers.isEmpty()) {
			return null;
		}
		Display.getDefault().asyncExec(() -> {
			try {
				final PropertySheet propertySheet = (PropertySheet) PlatformUI
						.getWorkbench().getActiveWorkbenchWindow()
						.getActivePage()
						.showView("org.eclipse.ui.views.PropertySheet");
				final PropertyShowInContext showInContext = new PropertyShowInContext(
						activePart, HandlerUtil.getCurrentSelection(event));
				propertySheet.show(showInContext);
				// final TabbedPropertySheetPage tabbedPropertySheetPage =
				// activePart
				// .getAdapter(TabbedPropertySheetPage.class);
				// tabbedPropertySheetPage.setFocus();
			} catch (PartInitException e) {
				Activator.logErrorMessage(
						CommandMessages.getString(
								"command.showIn.propertiesView.failure"), //$NON-NLS-1$
						e);

			}
		});
		return null;
	}

