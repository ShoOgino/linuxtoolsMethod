	@SuppressWarnings("unused")
	private void createDockerfilePathGroup(final Composite container) {
		final Group dockerFilePathLocationGroup = new Group(container,
				SWT.BORDER);
		GridDataFactory.fillDefaults().align(SWT.FILL, SWT.FILL)
				.grab(true, false).applyTo(dockerFilePathLocationGroup);
		GridLayoutFactory.fillDefaults().margins(6, 6).numColumns(3)
				.applyTo(dockerFilePathLocationGroup);
		dockerFilePathLocationGroup
				.setText(LaunchMessages.getString(DOCKERFILE_PATH_LABEL));
		this.dockerFilePathText = new Text(
				dockerFilePathLocationGroup, SWT.BORDER);
		this.dockerFilePathText
				.addModifyListener(new LaunchConfigurationChangeListener());
		GridDataFactory.fillDefaults().align(SWT.FILL, SWT.CENTER)
				.grab(true, false).span(3, 1).applyTo(this.dockerFilePathText);
		GridDataFactory.fillDefaults().align(SWT.FILL, SWT.CENTER)
				.grab(true, false)
				.applyTo(new Label(dockerFilePathLocationGroup, SWT.NONE));
		final Button browseWorkspaceButton = new Button(
				dockerFilePathLocationGroup, SWT.NONE);
		browseWorkspaceButton
				.setText(LaunchMessages.getString(BROWSE_WORKSPACE));
		GridDataFactory.fillDefaults().align(SWT.FILL, SWT.CENTER)
				.grab(false, false).applyTo(browseWorkspaceButton);
		browseWorkspaceButton
				.addSelectionListener(onBrowseWorkspace(dockerFilePathText,
						dockerFilePathWorkspaceRelative, IFile.class));
		final Button browseFileSystemButton = new Button(
				dockerFilePathLocationGroup, SWT.NONE);
		browseFileSystemButton
				.setText(LaunchMessages.getString(BROWSE_FILESYSTEM));
		GridDataFactory.fillDefaults().align(SWT.FILL, SWT.CENTER)
				.grab(false, false).applyTo(browseFileSystemButton);
		browseFileSystemButton.addSelectionListener(onBrowseFileSystemForFile(
				this.dockerFilePathText, this.dockerFilePathWorkspaceRelative));
	}

