		/**
		 * @param container
		 * @param volume
		 *            the volume value provided by the {@link IDockerHostConfig}
		 *            .
		 * @return a {@link DockerContainerVolume}
		 */
		public DockerContainerVolume(final IDockerContainer container,
				final String volume) {
			this.container = container;
			// (1) "container_path" to create a new volume for the container
			// (2) "host_path:container_path" to bind-mount a host path into the
			// container
			// (3) "host_path:container_path:ro" to make the bind-mount
			// read-only
			// inside the container.
			final String[] args = volume.split(":");
			// on case (1), hostPath is null
			this.hostPath = args.length > 1 ? args[0] : null;
			// on case (1), containerPath is the first (and only) arg, otherwise
			// it's the second one.
			this.containerPath = args.length > 1 ? args[1] : args[0];
			// flags exists on case (3) only
			this.flags = args.length > 2 ? args[2] : null;
		}

