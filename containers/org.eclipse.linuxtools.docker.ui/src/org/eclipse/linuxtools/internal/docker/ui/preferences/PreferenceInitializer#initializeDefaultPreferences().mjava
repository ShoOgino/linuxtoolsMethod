	@Override
	public void initializeDefaultPreferences() {
		final IPreferenceStore store = Activator.getDefault().getPreferenceStore();
		store.setDefault(REFRESH_TIME, 15);
		// sadly, this will only work if the DOCKER environment variables were set
		// as the system level, not in a .bash_rc or similar terminal session script 
		// which Eclipse cannot access when it is launched from the Dock (or menu).
		final String defaultDockerHost = System.getenv("DOCKER_HOST"); //$NON-NLS-1$
		final String defaultDockerTLSVerify = System.getenv("DOCKER_TLS_VERIFY"); //$NON-NLS-1$
		final String defaultDockerCertPath = System.getenv("DOCKER_CERT_PATH"); //$NON-NLS-1$
		//FIXME: can we use the OS name to provide smarter default values ?
		if (defaultDockerHost == null || defaultDockerHost.equals("")) {
			store.setDefault(BINDING_MODE.toString(), UNIX_SOCKET.toString());
			store.setDefault(UNIX_SOCKET_PATH.toString(), DockerConnection.Defaults.DEFAULT_UNIX_SOCKET_PATH);
		} else if(defaultDockerHost.startsWith("unix://")) {
			store.setDefault(BINDING_MODE.toString(), UNIX_SOCKET.toString());
			store.setDefault(UNIX_SOCKET_PATH.toString(), defaultDockerHost);
		} else {
			store.setDefault(BINDING_MODE.toString(), TCP_CONNECTION.toString());
			store.setDefault(TCP_HOST.toString(), defaultDockerHost);
			if("1".equals(defaultDockerTLSVerify)) {
				store.setDefault(TCP_TLS_VERIFY.toString(), Boolean.TRUE);
			}
			if(defaultDockerCertPath != null && !defaultDockerCertPath.isEmpty()) {
				store.setDefault(TCP_CERT_PATH.toString(), defaultDockerCertPath);
			}
		}
		
		store.setDefault(AUTOLOG_ON_START, true);
		store.setDefault(LOG_TIMESTAMP, true);
	}

