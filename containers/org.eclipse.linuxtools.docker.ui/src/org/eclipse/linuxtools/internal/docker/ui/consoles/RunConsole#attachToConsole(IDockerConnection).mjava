	/**
	 * The console will be attached to the underlying container.
	 *
	 * @param connection
	 *            The connection associated with this console.
	 */
	public void attachToConsole(final IDockerConnection connection) {
		final InputStream in = getInputStream();
		Thread t = new Thread(() -> {
			try {
				DockerConnection conn = (DockerConnection) connection;
				if (conn.getContainerInfo(containerId).config().openStdin()) {
					IDockerContainerInfo info = conn.getContainerInfo(containerId);
					IDockerContainerState state = null;
					if (info != null) {
						state = info.state();
					}
					int sleepCounter = 0;
					do {
						if (state == null || (!state.running() && (state.finishDate() == null
								|| state.finishDate()
										.before(state.startDate())))) {
							Thread.sleep(300);
							++sleepCounter;
						}
						state = null;
						info = conn.getContainerInfo(containerId);
						if (info != null) {
							state = info.state();
						} else {
							if (sleepCounter > 2) {
								break;
							}
						}
					} while (state == null || (!state.running()
							&& (state.finishDate() == null || state.finishDate().before(state.startDate()))));
					Thread.sleep(300);
					info = conn.getContainerInfo(containerId);
					if (info == null) {
						return;
					}
					state = info.state();
					if (state.running()) {
						conn.attachCommand(containerId, in, null);
					}
				}
			} catch (Exception e) {
				Activator.log(e);
			}
		});
		t.start();
		attached = true;
	}

