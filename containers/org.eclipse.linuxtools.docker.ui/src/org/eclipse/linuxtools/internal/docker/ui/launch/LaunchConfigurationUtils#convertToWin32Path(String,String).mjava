	/**
	 * Converts the given path to a portable form, replacing all "\" and ": "
	 * with "/" if the given <code>os</code> is {@link Platform#OS_WIN32}.
	 *
	 * @param os
	 *            the current OS
	 * @param path
	 *            the path to convert
	 * @return the converted path or the given path
	 * @see LaunchConfigurationUtils#convertToWin32Path(String)
	 * @see {@link Platform#getOS()}
	 */
	public static String convertToWin32Path(final String os,
			final String path) {
		if (os != null && os.equals(Platform.OS_WIN32)) {
			// replace all "/" with "\" and then drive info (eg "/c/" to "C:/")
			final Matcher m = Pattern.compile("^/([a-zA-Z])/").matcher(path); //$NON-NLS-1$
			if (m.find()) {
				final StringBuffer b = new StringBuffer();
				m.appendReplacement(b, m.group(1).toUpperCase());
				b.append(":\\"); //$NON-NLS-1$
				m.appendTail(b);
				return b.toString().replace('/', '\\'); //$NON-NLS-1$ //$NON-NLS-2$
			}
		}
		return path;
	}

