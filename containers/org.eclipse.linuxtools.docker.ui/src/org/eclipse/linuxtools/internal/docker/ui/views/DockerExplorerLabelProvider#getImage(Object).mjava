	@Override
	public Image getImage(final Object element) {
		if(element instanceof IDockerConnection) {
			if (((IDockerConnection) element).isOpen()) {
				return OPEN_CONNECTION_IMAGE;
			} else {
				return UNOPEN_CONNECTION_IMAGE;
			}
		} else if(element instanceof DockerImagesCategory) {
			return CATEGORY_IMAGE;
		} else if(element instanceof DockerContainersCategory) {
			return CATEGORY_IMAGE;
		} else if(element instanceof IDockerImage) {
			return IMAGE_IMAGE;
		} else if(element instanceof IDockerContainer) {
			final IDockerContainer container = (IDockerContainer) element;
			final EnumDockerStatus containerStatus = EnumDockerStatus
					.fromStatusMessage(container.status());
			if (containerStatus == EnumDockerStatus.RUNNING) {
				return STARTED_CONTAINER_IMAGE;
			} else if (containerStatus == EnumDockerStatus.PAUSED) {
				return PAUSED_CONTAINER_IMAGE;
			} else {
				return STOPPED_CONTAINER_IMAGE;
			}
		} else if (element instanceof DockerContainerLinksCategory
				|| element instanceof DockerContainerLink) {
			return CONTAINER_LINK_IMAGE;
		} else if (element instanceof DockerContainerVolumesCategory
				|| element instanceof DockerContainerVolume) {
			return CONTAINER_VOLUME_IMAGE;
		} else if (element instanceof DockerContainerPortMappingsCategory
				|| element instanceof IDockerPortMapping) {
			return CONTAINER_PORT_IMAGE;
		} else if(element instanceof LoadingStub) {
			return LOADING_IMAGE;
		}
		return null;
	}

