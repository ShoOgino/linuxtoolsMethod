	@Override
	public void performApply(ILaunchConfigurationWorkingCopy configuration) {
		configuration.setAttribute(
				IRunDockerImageLaunchConfigurationConstants.CONNECTION_NAME,
				model.getSelectedConnectionName());
		if (model.getSelectedImage() != null) {
			configuration.setAttribute(
					IRunDockerImageLaunchConfigurationConstants.IMAGE_ID,
					model.getSelectedImage().id());
			configuration.setAttribute(
					IRunDockerImageLaunchConfigurationConstants.IMAGE_NAME,
					model.getSelectedImageName());
		}
		configuration.setAttribute(
				IRunDockerImageLaunchConfigurationConstants.COMMAND,
				model.getCommand());
		configuration.setAttribute(
				IRunDockerImageLaunchConfigurationConstants.ENTRYPOINT,
				"".equals(model.getEntrypoint()) ? null //$NON-NLS-1$
						: model.getEntrypoint());
		configuration.setAttribute(
				IRunDockerImageLaunchConfigurationConstants.CONTAINER_NAME,
				"".equals(model.getContainerName()) ? null //$NON-NLS-1$
						: model.getContainerName());
		configuration.setAttribute(
				IRunDockerImageLaunchConfigurationConstants.ALLOCATE_PSEUDO_CONSOLE,
				model.isAllocatePseudoTTY());
		configuration.setAttribute(
				IRunDockerImageLaunchConfigurationConstants.AUTO_REMOVE,
				model.isRemoveWhenExits());
		configuration.setAttribute(
				IRunDockerImageLaunchConfigurationConstants.INTERACTIVE,
				model.isInteractiveMode());
	}

