	/**
	 * Sets the default settings by looking for the:
	 * <ul>
	 * <li>a Unix socket at /var/run/docker.sock</li>
	 * <li>the following environment variables:
	 * <ul>
	 * <li>DOCKER_HOST</li>
	 * <li>DOCKER_CERT_PATH</li>
	 * <li>DOCKER_TLS_VERIFY</li>
	 * </ul>
	 * </li>
	 * </ul>
	 * and sets the default connection settings accordingly.
	 */
	private void retrieveDefaultConnectionSettings() {
		// let's run this in a job and show the progress in the wizard
		// progressbar
		try {
			getWizard().getContainer().run(true, true,
					new IRunnableWithProgress() {
						@Override
						public void run(final IProgressMonitor monitor) {
							monitor.beginTask(WizardMessages.getString(
									"NewDockerConnectionPage.retrieveTask"), //$NON-NLS-1$
									1);
							final DockerConnection.Defaults defaults = new DockerConnection.Defaults();
							model.setCustomSettings(
									!defaults.isSettingsResolved());
							model.setConnectionName(defaults.getName());
							model.setBindingMode(defaults.getBindingMode());
							model.setUnixSocketPath(
									defaults.getUnixSocketPath());
							model.setTcpHost(defaults.getTcpHost());
							model.setTcpTLSVerify(defaults.getTcpTlsVerify());
							model.setTcpCertPath(defaults.getTcpCertPath());
							monitor.done();
						}
					});
		} catch (InvocationTargetException | InterruptedException e) {
			Activator.log(e);
		}

	}

