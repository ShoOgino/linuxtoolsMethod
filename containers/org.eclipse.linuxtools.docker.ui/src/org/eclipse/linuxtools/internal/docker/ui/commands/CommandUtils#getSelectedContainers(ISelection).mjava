	/**
	 * 
	 * @param selection
	 *            the current selection
	 * @return the {@link List} of {@link IDockerContainer} associated with the
	 *         given {@link ISelection}, or {@link Collections#emptyList()} if
	 *         none was selected.
	 */
	public static List<IDockerContainer> getSelectedContainers(final ISelection selection) {
		if (selection instanceof IStructuredSelection) {
			final List<IDockerContainer> selectedContainers = new ArrayList<>();
			final IStructuredSelection structuredSelection = (IStructuredSelection) selection;
			for (Iterator<?> iterator = structuredSelection.iterator(); iterator.hasNext();) {
				final Object selectedElement = iterator.next();
				if (selectedElement instanceof IDockerContainer) {
					selectedContainers.add((IDockerContainer) selectedElement);
				}
			}
			return Collections.unmodifiableList(selectedContainers);
		}
		return Collections.emptyList();
	}

