	@Override
	protected void createFieldEditors() {
		// installation directory for docker-machine
		this.dockerMachineInstallDir = new CustomDirectoryFieldEditor(
				PreferenceConstants.DOCKER_MACHINE_INSTALLATION_DIRECTORY,
				PreferenceMessages.getString("DockerMachinePath.label"), //$NON-NLS-1$
				getFieldEditorParent()) {
			@Override
			protected boolean checkState() {
				if (isEmptyStringAllowed()
						&& !this.getStringValue().isEmpty()) {
					final boolean validPath = super.checkState();
					if (!validPath) {
						return false;
					}
					if (!DockerMachine.getInstance()
							.checkPathToDockerMachine(this.getStringValue())) {
						setWarningMessage(NLS.bind(
								org.eclipse.linuxtools.docker.core.Messages.Docker_Machine_Command_Not_Found,
								this.getStringValue()));
						return true;
					}
				}
				setMessage("");
				return true;
			}
		};
		addField(this.dockerMachineInstallDir);
		this.dockerMachineInstallDir.setPreferenceStore(getPreferenceStore());
		// allow empty value if docker-machine is not installed
		this.dockerMachineInstallDir.setEmptyStringAllowed(true);
		this.dockerMachineInstallDir
				.setValidateStrategy(StringFieldEditor.VALIDATE_ON_KEY_STROKE);
		this.dockerMachineInstallDir.setPage(this);
		this.dockerMachineInstallDir.setErrorMessage(
				PreferenceMessages.getString("DockerMachinePath.invalid.label")); //$NON-NLS-1$
		this.dockerMachineInstallDir.showErrorMessage();
		this.dockerMachineInstallDir.load();
		// installation directory for underlying VM driver
		this.vmDriverInstallDir = new CustomDirectoryFieldEditor(
				PreferenceConstants.VM_DRIVER_INSTALLATION_DIRECTORY,
				PreferenceMessages.getString("VMDriverPath.label"), //$NON-NLS-1$
				getFieldEditorParent());
		addField(this.vmDriverInstallDir);
		this.vmDriverInstallDir.setPreferenceStore(getPreferenceStore());
		// allow empty value if docker-machine is not installed
		this.vmDriverInstallDir.setPage(this);
		this.vmDriverInstallDir.setEmptyStringAllowed(true);
		this.vmDriverInstallDir.setErrorMessage(
				PreferenceMessages.getString("VMDriverPath.invalid.label")); //$NON-NLS-1$
		this.vmDriverInstallDir.showErrorMessage();
		this.vmDriverInstallDir
				.setValidateStrategy(StringFieldEditor.VALIDATE_ON_KEY_STROKE);
		this.vmDriverInstallDir.load();
	}

