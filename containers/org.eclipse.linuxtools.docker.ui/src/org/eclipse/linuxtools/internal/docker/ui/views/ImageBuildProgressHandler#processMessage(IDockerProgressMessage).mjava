	@Override
	public void processMessage(IDockerProgressMessage message)
			throws DockerException {
		if (message.error() != null) {
			stopAllJobs();
			throw new DockerImageBuildFailedException(image, message.error());
		}
		if (progressJob == null) {
			// For image build, all the data is in the stream.
			String status = message.stream();
			if (status != null
					&& status.startsWith(DVMessages
							.getString(IMAGE_BUILD_COMPLETE))) {
				// refresh images
				connection.getImages(true);
			} else {
				ProgressJob newJob = new ProgressJob(
						DVMessages.getFormattedString(IMAGE_BUILDING_JOBNAME,
								image), DVMessages.getString(IMAGE_BUILDING));
				newJob.setUser(true);
				newJob.setPriority(Job.LONG);
				newJob.schedule();
				progressJob = newJob;
			}

		} else {
			String status = message.stream();
			if (status != null
					&& status.startsWith(DVMessages
							.getString(IMAGE_BUILD_COMPLETE))) {
				progressJob.setPercentageDone(100);
				// refresh images
				connection.getImages(true);
			} else if (status != null
					&& status
							.startsWith(DVMessages.getString(IMAGE_BUILD_STEP))) {
				// Step number follows
				String stepNumber = status.substring(DVMessages.getString(
						IMAGE_BUILD_STEP).length());
				// Need to separate step # from actual message.
				String[] tokens = stepNumber.split(" ");
				if (lines > 0) {
					long percentage = (Long.valueOf(tokens[0]) + 1) / lines;
					progressJob.setPercentageDone((int) percentage);
				}
			}
		}
	}

