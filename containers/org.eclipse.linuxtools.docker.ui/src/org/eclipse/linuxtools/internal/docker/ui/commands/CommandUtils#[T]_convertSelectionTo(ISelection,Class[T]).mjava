	/**
	 * 
	 * @param selection
	 *            the current selection
	 * @return the {@link List} of {@link IDockerContainer} associated with the
	 *         given {@link ISelection}, or {@link Collections#emptyList()} if
	 *         none was selected.
	 */
	@SuppressWarnings("unchecked")
	private static <T> List<T> convertSelectionTo(final ISelection selection,
			final Class<T> targetClass) {
		if (selection instanceof IStructuredSelection) {
			final IStructuredSelection structuredSelection = (IStructuredSelection) selection;
			return (List<T>) structuredSelection.toList().stream()
					.filter(selectedElement -> targetClass
							.isAssignableFrom(selectedElement.getClass()))
					.map(selectedElement -> (T) selectedElement)
					.collect(Collectors.toList());
		}
		return Collections.emptyList();
	}

