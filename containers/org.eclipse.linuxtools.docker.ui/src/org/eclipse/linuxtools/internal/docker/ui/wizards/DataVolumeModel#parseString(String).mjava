	/**
	 * Create a DataVolumeModel from a toString() output.
	 * 
	 * @param fromString
	 * @return DataVolumeModel
	 */
	public static DataVolumeModel parseString(
			final String fromString) {
		final DataVolumeModel model = new DataVolumeModel();
		final String[] items = fromString.split(SEPARATOR); // $NON-NLS-1$
		model.containerPath = items[0];
		model.mountType = MountType.valueOf(items[1]);
		switch (model.mountType) {
		case CONTAINER:
			model.setContainerMount(items[2]);
			model.setSelected(Boolean.valueOf(items[3]));
			break;
		case HOST_FILE_SYSTEM:
			// For Windows, there are multiple formats. If a user has specified
			// a windows drive using the : separator, we have to form the
			// host path by merging the path back together. If the user
			// has specified an alternate format, we don't do this.
			if (Platform.OS_WIN32.equals(Platform.getOS())
					&& items.length > 5) {
				model.setHostPathMount(items[2] + SEPARATOR + items[3]);
				model.setReadOnly(Boolean.valueOf(items[4]));
				model.setSelected(Boolean.valueOf(items[5]));
			} else {
				model.setHostPathMount(items[2]);
				model.setReadOnly(Boolean.valueOf(items[3]));
				model.setSelected(Boolean.valueOf(items[4]));
			}
			break;
		case NONE:
			model.setSelected(Boolean.valueOf(items[2]));
			break;
		}
		return model;
	}

