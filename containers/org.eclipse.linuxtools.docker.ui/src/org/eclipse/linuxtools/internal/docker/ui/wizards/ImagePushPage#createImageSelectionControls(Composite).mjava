	private IObservableValue<String> createImageSelectionControls(
			final Composite container) {
		final Label nameLabel = new Label(container, SWT.NULL);
		nameLabel.setText(
				WizardMessages.getString("ImagePullPushPage.name.label")); //$NON-NLS-1$
		GridDataFactory.fillDefaults().align(SWT.FILL, SWT.CENTER)
				.grab(false, false).applyTo(nameLabel);
		final Combo imageNameCombo = new Combo(container, SWT.DROP_DOWN);
		imageNameCombo.setToolTipText(
				WizardMessages.getString("ImagePushName.toolTip")); //$NON-NLS-1$
		GridDataFactory.fillDefaults().align(SWT.FILL, SWT.CENTER)
				.grab(true, false).applyTo(imageNameCombo);
		final ComboViewer imageNameComboViewer = new ComboViewer(
				imageNameCombo);
		imageNameComboViewer.setContentProvider(new ArrayContentProvider());
		imageNameComboViewer.setInput(getModel().getImage().repoTags());
		// binding must take place after the input is set, so that default
		// repo/name can be selected.
		final IObservableValue<String> imageNameObservable = BeanProperties
				.value(ImagePushPageModel.class,
						ImagePullPushPageModel.SELECTED_IMAGE_NAME, String.class)
				.observe(getModel());
		dbc.bindValue(WidgetProperties.widgetSelection().observe(imageNameCombo),
				imageNameObservable);
		// filler for the last column
		GridDataFactory.fillDefaults().align(SWT.FILL, SWT.CENTER)
				.grab(false, false).applyTo(new Label(container, SWT.NONE));
		return imageNameObservable;
	}

