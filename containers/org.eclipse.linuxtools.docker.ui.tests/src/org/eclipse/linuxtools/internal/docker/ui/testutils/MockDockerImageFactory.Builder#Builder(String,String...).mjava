		private Builder(final String repoTag, final String... otherRepoTags) {
			this.image = Mockito
					.mock(Image.class);
			// generate a random id for the image
			final String id = IntStream.range(0, 12)
					.mapToObj(i -> Character.valueOf(hexa[new Random().nextInt(16)]).toString())
					.collect(Collectors.joining());
			Mockito.when(this.image.id()).thenReturn(id);
			final List<String> repoTags = new ArrayList<>();
			repoTags.add(repoTag);
			Stream.of(otherRepoTags).forEach(r -> repoTags.add(r));
			Mockito.when(this.image.repoTags()).thenReturn(ImmutableList.copyOf(repoTags));
			Mockito.when(this.image.created()).thenReturn(Long.toString(new Date().getTime()));
		}

