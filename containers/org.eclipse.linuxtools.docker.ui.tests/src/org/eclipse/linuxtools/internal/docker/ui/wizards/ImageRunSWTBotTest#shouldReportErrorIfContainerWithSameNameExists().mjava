	@Test
	public void shouldReportErrorIfContainerWithSameNameExists() {
		// given
		final DockerClient client = MockDockerClientFactory.image(MockImageFactory.name("foo:latest").build())
				.container(MockContainerFactory.name("foo_bar").build()).build();
		final DockerConnection dockerConnection = MockDockerConnectionFactory.from("Test", client).withDefaultTCPConnectionSettings();
		DockerConnectionManagerUtils.configureConnectionManager(dockerConnection);
		// expand the 'Images' node and select the 'foo' image
		SWTUtils.getTreeItem(dockerExplorerViewBot, "Test", "Images", "foo").select();

		// when opening the "Run Image..." wizard
		final SWTBotTree dockerExplorerViewTreeBot = dockerExplorerViewBot.bot().tree();
		dockerExplorerViewTreeBot.contextMenu("Run...").click();

		// when use an existing container name
		bot.textWithLabel(WizardMessages.getString("ImageRunSelectionPage.containerName")).setText("foo_bar");
		// then
		// wait for https://bugs.eclipse.org/bugs/show_bug.cgi?id=482889 to be
		// able to check the wizard validation message
		//assertThat(bot.text(WizardMessages.getString("ImageRunSelectionPage.containerWithSameName"))).isNotNull();
		ButtonAssertion.assertThat(bot.button("Finish")).isNotEnabled();
	}

