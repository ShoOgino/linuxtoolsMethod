	/**
	 * Configures the {@link DockerConnectionManager} with the given array of
	 * {@link IDockerConnection} (can be mocked) and refreshes the associated
	 * {@link DockerExplorerView}.
	 * 
	 * @param connectionStorageManager the {@link IDockerConnectionStorageManager} to use (can be mocked)
	 */
	public static void configureConnectionManager(final IDockerConnectionStorageManager connectionStorageManager) {
		DockerConnectionManager.getInstance()
				.setConnectionStorageManager(connectionStorageManager);
		final SWTWorkbenchBot bot = new SWTWorkbenchBot();
		final DockerExplorerView dockerExplorerView = getView(bot, DockerExplorerView.VIEW_ID);
		final DockerContainersView dockerContainersView = getView(bot, DockerContainersView.VIEW_ID);
		SWTUtils.syncExec(() -> {
			DockerConnectionManager.getInstance().reloadConnections();
			if (dockerExplorerView != null) {
				dockerExplorerView.getCommonViewer().refresh();
				dockerExplorerView.showConnectionsOrExplanations();
			}
			if (dockerContainersView != null) {
				dockerContainersView.getViewer().refresh();
			}
		});
		SWTUtils.wait(1, TimeUnit.SECONDS);
	}

