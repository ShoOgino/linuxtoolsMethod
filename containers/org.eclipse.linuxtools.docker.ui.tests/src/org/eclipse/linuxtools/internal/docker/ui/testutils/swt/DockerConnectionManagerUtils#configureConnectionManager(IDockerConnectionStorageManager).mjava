	/**
	 * Configures the {@link DockerConnectionManager} with the given array of
	 * {@link IDockerConnection} (can be mocked) and refreshes the associated
	 * {@link DockerExplorerView}.
	 *
	 * @param connectionStorageManager
	 *            the {@link IDockerConnectionStorageManager} to use (can be
	 *            mocked)
	 */
	public static void configureConnectionManager(final IDockerConnectionStorageManager connectionStorageManager) {
		DockerConnectionManager.getInstance().setConnectionStorageManager(connectionStorageManager);
		final SWTWorkbenchBot bot = new SWTWorkbenchBot();
		final SWTBotView dockerExplorerBotView = SWTUtils.getSWTBotView(bot, DockerExplorerView.VIEW_ID);
		final SWTBotView dockerContainersBotView = SWTUtils.getSWTBotView(bot, DockerContainersView.VIEW_ID);
		SWTUtils.syncExec(() -> {
			DockerConnectionManager.getInstance().reloadConnections();
			if (dockerExplorerBotView != null) {
				final DockerExplorerView dockerExplorerView = (DockerExplorerView) dockerExplorerBotView
						.getViewReference().getView(false);
				if (dockerExplorerView != null) {
					dockerExplorerView.getCommonViewer().refresh();
					dockerExplorerView.showConnectionsOrExplanations();
				}
			}
			if (dockerContainersBotView != null) {
				final DockerContainersView dockerContainersView = (DockerContainersView) dockerContainersBotView
						.getViewReference().getView(false);
				if (dockerContainersView != null) {
					dockerContainersView.getViewer().refresh();
				}
			}
		});
	}

