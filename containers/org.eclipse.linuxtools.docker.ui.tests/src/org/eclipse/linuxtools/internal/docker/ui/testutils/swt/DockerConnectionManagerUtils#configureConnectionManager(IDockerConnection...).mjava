	/**
	 * Configures the {@link DockerConnectionManager} with the given array of
	 * {@link IDockerConnection} (can be mocked) and refreshes the associated
	 * {@link DockerExplorerView}.
	 * 
	 * @param connections the connection to configure in the {@link DockerConnectionManager} via a mocked {@link IDockerConnectionStorageManager}
	 * @throws InterruptedException
	 */
	public static void configureConnectionManager(
			final IDockerConnection... connections) throws InterruptedException {
		DockerConnectionManager.getInstance()
				.setConnectionStorageManager(MockDockerConnectionStorageManagerFactory.providing(connections));
		final SWTWorkbenchBot bot = new SWTWorkbenchBot();
		final SWTBotView dockerExplorerViewBot = bot.viewById("org.eclipse.linuxtools.docker.ui.dockerExplorerView");
		if(dockerExplorerViewBot != null) {
			final DockerExplorerView dockerExplorerView = (DockerExplorerView) (dockerExplorerViewBot.getViewReference().getView(true));
			SWTUtils.syncExec(() -> {
				DockerConnectionManager.getInstance().reloadConnections();
				dockerExplorerView.getCommonViewer().refresh();
				dockerExplorerView.showConnectionsOrExplanations();
			});
			Thread.sleep(TimeUnit.SECONDS.toMillis(1));
		}
	}

