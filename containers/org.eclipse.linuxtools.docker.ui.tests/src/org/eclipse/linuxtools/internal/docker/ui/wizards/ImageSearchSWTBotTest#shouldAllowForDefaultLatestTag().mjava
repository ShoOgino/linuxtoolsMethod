	@Test
	public void shouldAllowForDefaultLatestTag() {
		// given
		final DockerClient client = MockDockerClientFactory
				.onSearch("foo", MockImageSearchResultFactory.name("foo").build()).build();
		final DockerConnection dockerConnection = MockDockerConnectionFactory.from("Test", client).withDefaultTCPConnectionSettings();
		DockerConnectionManagerUtils.configureConnectionManager(dockerConnection);
		// when opening the "Pull..." wizard
		SWTUtils.getTreeItem(dockerExplorerViewBot, "Test", "Images").select();
		dockerExplorerViewBot.bot().tree().contextMenu("Pull...").click();

		// when specifying a term
		bot.textWithLabel(WizardMessages.getString("ImagePullPushPage.name.label")).setText("foo");

		// when clicking on the "Search..." button
		bot.button(WizardMessages.getString("ImagePull.search.label")).click();

		// then the search should have been triggered and results should be
		// available
		assertThat(bot.table().rowCount()).isEqualTo(1);
		assertThat(bot.button("Next >").isEnabled()).isTrue();
		assertThat(bot.button("Finish").isEnabled()).isTrue();
		bot.button("Finish").click();

		// when back to Pull wizard, the Image name field should be filled
		assertThat(bot.textWithLabel(WizardMessages.getString("ImagePullPushPage.name.label")).getText())
				.isEqualTo("foo:latest");
	}

