	@Override
	public ICompletionProposal[] computeCompletionProposals(ITextViewer viewer, int offset) {
		try {
			IDocument document = viewer.getDocument();
			ArrayList<ICompletionProposal> result = new ArrayList<>();

			int lineNr = document.getLineOfOffset(offset);
			int lineOffset = document.getLineOffset(lineNr);

			boolean isNewLine = (offset == 0) || (document.getChar(offset - 1) == '\n');
			if (isNewLine) {
				for (String instr : InstructionWordRule.INSTRUCTIONS)
					result.add(new CompletionProposal(instr, lineOffset, 0, getAdditionalInfo(instr)));
			}

			boolean isFirstWord = true;
			for (int i = lineOffset; i < offset; i++) {
				if (Character.isWhitespace(document.getChar(i)))
					isFirstWord = false;
			}
			if (isFirstWord) {
				String prefix = "";
				for (int i = lineOffset; i < offset; i++)
					prefix += document.getChar(i);
				for (String instr : InstructionWordRule.INSTRUCTIONS) {
					if (instr.toLowerCase().startsWith(prefix.toLowerCase()))
						result.add(
								new CompletionProposal(instr, lineOffset, prefix.length(), getAdditionalInfo(instr)));
				}
			}

			return result.toArray(new ICompletionProposal[result.size()]);
		} catch (Exception e) {
			Activator.getDefault().getLog()
					.log(new Status(IStatus.WARNING, Activator.PLUGIN_ID, "Failed to compute completion proposals", e));
			return NO_COMPLETIONS;
		}
	}

