	public List<SyntaxProblem> check(IDocument document, int offset, int length) throws BadLocationException {
		String region = document.get(offset, length);
		int lineCount = region.split(LINE_SEP).length;
		int startingLineNr = document.getLineOfOffset(offset);

		List<SyntaxProblem> problems = new ArrayList<>();

		for (int lineNr = startingLineNr; lineNr < startingLineNr + lineCount; lineNr++) {
			int lineOffset = document.getLineOffset(lineNr);
			int lineEnd = document.getLength();
			if (lineNr + startingLineNr + 1 < lineCount)
				lineEnd = document.getLineOffset(lineNr + 1);

			int endOfFirstWord = 0;
			for (; endOfFirstWord < lineEnd - lineOffset; endOfFirstWord++) {
				if (Character.isWhitespace(document.getChar(lineOffset + endOfFirstWord)))
					break;
			}

			String firstWord = document.get(lineOffset, endOfFirstWord);
			if (firstWord.trim().isEmpty())
				continue;
			if (firstWord.trim().startsWith(DockerCommentScanner.COMMENT_SEQUENCE))
				continue;

			String matchingInstruction = null;
			for (String instr : InstructionWordRule.INSTRUCTIONS) {
				if (instr.equalsIgnoreCase(firstWord)) {
					matchingInstruction = instr;
					break;
				}
			}

			if (matchingInstruction == null) {
				// Error: unknown instruction
				problems.add(new SyntaxProblem(IMarker.SEVERITY_ERROR, lineOffset, firstWord.length(),
						"Unknown instruction: " + firstWord));
			} else if (!matchingInstruction.equals(firstWord)) {
				// Warning: case incorrect
				problems.add(new SyntaxProblem(IMarker.SEVERITY_WARNING, lineOffset, firstWord.length(),
						"Instructions should be upper case"));
			}
		}

		return problems;
	}

