	@Override
	public IDockerImageInfo getImageInfo(String id) {
		if (this.client == null) {
			return null;
		}
		try {
			final ImageInfo info = this.client.inspectImage(id);
			return new DockerImageInfo(info);
		} catch (com.spotify.docker.client.exceptions.DockerRequestException e) {
			Activator.logErrorMessage(
					ProcessMessages.getString("Image_Info_Exception"), e); //$NON-NLS-1$
			return null;
		} catch (com.spotify.docker.client.exceptions.ImageNotFoundException e) {
			return null;
		} catch (com.spotify.docker.client.exceptions.DockerException
				| InterruptedException e) {
			Activator.log(new Status(IStatus.ERROR, Activator.PLUGIN_ID,
					ProcessMessages.getFormattedString(
							"Image_Inspect_Exception", id), //$NON-NLS-1$
					e));
			return null;
		}
	}

