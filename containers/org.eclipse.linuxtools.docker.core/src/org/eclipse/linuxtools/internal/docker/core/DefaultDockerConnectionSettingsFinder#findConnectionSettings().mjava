	@Override
	@Deprecated
	public List<IDockerConnectionSettings> findConnectionSettings() {
		final List<IDockerConnectionSettings> availableConnectionSettings = new ArrayList<>();
		final IDockerConnectionSettings defaultsWithUnixSocket = defaultsWithUnixSocket();
		if (defaultsWithUnixSocket != null) {
			availableConnectionSettings.add(defaultsWithUnixSocket);
		}
		final IDockerConnectionSettings defaultsWithSystemEnv = defaultsWithSystemEnv();
		if (defaultsWithSystemEnv != null) {
			availableConnectionSettings.add(defaultsWithSystemEnv);
		}
		final IDockerConnectionSettings defaultsWithShellEnv = defaultsWithShellEnv();
		if (defaultsWithShellEnv != null) {
			availableConnectionSettings.add(defaultsWithShellEnv);
		}
		// now that we have connection settings, let's ping them and retrieve the connection info.
		for (IDockerConnectionSettings connectionSettings : availableConnectionSettings) {
			switch(connectionSettings.getType()) {
			case UNIX_SOCKET_CONNECTION:
				final UnixSocketConnectionSettings unixSocketConnectionSettings = (UnixSocketConnectionSettings) connectionSettings;
				final DockerConnection unixSocketConnection = new DockerConnection.Builder()
						.unixSocketConnection(unixSocketConnectionSettings);
				resolveDockerName(unixSocketConnectionSettings,
						unixSocketConnection);
				break;
			case TCP_CONNECTION:
				final TCPConnectionSettings tcpConnectionSettings = (TCPConnectionSettings) connectionSettings;
				final DockerConnection tcpConnection = new DockerConnection.Builder()
						.tcpConnection(tcpConnectionSettings);
				resolveDockerName(tcpConnectionSettings, tcpConnection);
				break;
			}
		}
		return availableConnectionSettings;
	}

