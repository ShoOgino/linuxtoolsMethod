	/**
	 * Creates a new {@link DockerClient} configured with the given parameters.
	 * 
	 * @param socketPath
	 *            the path to the Unix Socket
	 * @param tcpHost
	 *            the host name/port for if using a TCP connection
	 * @param tcpCertPath
	 *            the path to the certificates directory if using TLS (or
	 *            <code>null</code> if using an unsecured connection)
	 * @return a new instance of {@link DockerClient}
	 * @throws DockerCertificateException
	 *             if the certificates could not be loaded.
	 */
	public DockerClient getClient(final String socketPath, final String tcpHost,
			final String tcpCertPath) throws DockerCertificateException {
		if (socketPath != null) {
			return DefaultDockerClient.builder().uri(socketPath).build();
		} else if (tcpCertPath != null) {
			return DefaultDockerClient.builder().uri(URI.create(tcpHost))
					.dockerCertificates(new DockerCertificates(
							new File(tcpCertPath).toPath()))
					.build();
		} else {
			return DefaultDockerClient.builder().uri(URI.create(tcpHost))
					.build();
		}

	}

