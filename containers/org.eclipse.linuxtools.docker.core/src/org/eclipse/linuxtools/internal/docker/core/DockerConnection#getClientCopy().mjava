	/**
	 * Get a copy of the client to use in parallel threads for long-standing
	 * operations such as logging or waiting until finished. The user of the
	 * copy should close it when the operation is complete.
	 * 
	 * @return copy of client
	 * @throws DockerException
	 * @throws DockerCertificateException
	 * @see DockerConnection#open(boolean)
	 */
	private DockerClient getClientCopy() throws DockerException {
		if (this.socketPath != null) {
			return DefaultDockerClient.builder().uri(socketPath).build();
		} else if (this.tcpHost != null) {
			if (this.tcpCertPath != null) {
				try {
					return DefaultDockerClient
							.builder()
							.uri(URI.create(tcpHost))
							.dockerCertificates(
									new DockerCertificates(
											new File(tcpCertPath).toPath()))
							.build();
				} catch (DockerCertificateException e) {
					throw new DockerException(Messages.Retrieve_Docker_Certificates_Failure, e);
				}
			} else {
				return DefaultDockerClient.builder().uri(URI.create(tcpHost))
						.build();
			}
		}
		throw new DockerException(Messages.Missing_Settings);

	}

