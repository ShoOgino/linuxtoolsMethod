	private IDockerImageHiearchyNode getImageHierarchy(final String imageId) {
		// recursively find all parents and build associated
		// IDockerImageHiearchyNode instances
		final Optional<IDockerImage> optionalParentImage = this.images.stream()
				.filter(image -> image.id().equals(imageId)).findFirst();
		// parent image found: get its own parent image hierarchy
		if (optionalParentImage.isPresent()) {
			//
			final IDockerImage parentImage = optionalParentImage.get();
			return new DockerImageHiearchyNode(parentImage,
					getImageHierarchy(parentImage.parentId()));
		}
		// no parent image found: stop here.
		return null;
	}

