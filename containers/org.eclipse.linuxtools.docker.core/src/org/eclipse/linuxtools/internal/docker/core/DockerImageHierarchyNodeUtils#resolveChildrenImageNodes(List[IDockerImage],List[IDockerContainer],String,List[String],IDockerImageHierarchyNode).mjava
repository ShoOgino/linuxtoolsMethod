	private static void resolveChildrenImageNodes(
			final List<IDockerImage> images,
			final List<IDockerContainer> containers, final String imageId,
			final List<String> imageRepoTags,
			final IDockerImageHierarchyNode parentNode) {
		// recursively find all parents and build associated
		// IDockerImageHierarchyNode instances
		images.stream().filter(image -> image.parentId() != null
				&& image.parentId().equals(imageId))
				// use the flatMap below to duplicate images that have multiple repos
				//.flatMap(image -> DockerImage.duplicateImageByRepo(image))
				.forEach(image -> {
					final DockerImageHierarchyNode childNode = new DockerImageHierarchyImageNode(
							image, parentNode);
					resolveChildrenImageNodes(images, containers, image.id(),
							image.repoTags(),
							childNode);
				});
		containers.stream()
				.filter(container -> container.image() != null
						&& imageRepoTags.contains(container.image()))
				.forEach(container -> new DockerImageHierarchyContainerNode(
						container,
						parentNode));
	}

