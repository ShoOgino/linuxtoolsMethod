	@Test
	public void testLabels() {
		DockerImagesTab imagesTab = openDockerImagesTab();
		imagesTab.runImage(IMAGE_NAME + ":" + IMAGE_TAG);

		ImageRunSelectionPage firstPage = new ImageRunSelectionPage();
		firstPage.setContainerName(CONTAINER_NAME);
		firstPage.setAllocatePseudoTTY();
		firstPage.setKeepSTDINOpen();
		firstPage.setGiveExtendedPrivileges();
		firstPage.next();
		ImageRunResourceVolumesVariablesPage secondPage = new ImageRunResourceVolumesVariablesPage();
		secondPage.addLabel(CONTAINER_LABEL_KEY, CONTAINER_LABEL_VALUE);
		secondPage.finish();
		new WaitWhile(new JobIsRunning());
		if (mockitoIsUsed()) {
			//MockDockerClientFactory.addContainer(this.client, this.createdContainer, this.containerInfo);
			runContainer();
			getConnection().refresh();
			new WaitUntil(new ContainerIsDeployedCondition(CONTAINER_NAME, getConnection()));
		}
		DockerContainersTab containerTab = new DockerContainersTab();
		containerTab.searchContainer(CONTAINER_NAME);
		containerTab.select(CONTAINER_NAME);
		PropertiesView propertiesView = new PropertiesView();
		propertiesView.open();
		getConnection().getContainer(CONTAINER_NAME).select();
		propertiesView.selectTab("Inspect");
		String labelProp = propertiesView.getProperty("Config", "Labels", CONTAINER_LABEL_KEY).getPropertyValue();
		assertTrue("Container does not have label " + CONTAINER_LABEL_KEY + "!",
				labelProp.equals(CONTAINER_LABEL_VALUE));
	}

