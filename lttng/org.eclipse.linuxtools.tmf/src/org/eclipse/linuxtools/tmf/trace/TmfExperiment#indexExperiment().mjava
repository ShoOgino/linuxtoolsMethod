	/**
	 * indexExperiment
	 * 
	 * Creates the experiment index.
	 */
	private void indexExperiment() {

		synchronized(fIndexing) {
			if (fIndexing) {
				// An indexing job is already running but a new request came
				// in (probably due to a change in the trace set). The index
				// being currently built is therefore already invalid.
				// TODO: Cancel and restart the job
				// TODO: Add support for dynamically adding/removing traces
				return;
			}
			fIndexing = true;
		}

		job = new IndexingJob(fExperimentId);
		job.schedule();
		try {
			job.join();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
//		if (fWaitForIndexCompletion) {
//	        ProgressMonitorDialog dialog = new ProgressMonitorDialog(null);
//	        try {
//				// TODO: Handle cancel!
//	            dialog.run(true, true, new IRunnableWithProgress() {
//	                public void run(IProgressMonitor monitor) throws InvocationTargetException, InterruptedException {
//	                    monitor.beginTask("Indexing " + fExperimentId, IProgressMonitor.UNKNOWN);
//	    				job.join();
//	                    monitor.done();
//	                }
//	            });
//	        } catch (InvocationTargetException e) {
//	            e.printStackTrace();
//	        } catch (InterruptedException e) {
//	            e.printStackTrace();
//	        }
//		}
	}

