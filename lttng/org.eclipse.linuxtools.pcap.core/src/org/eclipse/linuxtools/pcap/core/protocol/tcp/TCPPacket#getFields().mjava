    @Override
    public Map<String, String> getFields() {
        ImmutableMap<String, String> map = fFields;
        if (map == null) {
            Builder<String, String> builder = ImmutableMap.<String, String> builder()
                    .put("Source Port", String.valueOf(fSourcePort)) //$NON-NLS-1$
                    .put("Destination Port", String.valueOf(fDestinationPort)) //$NON-NLS-1$
                    .put("Sequence Number", String.valueOf(fSequenceNumber)) //$NON-NLS-1$
                    .put("Acknowledgement Number", String.valueOf(fAcknowledgmentNumber)) //$NON-NLS-1$
                    .put("Length", String.valueOf(fDataOffset * TCPValues.BLOCK_SIZE) + " bytes") //$NON-NLS-1$ //$NON-NLS-2$
                    .put("ECN-Nonce Flag", String.valueOf(fNSFlag)) //$NON-NLS-1$
                    .put("Congestion Window Reduced Flag", String.valueOf(fCWRFlag)) //$NON-NLS-1$
                    .put("ECN-Echo Flag", String.valueOf(fECEFlag)) //$NON-NLS-1$
                    .put("Urgent Flag", String.valueOf(fURGFlag)) //$NON-NLS-1$
                    .put("ACK Flag", String.valueOf(fACKFlag)) //$NON-NLS-1$
                    .put("PSH Flag", String.valueOf(fPSHFlag)) //$NON-NLS-1$
                    .put("RST Flag", String.valueOf(fRSTFlag)) //$NON-NLS-1$
                    .put("SYN Flag", String.valueOf(fSYNFlag)) //$NON-NLS-1$
                    .put("FIN Flag", String.valueOf(fFINFlag)) //$NON-NLS-1$
                    .put("Window Size Value", String.valueOf(fWindowSize)) //$NON-NLS-1$
                    .put("Checksum", String.format("%s%04x", "0x", fChecksum)) //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
                    .put("Urgent Pointer", String.format("%s%04x", "0x", fUrgentPointer)); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
            byte[] options = fOptions;
            if (options == null) {
                builder.put("Options", EMPTY_STRING); //$NON-NLS-1$
            } else {
                builder.put("Options", ConversionHelper.bytesToHex(options, true)); //$NON-NLS-1$

            }
            @SuppressWarnings("null")
            @NonNull ImmutableMap<String, String> newMap = builder.build();
            fFields = newMap;
            return newMap;
        }
        return map;
    }

