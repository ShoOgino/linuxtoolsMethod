    /**
     * Test method for
     * {@link SessionConfigGenerator#generateSessionConfig(Set, IPath)}
     */
    @Test
    public void testGenerateSessionConfig() {
        /* Should fail since it's empty */
        final Set<ISessionInfo> sessions = new HashSet<>();
        assertFalse(SessionConfigGenerator.generateSessionConfig(sessions, SESSION_FILE_PATH).isOK());

        /* Add a valid session and validate */
        sessions.add(fValidSessionInfo);
        assertTrue(SessionConfigGenerator.generateSessionConfig(sessions, SESSION_FILE_PATH).isOK());
        assertTrue(SessionConfigGenerator.sessionValidate(SESSION_FILE_PATH.toFile()).isOK());

        /* Add a valid snapshot session and validate */
        sessions.add(fValidSessionSnapshotInfo);
        assertTrue(SessionConfigGenerator.generateSessionConfig(sessions, SESSION_FILE_PATH).isOK());
        assertTrue(SessionConfigGenerator.sessionValidate(SESSION_FILE_PATH.toFile()).isOK());

        /* Add an invalid session */
        sessions.add(fInvalidSessionInfo);
        assertFalse(SessionConfigGenerator.generateSessionConfig(sessions, SESSION_FILE_PATH).isOK());
    }

