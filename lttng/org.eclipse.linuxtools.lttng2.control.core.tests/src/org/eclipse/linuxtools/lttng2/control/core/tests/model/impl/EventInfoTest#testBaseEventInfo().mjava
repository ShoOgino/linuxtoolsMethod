    /**
     * Run the EventInfo() constructor test.
     */
    @Test
    public void testBaseEventInfo() {
        EventInfo fixture = new EventInfo("event");
        assertNotNull(fixture);

        TraceEventType result = fixture.getEventType();

        assertEquals("event", fixture.getName());
        assertEquals("unknown", result.getInName());
        assertEquals("UNKNOWN", result.name());
        assertEquals("UNKNOWN", result.toString());
        assertEquals(4, result.ordinal());

        TraceEnablement state = fixture.getState();
        assertEquals("disabled", state.getInName());
        assertEquals("DISABLED", state.name());
        assertEquals("DISABLED", state.toString());
        assertEquals(0, state.ordinal());

        LogLevelType logType = fixture.getLogLevelType();
        assertEquals("", logType.getShortName());
        assertEquals("LOGLEVEL_NONE", logType.name());
        assertEquals("LOGLEVEL_NONE", logType.toString());
        assertEquals(0, state.ordinal());


    }

