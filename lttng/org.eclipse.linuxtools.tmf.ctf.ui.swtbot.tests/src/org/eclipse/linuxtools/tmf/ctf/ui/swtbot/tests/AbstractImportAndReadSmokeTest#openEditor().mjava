    /**
     * Opens and get the TmfEventsEditor
     * @return TmfEventsEditor
     */
    protected TmfEventsEditor openEditor() {
        final SWTBotView projectExplorerBot = fBot.viewById(IPageLayout.ID_PROJECT_EXPLORER);
        projectExplorerBot.setFocus();

        final SWTBotTree tree = fBot.tree();
        final SWTBotTreeItem treeItem = tree.getTreeItem(getProjectName());
        treeItem.expand();

        String nodeName = getFullNodeName(treeItem, "Traces");
        fBot.waitUntil(ConditionHelpers.IsTreeChildNodeAvailable(nodeName, treeItem));
        SWTBotTreeItem tracesNode = treeItem.getNode(nodeName);
        tracesNode.expand();


        SWTBotTreeItem traceParentNode = tracesNode;

        if (supportsFolderStructure()) {
            String nodeFolderName = getFullNodeName(tracesNode, TRACE_FOLDER);
            fBot.waitUntil(ConditionHelpers.IsTreeChildNodeAvailable(nodeFolderName, tracesNode));
            SWTBotTreeItem traceFolder = tracesNode.getNode(nodeFolderName);
            traceFolder.select();
            traceFolder.doubleClick();
            traceParentNode = traceFolder;
        }

        fBot.waitUntil(ConditionHelpers.IsTreeChildNodeAvailable(TRACE_NAME, traceParentNode));
        traceParentNode.getNode(TRACE_NAME).select();
        traceParentNode.getNode(TRACE_NAME).doubleClick();
        SWTBotUtil.delay(1000);
        SWTBotUtil.waitForJobs();
        final String expectedTitle = supportsFolderStructure() ? TRACE_FOLDER + IPath.SEPARATOR + TRACE_NAME : TRACE_NAME;

        final IEditorPart iep[] = new IEditorPart[1];
        UIThreadRunnable.syncExec(new VoidResult() {
            @Override
            public void run() {
                IEditorReference[] ieds = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().getEditorReferences();
                assertNotNull(ieds);
                iep[0] = null;
                for (IEditorReference ied : ieds) {
                    if (ied.getTitle().equals(expectedTitle)) {
                        iep[0] = ied.getEditor(true);
                        break;
                    }
                }
            }
        });
        assertNotNull(iep[0]);
        return (TmfEventsEditor) iep[0];
    }

