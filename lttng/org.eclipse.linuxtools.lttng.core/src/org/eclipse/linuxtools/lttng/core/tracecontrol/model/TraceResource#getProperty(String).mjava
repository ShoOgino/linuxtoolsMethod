    /**
     * Gets the property information for a given property name. 
     *  
     * @param property the property to get
     * 
     * @return the value
     */
    public String getProperty(String property) {
        if ((fTraceConfig != null) && (fPropertyInfo.containsKey(property))) {
            if (Ltt_Trace_Property_TracePath.equals(property)) {
                return fTraceConfig.getTracePath();
            }
            else if (Ltt_Trace_Property_TraceNumberOfChannels.equals(property)) {
                return String.valueOf(fTraceConfig.getNumChannel());
            }
            else if (Ltt_Trace_Property_FlightRecorderMode.equals(property)) {
                return String.valueOf(fTraceConfig.getMode() == TraceConfig.FLIGHT_RECORDER_MODE);
            }
            else if (Ltt_Trace_Property_NormalMode.equals(property)) {
                return String.valueOf(fTraceConfig.getMode() == TraceConfig.NORMAL_MODE);
            }
            else if (Ltt_Trace_Property_NetworkTrace.equals(property)) {
                return String.valueOf(fTraceConfig.isNetworkTrace());
            }
            else if (Ltt_Trace_Property_TraceTransport.equals(property)) {
                return String.valueOf(fTraceConfig.getTraceTransport());
            }
        }
        return ""; //$NON-NLS-1$
    }

