    /**
     * Returns the list of all event possible types.
     * @return The list of all event possible types.
     */
    public Vector<String> getTypeList() {
        // Reserve some space for the 103 default event types.
        Vector<String> eventsList = new Vector<String>(103);

        eventsList.add(ADD_TO_PAGE_CACHE);
        eventsList.add(BIO_BACKMERGE);
        eventsList.add(BIO_FRONTMERGE);
        eventsList.add(BIO_QUEUE);
        eventsList.add(BUFFER_WAIT_END);
        eventsList.add(BUFFER_WAIT_START);
        eventsList.add(CALL);
        eventsList.add(CLOSE);
        eventsList.add(CORE_MARKER_FORMAT);
        eventsList.add(CORE_MARKER_ID);
        eventsList.add(DEV_RECEIVE);
        eventsList.add(DEV_XMIT);
        eventsList.add(END_COMMIT);
        eventsList.add(EXEC);
        eventsList.add(FILE_DESCRIPTOR);
        eventsList.add(GETRQ);
        eventsList.add(GETRQ_BIO);
        eventsList.add(IDT_TABLE);
        eventsList.add(INTERRUPT);
        eventsList.add(IOCTL);
        eventsList.add(IRQ_ENTRY);
        eventsList.add(IRQ_EXIT);
        eventsList.add(LIST_MODULE);
        eventsList.add(LLSEEK);
        eventsList.add(LSEEK);
        eventsList.add(NAPI_COMPLETE);
        eventsList.add(NAPI_POLL);
        eventsList.add(NAPI_SCHEDULE);
        eventsList.add(NETWORK_IPV4_INTERFACE);
        eventsList.add(NETWORK_IP_INTERFACE);
        eventsList.add(OPEN);
        eventsList.add(PAGE_FAULT_ENTRY);
        eventsList.add(PAGE_FAULT_EXIT);
        eventsList.add(PAGE_FAULT_GET_USER_ENTRY);
        eventsList.add(PAGE_FAULT_GET_USER_EXIT);
        eventsList.add(PAGE_FREE);
        eventsList.add(PLUG);
        eventsList.add(POLLFD);
        eventsList.add(PREAD64);
        eventsList.add(PRINTF);
        eventsList.add(PRINTK);
        eventsList.add(PROCESS_EXIT);
        eventsList.add(PROCESS_FORK);
        eventsList.add(PROCESS_FREE);
        eventsList.add(PROCESS_STATE);
        eventsList.add(PROCESS_WAIT);
        eventsList.add(READ);
        eventsList.add(REMAP);
        eventsList.add(REMOVE_FROM_PAGE_CACHE);
        eventsList.add(RQ_COMPLETE_FS);
        eventsList.add(RQ_COMPLETE_PC);
        eventsList.add(RQ_INSERT_FS);
        eventsList.add(RQ_INSERT_PC);
        eventsList.add(RQ_ISSUE_FS);
        eventsList.add(RQ_ISSUE_PC);
        eventsList.add(RQ_REQUEUE_PC);
        eventsList.add(SCHED_MIGRATE_TASK);
        eventsList.add(SCHED_SCHEDULE);
        eventsList.add(SCHED_TRY_WAKEUP);
        eventsList.add(SCHED_WAKEUP_NEW_TASK);
        eventsList.add(SELECT);
        eventsList.add(SEM_CREATE);
        eventsList.add(SEND_SIGNAL);
        eventsList.add(SHM_CREATE);
        eventsList.add(SLEEPRQ_BIO);
        eventsList.add(SOCKET_ACCEPT);
        eventsList.add(SOCKET_BIND);
        eventsList.add(SOCKET_CALL);
        eventsList.add(SOCKET_CONNECT);
        eventsList.add(SOCKET_CREATE);
        eventsList.add(SOCKET_GETPEERNAME);
        eventsList.add(SOCKET_GETSOCKNAME);
        eventsList.add(SOCKET_GETSOCKOPT);
        eventsList.add(SOCKET_LISTEN);
        eventsList.add(SOCKET_SETSOCKOPT);
        eventsList.add(SOCKET_SHUTDOWN);
        eventsList.add(SOCKET_SOCKETPAIR);
        eventsList.add(SOFTIRQ_ENTRY);
        eventsList.add(SOFTIRQ_EXIT);
        eventsList.add(SOFTIRQ_RAISE);
        eventsList.add(SOFTIRQ_VEC);
        eventsList.add(START_COMMIT);
        eventsList.add(STATEDUMP_END);
        eventsList.add(SYS_CALL_TABLE);
        eventsList.add(SYSCALL_ENTRY);
        eventsList.add(SYSCALL_EXIT);
        eventsList.add(TASKLET_LOW_ENTRY);
        eventsList.add(TASKLET_LOW_EXIT);
        eventsList.add(TCPV4_RCV);
        eventsList.add(TIMER_ITIMER_EXPIRED);
        eventsList.add(TIMER_ITIMER_SET);
        eventsList.add(TIMER_SET);
        eventsList.add(TIMER_TIMEOUT);
        eventsList.add(TIMER_UPDATE_TIME);
        eventsList.add(UDPV4_RCV);
        eventsList.add(UNPLUG_IO);
        eventsList.add(UNPLUG_TIMER);
        eventsList.add(VM_MAP);
        eventsList.add(VPRINTK);
        eventsList.add(WAIT_ON_PAGE_END);
        eventsList.add(WAIT_ON_PAGE_START);
        eventsList.add(WRITE);
        eventsList.add(WRITEV);

        return eventsList;
    }

