    /**
     * Test the factory part more rigorously to make sure there are no
     * regressions
     */
    @Test
    public void testIntegerDeclarationBruteForce() {
        ByteOrder[] bos = { ByteOrder.LITTLE_ENDIAN, ByteOrder.BIG_ENDIAN };
        Encoding[] encodings = { Encoding.ASCII, Encoding.NONE, Encoding.UTF8 };
        boolean[] signeds = { true, false }; // not a real word
        String[] clocks = { "something", "" };
        int[] bases = { 2, 4, 6, 8, 10, 12, 16 };
        for (int len = 2; len < 65; len++) {
            for (ByteOrder bo : bos) {
                for (boolean signed : signeds) {
                    for (int base : bases) {
                        for (Encoding enc : encodings) {
                            for (String clock : clocks) {
                                assertNotNull(enc);
                                assertNotNull(clock);
                                IntegerDeclaration intDec = IntegerDeclaration.createDeclaration(len, signed, base, bo, enc, clock, 8);
                                String title = Integer.toString(len) + " " + bo + " " + signed + " " + base + " " + enc;
                                assertEquals(title, signed, intDec.isSigned());
                                assertEquals(title, base, intDec.getBase());
                                // at len 8 le and be are the same
                                if (len != 8) {
                                    assertEquals(title, bo, intDec.getByteOrder());
                                }
                                assertEquals(title, len, intDec.getLength());
                                assertEquals(title, len, intDec.getMaximumSize());
                                assertEquals(title, clock, intDec.getClock());
                                assertEquals(title, !signed && len == 8, intDec.isUnsignedByte());
                            }
                        }
                    }
                }
            }
        }
    }

