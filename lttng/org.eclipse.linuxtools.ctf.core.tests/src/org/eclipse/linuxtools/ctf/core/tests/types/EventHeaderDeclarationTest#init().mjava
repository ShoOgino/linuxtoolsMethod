    /**
     * Setup
     */
    @Before
    public void init() {
        declarations.clear();

        /**
         * do not reflow
         *
         * <pre>
         * struct event_header_compact {
         *     enum : uint5_t { compact = 0 ... 30, extended = 31 } id;
         *     variant <id> {
         *         struct {
         *             uint27_clock_monotonic_t timestamp;
         *         } compact;
         *         struct {
         *             uint32_t id;
         *             uint64_clock_monotonic_t timestamp;
         *         } extended;
         *     } v;
         * } align(8);
         * </pre>
         */

        StructDeclaration base = new StructDeclaration(8);
        base.addField("id", new EnumDeclaration(IntegerDeclaration.UINT_5B_DECL));
        VariantDeclaration variantV = new VariantDeclaration();
        StructDeclaration compact = new StructDeclaration(8);
        compact.addField("timestamp", IntegerDeclaration.UINT_27B_DECL);
        variantV.addField("compact", compact);
        StructDeclaration large = new StructDeclaration(8);
        large.addField("id", IntegerDeclaration.UINT_32B_DECL);
        large.addField("timestamp", IntegerDeclaration.UINT_64B_DECL);
        variantV.addField("extended", large);
        base.addField("v", variantV);
        declarations.add(base);

        /**
         * Do not reflow
         *
         * <pre>
         * struct event_header_large {
         *     enum : uint16_t { compact = 0 ... 65534, extended = 65535 } id;
         *     variant <id> {
         *         struct {
         *             uint32_clock_monotonic_t timestamp;
         *         } compact;
         *         struct {
         *             uint32_t id;
         *             uint64_clock_monotonic_t timestamp;
         *         } extended;
         *     } v;
         * } align(8);
         * </pre>
         */

        base = new StructDeclaration(8);
        base.addField("id", new EnumDeclaration(IntegerDeclaration.UINT_16B_DECL));
        variantV = new VariantDeclaration();
        compact = new StructDeclaration(8);
        compact.addField("timestamp", IntegerDeclaration.UINT_32B_DECL);
        variantV.addField("compact", compact);
        large = new StructDeclaration(8);
        large.addField("id", IntegerDeclaration.UINT_32B_DECL);
        large.addField("timestamp", IntegerDeclaration.UINT_64B_DECL);
        variantV.addField("extended", large);
        base.addField("v", variantV);
        declarations.add(base);

        // bad - well, sounds nice though
        base = new StructDeclaration(8);
        base.addField("potato salad", new FloatDeclaration(8, 8, ByteOrder.BIG_ENDIAN, 8));
        base.addField("bbq ribs", new FloatDeclaration(8, 8, ByteOrder.BIG_ENDIAN, 8));
        declarations.add(base);
        // bad
        base = new StructDeclaration(8);
        base.addField("id", new EnumDeclaration(IntegerDeclaration.UINT_16B_DECL));
        base.addField("v", new FloatDeclaration(8, 8, ByteOrder.BIG_ENDIAN, 8));
        declarations.add(base);
        // bad
        base = new StructDeclaration(8);
        base.addField("id", new EnumDeclaration(IntegerDeclaration.UINT_5B_DECL));
        base.addField("v", new FloatDeclaration(8, 8, ByteOrder.BIG_ENDIAN, 8));
        declarations.add(base);
        // bad
        base = new StructDeclaration(8);
        base.addField("id", new EnumDeclaration(IntegerDeclaration.UINT_5B_DECL));
        variantV = new VariantDeclaration();
        compact = new StructDeclaration(8);
        compact.addField("timestamp", IntegerDeclaration.UINT_27B_DECL);
        variantV.addField("compact1", compact);
        large = new StructDeclaration(8);
        large.addField("id", IntegerDeclaration.UINT_32B_DECL);
        large.addField("timestamp", IntegerDeclaration.UINT_64B_DECL);
        variantV.addField("extended", large);
        base.addField("v", variantV);
        declarations.add(base);

        // bad
        base = new StructDeclaration(8);
        base.addField("id", new EnumDeclaration(IntegerDeclaration.UINT_5B_DECL));
        variantV = new VariantDeclaration();
        compact = new StructDeclaration(8);
        compact.addField("timestamp", IntegerDeclaration.UINT_27B_DECL);
        variantV.addField("compact", compact);
        large = new StructDeclaration(8);
        large.addField("id", IntegerDeclaration.UINT_32B_DECL);
        large.addField("timestamp1", IntegerDeclaration.UINT_64B_DECL);
        variantV.addField("extended", large);
        base.addField("v", variantV);
        declarations.add(base);

        // bad
        base = new StructDeclaration(8);
        base.addField("id", new EnumDeclaration(IntegerDeclaration.UINT_5B_DECL));
        variantV = new VariantDeclaration();
        compact = new StructDeclaration(8);
        compact.addField("timestamp", IntegerDeclaration.UINT_27B_DECL);
        variantV.addField("compact", compact);
        large = new StructDeclaration(8);
        large.addField("id", IntegerDeclaration.UINT_32B_DECL);
        large.addField("timestamp", new StringDeclaration());
        variantV.addField("extended", large);
        base.addField("v", variantV);
        declarations.add(base);

        // bad
        base = new StructDeclaration(8);
        base.addField("id", new EnumDeclaration(IntegerDeclaration.UINT_5B_DECL));
        variantV = new VariantDeclaration();
        compact = new StructDeclaration(8);
        compact.addField("timestamp", IntegerDeclaration.UINT_27B_DECL);
        variantV.addField("compact", compact);
        variantV.addField("surprise!", compact);
        large = new StructDeclaration(8);
        large.addField("id", IntegerDeclaration.UINT_32B_DECL);
        large.addField("timestamp", new StringDeclaration());
        variantV.addField("extended", large);
        base.addField("v", variantV);
        declarations.add(base);

        // bad
        base = new StructDeclaration(8);
        base.addField("id", new EnumDeclaration(IntegerDeclaration.UINT_16B_DECL));
        variantV = new VariantDeclaration();
        compact = new StructDeclaration(8);
        compact.addField("timestamp", IntegerDeclaration.UINT_27B_DECL);
        variantV.addField("compact", compact);
        variantV.addField("surprise!", compact);
        large = new StructDeclaration(8);
        large.addField("id", IntegerDeclaration.UINT_32B_DECL);
        large.addField("timestamp", new StringDeclaration());
        variantV.addField("extended", large);
        base.addField("v", variantV);
        declarations.add(base);
        // bad
        base = new StructDeclaration(8);
        base.addField("id", new FloatDeclaration(8, 8, ByteOrder.BIG_ENDIAN, 8));
        base.addField("v", new FloatDeclaration(8, 8, ByteOrder.BIG_ENDIAN, 8));
        declarations.add(base);
        // bad
        base = new StructDeclaration(8);
        base.addField("id", IntegerDeclaration.INT_32B_DECL);
        base.addField("timestamp", IntegerDeclaration.INT_32B_DECL);
        declarations.add(base);
        // bad
        base = new StructDeclaration(8);
        base.addField("id", new EnumDeclaration(IntegerDeclaration.INT_8_DECL));
        base.addField("timestamp", IntegerDeclaration.INT_32B_DECL);
        declarations.add(base);
    }

