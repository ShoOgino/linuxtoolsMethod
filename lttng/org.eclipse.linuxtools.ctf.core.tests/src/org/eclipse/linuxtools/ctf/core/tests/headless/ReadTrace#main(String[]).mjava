    /**
     * @param args
     * @throws FileNotFoundException
     */
    public static void main(String[] args) throws FileNotFoundException {
        final String TRACE_PATH = "traces/kernel";

        // Change this to enable text output
        final boolean USE_TEXT = false;

        final int LOOP_COUNT = 10;

        // Work variables
        long nbEvent = 0L;
        Vector<Double> benchs = new Vector<>();
        long start, stop;
        for (int loops = 0; loops < LOOP_COUNT; loops++) {
            try (CTFTrace trace = new CTFTrace(TRACE_PATH);) {
                nbEvent = 0L;

                start = System.nanoTime();
                if (USE_TEXT) {
                    System.out.println("Event, " + " Time, " + " type, " + " CPU ");
                }
                try (CTFTraceReader traceReader = new CTFTraceReader(trace);) {
                    start = System.nanoTime();

                    while (traceReader.hasMoreEvents()) {
                        EventDefinition ed = traceReader.getCurrentEventDef();
                        nbEvent++;
                        if (USE_TEXT) {
                            String output = formatDate(ed.getTimestamp()
                                    + trace.getOffset());
                            System.out.println(nbEvent + ", "
                                    + output + ", " + ed.getDeclaration().getName()
                                    + ", " + ed.getCPU() + ed.getFields().toString());
                        }

                        traceReader.advance();
                    }

                    stop = System.nanoTime();

                    System.out.print('.');
                    double time = (stop - start) / (double) nbEvent;
                    benchs.add(time);
                } catch (CTFReaderException e) {
                    System.out.println("error");
                }
            } catch (CTFReaderException e) {
                throw new FileNotFoundException(TRACE_PATH);
            }
        }
        System.out.println("");
        double avg = 0;
        for (Double val : benchs) {
            avg += val;
        }
        avg /= benchs.size();
        System.out.println("Time to read " + nbEvent + " events = " + avg
                + " ns/event");
        for (Double val : benchs) {
            System.out.print(val);
            System.out.print(", ");
        }
    }

