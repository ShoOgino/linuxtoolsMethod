	/**
	 * Save a checkpoint if it is needed at that point
	 * <p>
	 * The function will use "eventCount" internally to determine if a save was
	 * needed
	 * 
	 * @param eventCounter
	 *            The event "count" or event "id" so far
	 * @param eventTime
	 *            The timestamp of this event
	 * 
	 * @return boolean True if a checkpoint was saved, false otherwise
	 */
	private boolean saveCheckPointIfNeeded(Long eventCounter,
			TmfTimestamp eventTime) {
		boolean saveHappened = false;
		// Crate new location to store checkpoint reference
		Long location = new Long(eventCounter.longValue());
		// Save a checkpoint every LTTNG_STATE_SAVE_INTERVAL event
		if ((location % LTTNG_STATE_SAVE_INTERVAL) == 0) {
			// Save the checkpoint
			stateCheckpointsList.put(location, stateIn.traceStateModel.clone());
			// Save correlation between timestamp and checkpoint index

			timestampCheckpointsList.add(new TmfTraceCheckpoint(eventTime,
					location));

			saveHappened = true;
		}

		return saveHappened;
	}

