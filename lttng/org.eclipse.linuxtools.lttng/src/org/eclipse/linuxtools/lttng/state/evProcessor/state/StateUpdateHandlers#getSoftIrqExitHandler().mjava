	/**
	 * 
	 * @return
	 */
	final ILttngEventProcessor getSoftIrqExitHandler() {
		AbsStateUpdate handler = new AbsStateUpdate() {

			// @Override
			public boolean process(LttngEvent trcEvent, LttngTraceState traceSt) {

				Long cpu = trcEvent.getCpuId();
				LTTngCPUState cpust = traceSt.getCpu_states().get(cpu);
				Long softirq = cpust.popFromSoftIrqStack();

				// Update process status
				pop_state(cpu, ExecutionMode.LTTV_STATE_SOFT_IRQ, traceSt,
						trcEvent.getTimestamp());

				/* update softirq status */
				if (softirq != -1) {
					LttngSoftIRQState softIrqstate = traceSt
							.getSoft_irq_states().get(softirq);
					if (softIrqstate != null) {
						softIrqstate.decrementRunning();
					}
				}

				/* update cpu status */
				cpu_pop_mode(cpust);

				return false;
			}
		};
		return handler;
	}

