	/**
	 * Find the process matching the given pid and cpu
	 * 
	 * If cpu is 0, the cpu value is not matched and the selection is based on
	 * pid value only
	 * 
	 * @param traceState
	 * @param cpu
	 * @param pid
	 * @return
	 */
	protected LttngProcessState lttv_state_find_process(
			LttngTraceState traceState, Long cpu, Long pid) {
		// Define the return value
		LttngProcessState returnedProcess = null;

		// Obtain the list of available processes
		List<LttngProcessState> processList = traceState.getProcesses();

		// FIXME: This needs be more efficient e.g. introduce a class with a
		// overriden hash and equals to consider the key values pid, cpu and
		// traceid and iterate over a collection of this new type.
		int pos = 0;
		while ((pos < processList.size()) && (returnedProcess == null)) {
			if (processList.get(pos).getPid().equals(pid)) {
				if ((processList.get(pos).getCpu().equals(cpu))
						|| (cpu.longValue() == 0L)) {
					returnedProcess = processList.get(pos);
				}
			}

			pos++;
		}

		return returnedProcess;
	}

