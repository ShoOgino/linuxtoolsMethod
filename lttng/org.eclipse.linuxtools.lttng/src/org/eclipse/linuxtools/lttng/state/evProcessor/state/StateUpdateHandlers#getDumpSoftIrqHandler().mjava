	/**
	 * <p>
	 * Handles: LTT_EVENT_SOFTIRQ_VEC
	 * </p>
	 * <p>
	 * Fields: LTT_FIELD_ID, LTT_FIELD_ADDRESS, LTT_FIELD_SYMBOL
	 * </p>
	 * 
	 * @return
	 */
	final IEventProcessing getDumpSoftIrqHandler() {
		AbsStateUpdate handler = new AbsStateUpdate() {

			private Events eventType = Events.LTT_EVENT_SOFTIRQ_VEC;

			// @Override
			public boolean process(LttngEvent trcEvent, LttngTraceState traceSt) {

				// Get id
				Long id = getAFieldLong(trcEvent, traceSt, Fields.LTT_FIELD_ID);

				// Address not needed
				// Long address = ltt_event_get_long_unsigned(e,
				// lttv_trace_get_hook_field(th,
				// 1));

				// Get symbol
				String symbol = getAFieldString(trcEvent, traceSt,
						Fields.LTT_FIELD_SYMBOL);

				// Register the soft irq name
				traceSt.getSoft_irq_names().put(id, symbol);
				return false;

			}

			// @Override
			public Events getEventHandleType() {
				return eventType;
			}
		};
		return handler;
	}

