	/**
	 * @param traceUniqueId
	 * @param experiment
	 * @return
	 */
	public static LTTngTreeNode getManager(ITmfTrace rtrace,
			LTTngTreeNode experiment) {

		// Validate
		if (rtrace == null) {
			return null;
		}

		String traceUniqueId = rtrace.getName();
		if (traceUniqueId == null) {
			return null;
		}


		LTTngTreeNode managerNode = null;
		managerNode = experiment.getChildByName(traceUniqueId);

		if (managerNode != null && managerNode instanceof IStateTraceManager) {
			return managerNode;
		}

//		LttngTraceState traceModel = 
//		StateModelFactory.getStateEntryInstance();
		StateTraceManager manager = null;

		// catch potential construction problems
		try {
			manager = new StateTraceManager(experiment.getNextUniqueId(), experiment, traceUniqueId, rtrace,
					LttngCoreProviderFactory.getEventProvider());

			// Allow the possibility to configure the trace state check point
			// interval at creation time
			if (ftraceCheckPointInterval != null) {
				manager.setCheckPointInterval(ftraceCheckPointInterval);
			}

		} catch (LttngStateException e) {
			e.printStackTrace();
		}

		experiment.addChild(manager);
		return manager;
	}

