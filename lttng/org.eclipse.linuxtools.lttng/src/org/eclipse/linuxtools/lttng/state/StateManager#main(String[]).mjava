	// *** MAIN : For testing only ***
	public static void main(String[] args) {

		// Timestamp for the "197500th" events
		long timefor197500 = 953098902827L;

		// A new StateManager
		StateManager stateManagerTest = StateManagerFactory.getManager("test");

		LTTngTrace[] testStream = new LTTngTrace[1];
		try {
			// The stream is needed by the eventLog, which is needed by the
			// StateManager
			// testStream[0] = new LttngEventStream("/home/william/trace1",
			// true);
			testStream[0] = new LTTngTrace(
					"/home/william/runtime-EclipseApplication/TEST_JOIE/Traces/trace3",
					true);

			TmfExperiment newExpt = new TmfExperiment("trace1", testStream);

			// This will create all the checkpoint
			stateManagerTest.setTraceSelection(newExpt, false);
			System.out.println("JOIE JOIE FIN DE LA CREATION DES CHECKPOINTS");

			// *** Restore some checkpoint to test

			// Test the restoration from position
			// stateManagerTest.restoreCheckPointByPosition(197500);

			if (testStream[0].getCurrentEvent().getTimestamp().getValue() == timefor197500) {
				System.out.println("Successfully restored by Position!");
			} else {
				System.out.println("FAILED : "
						+ testStream[0].getCurrentEvent().getTimestamp()
								.getValue() + " != " + timefor197500);
			}

			// Test the restoration from Timestamp
			TmfTimestamp newTimestamp = new TmfTimestamp(timefor197500,
					(byte) -9);
			stateManagerTest.restoreCheckPointByTimestamp(newTimestamp);
			// test the timestamp
			if (testStream[0].getCurrentEvent().getTimestamp().getValue() == timefor197500) {
				System.out.println("Successfully restored by Timestamp!");
			} else {
				System.out.println("FAILED : "
						+ testStream[0].getCurrentEvent().getTimestamp()
								.getValue() + " != " + timefor197500);
			}

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

