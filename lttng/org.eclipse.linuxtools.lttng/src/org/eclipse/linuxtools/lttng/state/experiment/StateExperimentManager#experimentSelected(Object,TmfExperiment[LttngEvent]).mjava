	/*
	 * (non-Javadoc)
	 * 
	 * @see org.eclipse.linuxtools.lttng.signal.ILttExperimentSelectedListener#
	 * experimentSelected(java.lang.Object,
	 * org.eclipse.linuxtools.tmf.experiment.TmfExperiment)
	 */
	public void experimentSelected(Object source,
			TmfExperiment<LttngEvent> experiment) {
		// validate
		if (experiment == null) { 
			TraceDebug.debug("Received expriment is null");
			return;
		}

		// If previous request is ongoing, cancel it before requesting a new
		// one.
		if (fStateCheckPointRequest != null && !fStateCheckPointRequest.isCompleted()) {
			fStateCheckPointRequest.cancel();
		}

		// trigger data request to build the state system check points
		fStateCheckPointRequest = buildCheckPoints(experiment);

//		LTTngTreeNode experimentNode = getChildByName(experiment.getName());
//		if (experimentNode != null) {
//			// get the trace manager nodes
//			LTTngTreeNode[] traceNodes = experimentNode.getChildren();
//			for (LTTngTreeNode traceStateManagerNode : traceNodes) {
//				// The trace node needs to perform its first data request
//				// for this experiment with the main goal of building its
//				// checkpoints
//				if (traceStateManagerNode instanceof ILttExperimentSelectedListener) {
//					// no need to provide the trace to the trace manager
//					((ILttExperimentSelectedListener) traceStateManagerNode).experimentUpdated(
//							new TmfExperimentUpdatedSignal(source, experiment, null), fwaitForCompletion);
//				}
//			}
//		}
	}

