	/* 
     *  MAIN : For testing only!
     */
     public static void main(String[] args) {
         
         // !!! TESTING CLONE HERE !!!
         
         // *** New object with some args set to "123"
         LttngProcessState joie = new LttngProcessState(new TmfTimestamp(123L, (byte) -9));
         
         // Stack not empty by default??
         System.out.println("Emptying stack... Trashing empty instance of : " + joie.popFromExecutionStack() );
         
         joie.setCpu(123L);
         joie.setName("123");
         
         LttngExecutionState testEx1 = new LttngExecutionState();
         testEx1.setCum_cpu_time(123L);
         testEx1.setChange_Time(new TmfTimestamp(123L, (byte) -9));
         testEx1.setEntry_Time(new TmfTimestamp(123L, (byte) -9));
         
         // Print testEx1 reference
         System.out.println("testEx1 reference : " + testEx1);
         
         joie.pushToExecutionStack(testEx1);
         joie.pushToUserStack(123L);
         
         
         
         // *** New object cloned from the first one
         LttngProcessState joie2 = (LttngProcessState)joie.clone();
         
         
         // *** Modification of the FIRST object : Everything to "456"
         joie.setCpu(456L);
         joie.setName("456");
         testEx1.setCum_cpu_time(456L);
         testEx1.setChange_Time(new TmfTimestamp(456L, (byte) -9));
         testEx1.setEntry_Time(new TmfTimestamp(456L, (byte) -9));
         
         // Push new object on stack of the FIRST object
         LttngExecutionState testEx2 = new LttngExecutionState();
         testEx2.setCum_cpu_time(456L);
         joie.pushToExecutionStack(testEx2);
         joie.pushToUserStack(456L);
         
         
         // *** TEST : Everything should be "123L" stil
         System.out.println("123 == " + joie2.getCpu() );
         System.out.println("123 == " + joie2.getName() );
         
         LttngExecutionState newtestEx1 = joie2.popFromExecutionStack();
         // Print newtestEx1 reference
         System.out.println("testEx1 reference : " + newtestEx1);
         
         System.out.println("123 == " + newtestEx1.getCum_cpu_time() );
         System.out.println("123 == " + joie2.popFromUserStack() );
         
         // *** LAST TEST : The joie2 stack should be empty, only joie1 stack contains more than 1 object  
         try {
             System.out.println("123 == " + joie2.popFromExecutionStack().getCum_cpu_time() );
         }
         catch ( Exception e) {
             System.out.println("All fine");
         }
     }

