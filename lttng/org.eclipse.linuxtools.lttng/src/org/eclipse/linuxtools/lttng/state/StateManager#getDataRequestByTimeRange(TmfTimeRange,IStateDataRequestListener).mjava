	/**
	 * Get a Tmf data request for the current eventlog
	 * <p>
	 * 
	 * @param TmfTimeRange
	 *            The time range we want events from.
	 * 
	 * @return TmfDataRequest<TmfEvent> The request made
	 */
	StateDataRequest getDataRequestByTimeRange(TmfTimeRange timeWindow,
			IStateDataRequestListener listener) {

		final TmfEvent[] evt = new TmfEvent[1];

		// ***TODO***
		// The override of handlePartialResult is similar to the one in
		// getDataRequestByPosition()
		// ***

		// Create the new request and override the handlePartialResult function
		StateDataRequest request = new StateDataRequest(timeWindow,
				DEFAULT_OFFSET, TmfDataRequest.ALL_DATA, DEFAULT_CHUNK,
				listener, this) {
			@Override
			public void handleData() {
				TmfEvent[] result = getData();

				evt[0] = (result.length > 0) ? result[0] : null;
				// Dispatch information for Event processing
				stateIn.processEvent(evt[0]);

				// increment internal and external number of events
				setNumOfEvents(getNumOfEvents() + 1);
				eventCount++;
			}

			@Override
			public void handleCompleted() {
				if (isCancelled() || isFailed()) {
					// No notification to end request handlers
				} else {
					// notify the associated end request handlers
					requestCompleted();
				}

				// notify listeners
				notifyCompletion();
			}
		};

		return request;
	}

