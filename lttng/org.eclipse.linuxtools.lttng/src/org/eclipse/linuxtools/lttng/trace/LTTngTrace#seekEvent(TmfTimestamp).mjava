    /**
     * Position the trace to the event at the given time.
     * <p>
     * NOTE : Seeking by time is very fast compare to seeking by position but is still slower than "ReadNext", avoid
     * using it for small interval.
     * 
     * @param timestamp
     *            Time of the event in the trace. If no event available at this exact time, we will position ourself to
     *            the next one.
     * 
     * @return The TmfContext that point to this event
     * 
     * @see org.eclipse.linuxtools.lttng.event.LttngLocation
     * @see org.eclipse.linuxtools.tmf.trace.TmfContext
     */
    @Override
    public synchronized TmfContext seekEvent(TmfTimestamp timestamp) {

        if (PrintDebug) {
            System.out.println("seekEvent(timestamp) timestamp -> " + timestamp); //$NON-NLS-1$
        }

        if (currentJniTrace == null) {
            System.out.println("aie");
        }
        
        // Call JNI to seek
        currentJniTrace.seekToTime(new JniTime(timestamp.getValue()));

        // Save the time at which we seeked
        previousLocation.setOperationTime(timestamp.getValue());
        // Set the operation marker as seek, to be able to detect we did "seek"
        // this event
        previousLocation.setLastOperationSeek();

        LttngLocation curLocation = new LttngLocation(previousLocation);

        return new TmfContext(curLocation);
    }

