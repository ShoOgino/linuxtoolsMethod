    /** 
     * Return the next event in the trace.<p>
     * 
     * @param context   The actual context of the trace
     * 
     * @return The next event, or null if none available
     * 
     * @see org.eclipse.linuxtools.lttng.event.LttngEvent
     */ 
    @Override
	public LttngEvent parseEvent(TmfTraceContext context) {
		JniEvent jniEvent;
		LttngTimestamp timestamp = null;
		LttngEvent returnedEvent = null;
		
    	synchronized (currentJniTrace) {
    		
    	    // Seek to the context's location
    		seekLocation(context.getLocation());
    		
    		// Read an event from the JNI and convert it into a LttngEvent
    		jniEvent = currentJniTrace.readNextEvent();
    		
    		//currentLttngEvent = (jniEvent != null) ? convertJniEventToTmf(jniEvent, true) : null;
    		if ( jniEvent != null ) {
    		    currentLttngEvent = convertJniEventToTmf(jniEvent);
    		    returnedEvent = currentLttngEvent;
    		}
    		
    		// Save timestamp
    		timestamp = (LttngTimestamp) getCurrentLocation();
    	}
   		context.setLocation(timestamp);
//   		context.setTimestamp(timestamp);
//   		context.incrRank();
   		
   		return returnedEvent;
    }

