    /* *** FIXME ***
     * Evil "do at least something" parse function
     * THIS IS JUST FOR COMPATIBILITY! DO NOT USE!
     * Content/Format/Fields interelation need to be revisited ASAP
     */ 
    public LttngEventField[] parse(String uselessContent) {
        // *** Begining of the evil "parse String" function
        // 
        // - 1st : Find the number of ":" in the String. This will be the number of fields in the String. 
        //      Highly unreliable, as we depend on String content that we don't control!
        int nbFields = 0;
        for ( int pos = 0; pos < uselessContent.length(); pos++ ) {
            if ( uselessContent.substring(pos, pos+1).equals(":") ) {
                nbFields++;
            }
        }
        
        // - 2nd : Create the fields array
        LttngEventField[] tmpFields = new LttngEventField[nbFields];
        
        // - 3rd : Fill the array
        int fieldPosition = 0;
        
        int lastFieldPos = 0;
        int lastDoubleDottedPos = 0;
        int lastSpacePos = 0;
        
        for ( int pos = 0; pos < uselessContent.length(); pos++ ) {
            if ( uselessContent.substring(pos, pos+1).equals(":") ) {
                lastDoubleDottedPos = pos;
            }
            else if ( uselessContent.substring(pos, pos+1).equals(" ") ) {
                lastSpacePos = pos;
                
                // ANOTHER highly unreliable assumption : 
                //  Usually, most fields are in the form : "NAME : DATA"
                //  We need to skip the space following the double dots
                if ( pos > lastDoubleDottedPos+1 ) {
                    tmpFields[fieldPosition] = new LttngEventField( uselessContent.substring(lastFieldPos, lastDoubleDottedPos), uselessContent.substring(lastDoubleDottedPos, lastSpacePos)  );
                    
                    lastFieldPos = pos;
                }
            }
        }
        
        return tmpFields;
    }

