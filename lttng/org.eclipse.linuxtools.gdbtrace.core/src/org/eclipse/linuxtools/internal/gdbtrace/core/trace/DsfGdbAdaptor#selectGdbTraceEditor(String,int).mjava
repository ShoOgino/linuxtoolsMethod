    private static void selectGdbTraceEditor(final String sessionId, final int recordId) {
        Display.getDefault().asyncExec(new Runnable() {
            @Override
            public void run() {
                for (IWorkbenchWindow wbWindow : PlatformUI.getWorkbench().getWorkbenchWindows()) {
                    for (IWorkbenchPage wbPage : wbWindow.getPages()) {
                        for (IEditorReference editorReference : wbPage.getEditorReferences()) {
                            IEditorPart editor = editorReference.getEditor(false);
                            if (editor instanceof ITmfTraceEditor) {
                                ITmfTrace trace = ((ITmfTraceEditor) editor).getTrace();
                                if (trace instanceof GdbTrace) {
                                    if (((GdbTrace) trace).getDsfSessionId().equals(sessionId)) {
                                        wbPage.bringToTop(editor);
                                        if (recordId != -1) {
                                            gotoRank(editor, recordId);
                                        }
                                        return;
                                    }
                                } else if (trace instanceof TmfExperiment) {
                                    TmfExperiment experiment = (TmfExperiment) trace;
                                    int nbTraces = experiment.getTraces().length;
                                    for (int i = 0; i < nbTraces; i++) {
                                        GdbTrace gdbTrace = (GdbTrace) experiment.getTraces()[i];
                                        if (gdbTrace.getDsfSessionId().equals(sessionId)) {
                                            wbPage.bringToTop(editor);
                                            if (recordId != -1) {
                                                int rank = recordId * nbTraces + i;
                                                gotoRank(editor, rank);
                                            }
                                            return;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        });
    }

