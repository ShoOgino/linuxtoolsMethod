    /**
     * Initialize the Packet and the EventField.
     *
     * @throws BadPcapFileException
     *             Thrown when the pcap file is erroneous.
     * @throws IOException
     *             Thrown when an IO error occurs.
     * @throws TmfTraceException
     *             Thrown when the trace is not valid.
     */
    @BeforeClass
    public static void setUp() throws IOException, BadPcapFileException, TmfTraceException {

        PcapTestTrace trace = PcapTestTrace.MOSTLY_TCP;
        assumeTrue(trace.exists());
        try (PcapFile pcap = new PcapFile(trace.getPath());
                PcapTrace pcapTrace = new PcapTrace();) {
            pcapTrace.initTrace(null, trace.getPath().toString(), PcapEvent.class);
            fEvent = pcapTrace.parseEvent(new TmfContext(new TmfLongLocation(3), 3));
        }

        // Initialize protocol list.
        List<TmfPcapProtocol> list = new ArrayList<>();
        list.add(TmfPcapProtocol.PCAP);
        list.add(TmfPcapProtocol.ETHERNET_II);
        list.add(TmfPcapProtocol.IPV4);
        list.add(TmfPcapProtocol.TCP);
        list.add(TmfPcapProtocol.UNKNOWN);
        fProtocolList = ImmutableList.copyOf(list);
    }

