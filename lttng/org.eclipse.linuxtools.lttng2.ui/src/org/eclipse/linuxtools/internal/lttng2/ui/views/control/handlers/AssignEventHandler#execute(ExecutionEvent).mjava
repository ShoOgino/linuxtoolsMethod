    /*
     * (non-Javadoc)
     * @see org.eclipse.core.commands.AbstractHandler#execute(org.eclipse.core.commands.ExecutionEvent)
     */
    @Override
    public Object execute(ExecutionEvent event) throws ExecutionException {

        fLock.lock();
        try {
            // Make a copy for thread safety
            final Parameter param = new Parameter(fParam);

            // Open dialog box to retrieve the session and channel where the events should be enabled in.
            final IGetEventInfoDialog dialog = TraceControlDialogFactory.getInstance().getGetEventInfoDialog();
            dialog.setIsKernel(param.isKernel());
            dialog.setSessions(param.getSessions());

            if (dialog.open() != Window.OK) {
                return null;
            }

            Job job = new Job(Messages.TraceControl_EnableEventsJob) {
                @Override
                protected IStatus run(IProgressMonitor monitor) {

                    Exception error = null;

                    try {
                        List<String> eventNames = new ArrayList<String>();
                        List<BaseEventComponent> events = param.getEvents();
                        // Create list of event names
                        for (Iterator<BaseEventComponent> iterator = events.iterator(); iterator.hasNext();) {
                            BaseEventComponent baseEvent = iterator.next();
                            eventNames.add(baseEvent.getName());
                        }

                        TraceChannelComponent channel = dialog.getChannel();
                        if (channel == null) {
                            // enable events on default channel (which will be created by lttng-tools)
                            dialog.getSession().enableEvents(eventNames, param.isKernel(), monitor);
                        } else {
                            channel.enableEvents(eventNames, monitor);
                        }

                    } catch (ExecutionException e) {
                        error = e;
                    }

                    // refresh in all cases
                    refresh(new CommandParameter(dialog.getSession()));

                    if (error != null) {
                        return new Status(IStatus.ERROR, Activator.PLUGIN_ID, Messages.TraceControl_EnableEventsFailure, error);
                    }
                    return Status.OK_STATUS;
                }
            };
            job.setUser(true);
            job.schedule();
        } finally {
            fLock.unlock();
        }

        return null;
    }

