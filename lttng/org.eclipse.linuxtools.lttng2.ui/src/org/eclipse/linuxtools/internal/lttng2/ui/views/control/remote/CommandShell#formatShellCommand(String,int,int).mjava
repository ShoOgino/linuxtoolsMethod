    /**
     * Format the command to be sent into the shell command with start and end marker strings.
     * The start marker is need to know when the actual command output starts. The end marker 
     * string is needed so we can tell that end of output has been reached.
     * 
     * @param cmd The actual command 
     * @param startAlias The command alias for start marker
     * @param endAlias The command alias for end marker
     * @return formatted command string
     */
    private String formatShellCommand(String cmd, int startAlias, int endAlias) {
        if (cmd == null || cmd.equals("")) { //$NON-NLS-1$
            return cmd;
        }
        StringBuffer formattedCommand = new StringBuffer();
        // Make multi-line command. 
        // Wrap actual command with start marker and end marker to wrap actual command.
        formattedCommand.append(getEchoCmd(startAlias));
        formattedCommand.append(CMD_DELIMITER);
        formattedCommand.append(cmd);
        formattedCommand.append(CMD_DELIMITER);
        formattedCommand.append(getEchoCmd(endAlias));
        formattedCommand.append(CMD_DELIMITER);
        return formattedCommand.toString();
    }

