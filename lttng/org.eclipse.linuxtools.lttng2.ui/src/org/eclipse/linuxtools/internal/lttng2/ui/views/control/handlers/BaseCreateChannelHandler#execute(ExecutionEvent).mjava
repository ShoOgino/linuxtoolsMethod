    /*
     * (non-Javadoc)
     * @see org.eclipse.core.commands.AbstractHandler#execute(org.eclipse.core.commands.ExecutionEvent)
     */
    @Override
    public Object execute(ExecutionEvent event) throws ExecutionException {
        fLock.lock();
        try {
            final CommandParameter param = fParam.clone();

            final ICreateChannelDialog dialog =  TraceControlDialogFactory.getInstance().getCreateChannelDialog();
            dialog.setDomainComponent(getDomain(param));

            if (dialog.open() != Window.OK) {
                return null;
            }

            Job job = new Job(Messages.TraceControl_ChangeChannelStateJob) {
                @Override
                protected IStatus run(IProgressMonitor monitor) {
                    StringBuffer errorString = new StringBuffer();

                    List<String> channelNames = new ArrayList<String>();                    
                    channelNames.add(dialog.getChannelInfo().getName());

                    try {
                        enableChannel(param, channelNames, dialog.getChannelInfo(), dialog.isKernel(), monitor);
                    } catch (ExecutionException e) {
                        errorString.append(e.toString());
                        errorString.append("\n"); //$NON-NLS-1$
                    }

                    // get session configuration in all cases
                    try {
                        param.getSession().getConfigurationFromNode(monitor);
                    } catch (ExecutionException e) {
                        errorString.append(Messages.TraceControl_ListSessionFailure);
                        errorString.append(": "); //$NON-NLS-1$
                        errorString.append(e.toString());
                    } 

                    if (errorString.length() > 0) {
                        return new Status(Status.ERROR, Activator.PLUGIN_ID, errorString.toString());
                    }
                    return Status.OK_STATUS;
                }
            };
            job.setUser(true);
            job.schedule();
        } finally {
            fLock.unlock();
        }
        return null;
    }

