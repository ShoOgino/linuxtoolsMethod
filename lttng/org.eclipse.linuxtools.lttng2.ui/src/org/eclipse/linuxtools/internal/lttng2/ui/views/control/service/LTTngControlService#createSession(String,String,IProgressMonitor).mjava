    /*
     * (non-Javadoc)
     * @see org.eclipse.linuxtools.internal.lttng2.ui.views.control.service.ILttngControlService#createSession(java.lang.String, java.lang.String, org.eclipse.core.runtime.IProgressMonitor)
     */
    @Override
    public ISessionInfo createSession(String sessionName, String sessionPath, IProgressMonitor monitor) throws ExecutionException {

        String newName = formatParameter(sessionName);
        String newPath = formatParameter(sessionPath);

        StringBuffer command = new StringBuffer(); 
        command.append(COMMAND_CREATE_SESSION);
        command.append(newName);

        if (newPath != null && !"".equals(newPath)) { //$NON-NLS-1$
            command.append(OPTION_OUTPUT_PATH);
            command.append(newPath);
        }

        ICommandResult result = fCommandShell.executeCommand(command.toString(), monitor);
        
        if (isError(result)) {
            throw new ExecutionException(Messages.TraceControl_CommandError + " " + command + "\n" + formatOutput(result.getOutput())); //$NON-NLS-1$ //$NON-NLS-2$
        }
        //Session myssession2 created.
        //Traces will be written in /home/user/lttng-traces/myssession2-20120209-095418
        String[] output = result.getOutput();
        
        // Get and verify session name
        Matcher matcher = CREATE_SESSION_NAME_PATTERN.matcher(output[0]);
        String name = null;

        if (matcher.matches()) {
            name = String.valueOf(matcher.group(1).trim());
        } else {
            // Output format not expected
            throw new ExecutionException(Messages.TraceControl_CommandError + " " + command + "\n" + //$NON-NLS-1$ //$NON-NLS-2$ 
                    Messages.TraceControl_UnexpectedCommnadOutputFormat + ":\n" + //$NON-NLS-1$ 
                    formatOutput(result.getOutput())); 
        }

        if ((name == null) || (!name.equals(sessionName))) {
            // Unexpected name returned
            throw new ExecutionException(Messages.TraceControl_CommandError + " " + command + "\n" + //$NON-NLS-1$ //$NON-NLS-2$ 
                    Messages.TraceControl_UnexpectedNameError + ": " + name); //$NON-NLS-1$ 
        }
        
        // Get and verify session path
        matcher = CREATE_SESSION_PATH_PATTERN.matcher(output[1]);
        String path = null;
        
        if (matcher.matches()) {
            path = String.valueOf(matcher.group(1).trim());
        } else {
            // Output format not expected
            throw new ExecutionException(Messages.TraceControl_CommandError + " " + command + "\n" + //$NON-NLS-1$ //$NON-NLS-2$ 
                    Messages.TraceControl_UnexpectedCommnadOutputFormat + ":\n" + //$NON-NLS-1$ 
                    formatOutput(result.getOutput())); 
        }

        if ((path == null) || ((sessionPath != null) && (!path.contains(sessionPath)))) {
            // Unexpected path
            throw new ExecutionException(Messages.TraceControl_CommandError + " " + command + "\n" + //$NON-NLS-1$ //$NON-NLS-2$ 
                    Messages.TraceControl_UnexpectedPathError + ": " + name); //$NON-NLS-1$
        }
        
        SessionInfo sessionInfo = new SessionInfo(name);
        sessionInfo.setSessionPath(path);

        return sessionInfo;
    }

