    @Override
    protected void okPressed() {
        if (!fIsError) {

            // Validate input data
            fTraces.clear();

            fProjectIndex = fCombo.getSelectionIndex();

            if (fProjectIndex < 0) {
                MessageDialog.openError(getShell(),
                        Messages.TraceControl_ImportDialogTitle,
                        Messages.TraceControl_ImportDialogNoProjectSelectedError);
                return;
            }

            IProject project = fProjects.get(fProjectIndex);
            IFolder traceFolder = project.getFolder(TmfTraceFolder.TRACE_FOLDER_NAME);

            if (!traceFolder.exists()) {
                // Invalid LTTng 2.0 project
                MessageDialog.openError(getShell(),
                        Messages.TraceControl_ImportDialogTitle,
                        Messages.TraceControl_ImportDialogInvalidTracingProject + " (" + TmfTraceFolder.TRACE_FOLDER_NAME + ")");  //$NON-NLS-1$//$NON-NLS-2$
                return;
            }

            boolean overwriteAll = fOverwriteButton.getSelection();

            Object[] checked = fFolderViewer.getCheckedElements();
            for (int i = 0; i < checked.length; i++) {
                IRemoteFile file = (IRemoteFile) checked[i];
                if (!file.isDirectory() && file.getName().equals(METADATA_FILE_NAME)) {
                    IRemoteFile trace = file.getParentRemoteFile();
                    IRemoteFile parent = trace.getParentRemoteFile();
                    boolean isKernel = false;
                    if (trace.getName().equals(DEFAULT_KERNEL_TRACE_NAME)) {
                        isKernel = true;
                    }
                    StringBuffer traceName = new StringBuffer();
                    traceName.append(trace.getName());
                    traceName.insert(0, '-');

                    while (!parent.getAbsolutePath().equals(fSession.getSessionPath())) {
                        traceName.insert(0, parent.getName());
                        traceName.insert(0, '-');
                        parent = parent.getParentRemoteFile();
                    }
                    traceName.insert(0, parent.getName());

                    ImportFileInfo info = new ImportFileInfo(trace, traceName.toString(), overwriteAll, isKernel);
                    IFolder folder = traceFolder.getFolder(traceName.toString());

                    // Verify if trace directory already exists (and not overwrite)
                    if (folder.exists() && !overwriteAll) {

                        // Ask user for overwrite or new name
                        IImportConfirmationDialog conf = TraceControlDialogFactory.getInstance().getImportConfirmationDialog();
                        conf.setTraceName(traceName.toString());

                        // Don't add trace to list if dialog was cancelled.
                        if (conf.open() == Window.OK) {
                            info.setOverwrite(conf.isOverwrite());
                            if (!conf.isOverwrite()) {
                                info.setLocalTraceName(conf.getNewTraceName());
                            }
                            fTraces.add(info);
                        }
                    } else {
                        fTraces.add(info);
                    }
                }
            }

            if (fTraces.isEmpty()) {
                MessageDialog.openError(getShell(),
                        Messages.TraceControl_ImportDialogTitle,
                        Messages.TraceControl_ImportDialogNoTraceSelectedError);
                return;
            }
        }

        // validation successful -> call super.okPressed()
        super.okPressed();
    }

