    /*
     * (non-Javadoc)
     * @see org.eclipse.jface.dialogs.Dialog#createDialogArea(org.eclipse.swt.widgets.Composite)
     */
    @Override
    protected Control createDialogArea(Composite parent) {

        // Main dialog panel
        fDialogComposite = new Composite(parent, SWT.NONE);
        GridLayout layout = new GridLayout(1, true);
        fDialogComposite.setLayout(layout);
        fDialogComposite.setLayoutData(new GridData(GridData.FILL_BOTH));

        Group contextGroup = new Group(fDialogComposite, SWT.SHADOW_NONE);
        contextGroup.setText(Messages.TraceControl_ImportDialogTracesGroupName);
        layout = new GridLayout(1, true);
        contextGroup.setLayout(layout);
        contextGroup.setLayoutData(new GridData(GridData.FILL_BOTH));

        IRemoteSystemProxy proxy = fSession.getTargetNode().getRemoteSystemProxy();

        IFileServiceSubSystem fsss = proxy.getFileServiceSubSystem();

        try {
            IRemoteFile remoteFolder = fsss.getRemoteFileObject(fSession.getSessionPath(), new NullProgressMonitor());

            fFolderViewer = new CheckboxTreeViewer(contextGroup, SWT.BORDER);
            GridData data = new GridData(GridData.FILL_BOTH);
            Tree tree = fFolderViewer.getTree();
            tree.setLayoutData(data);
            tree.setFont(parent.getFont());
            tree.setToolTipText(Messages.TraceControl_ImportDialogTracesTooltip);

            fFolderViewer.setContentProvider(new FolderContentProvider());
            fFolderViewer.setLabelProvider(new WorkbenchLabelProvider());

            fFolderViewer.addCheckStateListener(new ICheckStateListener() {
                @Override
                public void checkStateChanged(CheckStateChangedEvent event) {
                    Object elem = event.getElement();
                    if (elem instanceof IRemoteFile) {
                        IRemoteFile element = (IRemoteFile) elem;
                        if (!element.isDirectory()) {
                            // A trick to keep selection of a file in sync with the directory
                            boolean p = fFolderViewer.getChecked((element.getParentRemoteFile()));
                            fFolderViewer.setChecked(element, p);
                            return;
                        }
                        fFolderViewer.setSubtreeChecked(event.getElement(), event.getChecked());
                        if (!event.getChecked()) {
                            fFolderViewer.setChecked(element.getParentRemoteFile(), false);
                        }
                    }
                }
            });
            fFolderViewer.setInput(remoteFolder);

            Group projectGroup = new Group(fDialogComposite, SWT.SHADOW_NONE);
            projectGroup.setText(Messages.TraceControl_ImportDialogProjectsGroupName);
            layout = new GridLayout(1, true);
            projectGroup.setLayout(layout);
            projectGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));

            fProjects = new ArrayList<IProject>();
            List<String> projectNames = new ArrayList<String>();
            for (IProject project : ResourcesPlugin.getWorkspace().getRoot().getProjects()) {
                try {
                    if (project.isOpen() && project.hasNature(TmfProjectNature.ID)) {
                        fProjects.add(project);
                        projectNames.add(project.getName());
                    }
                } catch (CoreException e) {
                    createErrorComposite(parent, e.fillInStackTrace());
                    return fDialogComposite;
                }
            }

            fCombo = new CCombo(projectGroup, SWT.READ_ONLY);
            fCombo.setToolTipText(Messages.TraceControl_ImportDialogProjectsTooltip);
            fCombo.setLayoutData(new GridData(GridData.FILL, GridData.CENTER, true, false, 1, 1));
            fCombo.setItems(projectNames.toArray(new String[projectNames.size()]));

            Group overrideGroup = new Group(fDialogComposite, SWT.SHADOW_NONE);
            layout = new GridLayout(1, true);
            overrideGroup.setLayout(layout);
            overrideGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));

            fOverwriteButton = new Button(overrideGroup, SWT.CHECK);
            fOverwriteButton.setText(Messages.TraceControl_ImportDialogOverwriteButtonText);

            getShell().setMinimumSize(new Point(500, 400));


        } catch (SystemMessageException e) {
            createErrorComposite(parent, e.fillInStackTrace());
            return fDialogComposite;
        }

        return fDialogComposite;
    }

