    /**
     * Creates a session with given session name and location.
     *
     * @param sessionName
     *            - a session name to create
     * @param networkUrl
     *            - a network URL for common definition of data and control channel
     *              or null if separate definition of data and control channel
     * @param controlUrl
     *            - a URL for control channel (networkUrl has to be null, dataUrl has to be set)
     * @param dataUrl
     *            - a URL for data channel (networkUrl has to be null, controlUrl has to be set)
     * @param noConsumer
     *            - a flag to indicate no consumer
     * @param disableConsumer
     *            - a flag to disable consumer
     * @param monitor
     *            - a progress monitor
     * @throws ExecutionException
     *             If the command fails
     */
    public void createSession(String sessionName, String networkUrl, String controlUrl, String dataUrl, boolean noConsumer, boolean disableConsumer, IProgressMonitor monitor) throws ExecutionException {
        ISessionInfo sessionInfo = getControlService().createSession(sessionName, networkUrl, controlUrl, dataUrl, noConsumer, disableConsumer, monitor);

        if (sessionInfo != null) {
            TraceSessionComponent session = new TraceSessionComponent(sessionInfo.getName(), TraceSessionGroup.this);
            addChild(session);
            session.getConfigurationFromNode(monitor);
        }
    }

