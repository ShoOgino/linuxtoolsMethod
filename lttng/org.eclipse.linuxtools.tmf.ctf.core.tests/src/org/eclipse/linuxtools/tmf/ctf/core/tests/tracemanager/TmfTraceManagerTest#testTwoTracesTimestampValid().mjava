    /**
     * Test, with two traces in parallel, when we select a timestamp that is
     * part of the first trace.
     *
     * The first trace's timestamp should be updated, but the second trace's one
     * should not change.
     */
    @Test
    public void testTwoTracesTimestampValid() {
        openTrace(trace1);
        openTrace(trace2);
        selectTrace(trace1);
        TmfTimestamp ts = new TmfTimestamp(t1start + ONE_SECOND, SCALE);
        selectTimestamp(ts);

        /* Timestamp of trace1 should have been updated */
        assertEquals(ts, tm.getSelectionBeginTime());
        assertEquals(ts, tm.getSelectionEndTime());

        /* Timestamp of trace2 should not have changed */
        selectTrace(trace2);
        assertEquals(trace2.getStartTime(), tm.getSelectionBeginTime());
        assertEquals(trace2.getStartTime(), tm.getSelectionEndTime());
    }

