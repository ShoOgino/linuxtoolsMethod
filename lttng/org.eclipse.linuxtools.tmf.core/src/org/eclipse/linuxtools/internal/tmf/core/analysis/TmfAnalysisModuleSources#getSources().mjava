    /**
     * Return the analysis module sources advertised in the extension
     * point, in iterable format.
     *
     * @return List of {@link IAnalysisModuleSource}
     */
    public static Iterable<IAnalysisModuleSource> getSources() {
        List<IAnalysisModuleSource> sources = new ArrayList<>();
        // Get the sources element from the extension point
        IConfigurationElement[] config = Platform.getExtensionRegistry().getConfigurationElementsFor(TMF_ANALYSIS_TYPE_ID);
        for (IConfigurationElement ce : config) {
            String elementName = ce.getName();
            if (elementName.equals(SOURCE_ELEM)) {
                try {
                    IAnalysisModuleSource source = (IAnalysisModuleSource) ce.createExecutableExtension(CLASS_ATTR);
                    sources.add(source);
                } catch (InvalidRegistryObjectException e) {
                    Activator.logError("Error creating module source", e); //$NON-NLS-1$
                } catch (CoreException e) {
                    Activator.logError("Error creating module source", e); //$NON-NLS-1$
                }

            }
        }
        return sources;
    }

