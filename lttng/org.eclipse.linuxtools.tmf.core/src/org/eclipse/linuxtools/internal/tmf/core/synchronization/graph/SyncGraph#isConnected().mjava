    /**
     * Check if this graph is connected, ie there are no partitions, all
     * vertices are reachable from every other one. It is a depth-first visit of
     * all vertices reachable from the first vertex of the graph.
     *
     * @return true if the graph is connected, false otherwise
     */
    public boolean isConnected() {
        HashSet<V> visited = new HashSet<>();
        Stack<V> stack = new Stack<>();
        stack.push(fVertices.iterator().next());
        while (!stack.isEmpty()) {
            V node = stack.pop();
            visited.add(node);
            for (Edge<V, E> edge : getAdjacentEdges(node)) {
                if (!visited.contains(edge.getTo())) {
                    stack.push(edge.getTo());
                }
            }
        }
        return visited.size() == fVertices.size();
    }

