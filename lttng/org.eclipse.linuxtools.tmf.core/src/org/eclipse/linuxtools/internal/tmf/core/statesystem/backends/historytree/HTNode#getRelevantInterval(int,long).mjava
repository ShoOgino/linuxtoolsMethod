    /**
     * Get a single Interval from the information in this node If the
     * key/timestamp pair cannot be found, we return null.
     *
     * @param key
     *            The attribute quark to look for
     * @param t
     *            The timestamp
     * @return The Interval containing the information we want, or null if it
     *         wasn't found
     * @throws TimeRangeException If 't' is invalid
     */
    public HTInterval getRelevantInterval(int key, long t) throws TimeRangeException {
        rwl.readLock().lock();
        try {
            if (intervals.size() == 0) {
                return null;
            }

            int startIndex = getStartIndexFor(t);

            for (int i = startIndex; i < intervals.size(); i++) {
                HTInterval curInterval = intervals.get(i);
                if (curInterval.getAttribute() == key
                        && curInterval.getStartTime() <= t
                        && curInterval.getEndTime() >= t) {
                    return curInterval;
                }
            }
            /* We didn't find the relevant information in this node */
            return null;

        } finally {
            rwl.readLock().unlock();
        }
    }

