    /**
     * Get a checkpoint from a rank
     *
     * @param rank
     *            the rank to search
     * @return the checkpoint that has been found or null if not found
     */
    public ITmfCheckpoint get(long rank) {
        ITmfCheckpoint checkpoint = null;
        try {
            long pos = getHeader().getSize() + fCheckpointSize * rank;
            getRandomAccessFile().seek(pos);
            fByteBuffer.clear();
            getRandomAccessFile().read(fByteBuffer.array());
            ITmfLocation location = getTrace().restoreLocation(fByteBuffer);
            ITmfTimestamp timeStamp = new TmfTimestamp(fByteBuffer);
            checkpoint = new TmfCheckpoint(timeStamp, location, fByteBuffer);
        } catch (IOException e) {
            Activator.logError(MessageFormat.format(Messages.FlatArray_IOErrorReading, getFile()), e);
        }
        return checkpoint;
    }

