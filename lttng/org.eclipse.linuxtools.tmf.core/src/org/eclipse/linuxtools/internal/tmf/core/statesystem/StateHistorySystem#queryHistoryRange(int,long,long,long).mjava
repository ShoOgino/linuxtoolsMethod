    @Override
    public List<ITmfStateInterval> queryHistoryRange(int attributeQuark,
            long t1, long t2, long resolution) throws TimeRangeException,
            AttributeNotFoundException {
        List<ITmfStateInterval> intervals;
        ITmfStateInterval currentInterval;
        long ts;

        /* Make sure the time range makes sense */
        if (t2 <= t1) {
            throw new TimeRangeException();
        }

        /* Get the initial state at time T1 */
        intervals = new ArrayList<ITmfStateInterval>();
        currentInterval = querySingleState(t1, attributeQuark);
        intervals.add(currentInterval);

        /*
         * Iterate over the "resolution points". We skip unneeded queries in the
         * case the current interval is longer than the resolution.
         */
        for (ts = t1; (currentInterval.getEndTime() != -1) && (ts < t2);
                ts += resolution) {
            if (ts <= currentInterval.getEndTime()) {
                continue;
            }

            try {
                currentInterval = querySingleState(ts, attributeQuark);
            } catch (TimeRangeException e) {
                /* Stop the queries, return the intervals we have so far. */
                break;
            }

            intervals.add(currentInterval);
        }

        /* Add the interval at t2, if it wasn't included already. */
        if (currentInterval.getEndTime() < t2 &&
                t2 <= this.getCurrentEndTime()) {
            currentInterval = querySingleState(t2, attributeQuark);
            intervals.add(currentInterval);
        } 
        return intervals;
    }

