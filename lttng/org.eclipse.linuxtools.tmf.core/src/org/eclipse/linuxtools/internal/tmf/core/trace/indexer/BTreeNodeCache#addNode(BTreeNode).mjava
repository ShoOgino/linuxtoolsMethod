    /**
     * Add a node to the cache. If the cache has reached the size specified with
     * {@link #CACHE_SIZE}, the least recently used node is removed from memory.
     *
     * @param node
     *            the node to add to the cache
     */
    void addNode(BTreeNode node) {
        if (fCachedNodes.size() >= CACHE_SIZE) {
            BTreeNode removed = fCachedNodes.removeLast();
            if (removed.isDirty()) {
                removed.serializeOut();
            }
        }
        fCachedNodes.push(node);
    }

