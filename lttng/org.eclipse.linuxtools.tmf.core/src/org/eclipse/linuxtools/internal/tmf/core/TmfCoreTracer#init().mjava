    /**
     * Set the tracing flags according to the launch configuration
     */
    public static void init() {

        String traceKey;
        boolean isTracing = false;

        traceKey = Platform.getDebugOption(COMPONENT_TRACE_KEY);
        if (traceKey != null) {
            COMPONENT_CLASS_ENABLED = (Boolean.valueOf(traceKey)).booleanValue();
            isTracing |= COMPONENT_CLASS_ENABLED;
        }

        traceKey = Platform.getDebugOption(REQUEST_TRACE_KEY);
        if (traceKey != null) {
            REQUEST_CLASS_ENABLED = (Boolean.valueOf(traceKey)).booleanValue();
            isTracing |= REQUEST_CLASS_ENABLED;
        }

        traceKey = Platform.getDebugOption(SIGNAL_TRACE_KEY);
        if (traceKey != null) {
            SIGNAL_CLASS_ENABLED = (Boolean.valueOf(traceKey)).booleanValue();
            isTracing |= SIGNAL_CLASS_ENABLED;
        }

        traceKey = Platform.getDebugOption(EVENT_TRACE_KEY);
        if (traceKey != null) {
            EVENT_CLASS_ENABLED = (Boolean.valueOf(traceKey)).booleanValue();
            isTracing |= EVENT_CLASS_ENABLED;
        }

        // Create trace log file if any of the flags was set
        if (isTracing) {
            try {
                fTraceFile = new BufferedWriter(new FileWriter(TRACE_FILE_NAME));
            } catch (IOException e) {
                Activator.logError("Error opening log file " + TRACE_FILE_NAME, e);
                fTraceFile = null;
            }
        }
    }

