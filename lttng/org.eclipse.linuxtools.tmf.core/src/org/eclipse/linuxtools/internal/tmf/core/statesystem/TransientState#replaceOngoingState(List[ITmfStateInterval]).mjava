    /**
     * More advanced version of {@link #changeOngoingStateValue}. Replaces the
     * complete ongoingStateInfo in one go, and updates the
     * ongoingStateStartTimes and #stateValuesTypes accordingly. BE VERY CAREFUL
     * WITH THIS!
     *
     * @param newStateIntervals
     *            The List of intervals that will represent the new
     *            "ongoing state". Their end times don't matter, we will only
     *            check their value and start times.
     */
    public synchronized void replaceOngoingState(List<ITmfStateInterval> newStateIntervals) {
        int size = newStateIntervals.size();
        ongoingStateInfo = new ArrayList<>(size);
        ongoingStateStartTimes = new ArrayList<>(size);
        stateValueTypes = new ArrayList<>(size);

        for (ITmfStateInterval interval : newStateIntervals) {
            ongoingStateInfo.add(interval.getStateValue());
            ongoingStateStartTimes.add(interval.getStartTime());
            stateValueTypes.add(interval.getStateValue().getType());
        }
    }

