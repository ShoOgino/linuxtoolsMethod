    @Override
    public synchronized void execute(final Runnable command) {

        // We are expecting MyEventThread:s
        if (!(command instanceof TmfEventThread)) {
            // TODO: Log an error
            return;
        }

        // Wrap the thread in a MyThread
        TmfEventThread thread = (TmfEventThread) command;
        TmfEventThread wrapper = new TmfEventThread(thread) {
            @Override
            public void run() {
                try {
                    command.run();
                } finally {
                    scheduleNext();
                }
            }
        };

        // Add the thread to the appropriate queue
        ExecutionType priority = thread.getExecType();
        (priority == ExecutionType.FOREGROUND ? fHighPriorityTasks : fLowPriorityTasks).offer(wrapper);

        // Schedule or preempt as appropriate
        if (fActiveTask == null) {
            scheduleNext();
        } else if (priority == ExecutionType.FOREGROUND && priority != fActiveTask.getExecType()) {
            fActiveTask.getThread().suspend();
            fSuspendedTask = fActiveTask;
            scheduleNext();
        }
    }

