    /**
     * Similar to the previous method, except here we rebuild a completely new
     * latestBranch
     */
    private void addNewRootNode() {
        final long splitTime = this.treeEnd;

        HTNode oldRootNode = latestBranch.get(0);
        CoreNode newRootNode = initNewCoreNode(-1, config.getTreeStart());

        /* Tell the old root node that it isn't root anymore */
        oldRootNode.setParentSequenceNumber(newRootNode.getSequenceNumber());

        /* Close off the whole current latestBranch */

        for (int i = 0; i < latestBranch.size(); i++) {
            latestBranch.get(i).closeThisNode(splitTime);
            treeIO.writeNode(latestBranch.get(i));
        }

        /* Link the new root to its first child (the previous root node) */
        newRootNode.linkNewChild(oldRootNode);

        /* Rebuild a new latestBranch */
        int depth = latestBranch.size();
        latestBranch.clear();
        latestBranch.add(newRootNode);

        // Create new coreNode
        for (int i = 1; i < depth + 1; i++) {
            CoreNode prevNode = (CoreNode) latestBranch.get(i - 1);
            CoreNode newNode = initNewCoreNode(prevNode.getParentSequenceNumber(),
                    splitTime + 1);
            prevNode.linkNewChild(newNode);
            latestBranch.add(newNode);
        }

        // Create the new leafNode
        CoreNode prevNode = (CoreNode) latestBranch.get(depth);
        LeafNode newNode = initNewLeafNode(prevNode.getParentSequenceNumber(), splitTime + 1);
        prevNode.linkNewChild(newNode);
        latestBranch.add(newNode);
    }

