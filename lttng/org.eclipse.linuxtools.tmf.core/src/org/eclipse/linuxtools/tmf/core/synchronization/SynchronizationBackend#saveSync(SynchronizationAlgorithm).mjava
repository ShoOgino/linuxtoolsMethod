    /**
     * Saves the synchronization algorithm object to file
     *
     * @param syncAlgo
     *            The algorithm to save
     * @throws FileNotFoundException
     *             propagate callee's exceptions
     */
    public void saveSync(SynchronizationAlgorithm syncAlgo) throws FileNotFoundException {

        if (fSyncFile == null) {
            return;
        }

        /* Save the header of the file */
        try (FileOutputStream fos = new FileOutputStream(fSyncFile, false);
                FileChannel fc = fos.getChannel();) {

            ByteBuffer buffer = ByteBuffer.allocate(HEADER_SIZE);
            buffer.clear();

            fc.position(0);

            buffer.putInt(SYNC_FILE_MAGIC_NUMBER);

            buffer.putInt(FILE_VERSION);

            buffer.flip();
            int res = fc.write(buffer);
            assert (res <= HEADER_SIZE);
            /* done writing the file header */

            fc.position(HEADER_SIZE);

            try (ObjectOutputStream oos = new ObjectOutputStream(fos);) {
                oos.writeObject(syncAlgo);
            }

        } catch (FileNotFoundException e) {
            /* Send this upwards */
            throw e;
        } catch (IOException e) {
            /* Handle other cases of IOException's */
            Activator.logError("Error saving trace synchronization data", e); //$NON-NLS-1$
        }
        return;

    }

