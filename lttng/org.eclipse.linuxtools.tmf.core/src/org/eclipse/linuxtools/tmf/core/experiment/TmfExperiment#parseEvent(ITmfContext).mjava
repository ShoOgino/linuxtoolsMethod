    /* (non-Javadoc)
     * @see org.eclipse.linuxtools.tmf.trace.ITmfTrace#parseEvent(org.eclipse.linuxtools .tmf.trace.TmfContext)
     */
    @SuppressWarnings("unchecked")
    @Override
    public T parseEvent(ITmfContext context) {

        // Validate the context
        if (!(context instanceof TmfExperimentContext))
            return null; // Throw an exception?

//        if (!context.equals(fExperimentContext))
//            // Tracer.trace("Ctx: Restoring context");
//            fExperimentContext = seekEvent(context.getLocation());

        TmfExperimentContext expContext = (TmfExperimentContext) context;

        // If an event was consumed previously, first get the next one from that trace
        final int lastTrace = expContext.getLastTrace();
        if (lastTrace != TmfExperimentContext.NO_TRACE) {
            final ITmfContext traceContext = expContext.getContexts()[lastTrace];
            expContext.getEvents()[lastTrace] = fTraces[lastTrace].readNextEvent(traceContext);
            expContext.setLastTrace(TmfExperimentContext.NO_TRACE);
//            fExperimentContext = (TmfExperimentContext) context;
        }

        // Scan the candidate events and identify the "next" trace to read from
        int trace = TmfExperimentContext.NO_TRACE;
        ITmfTimestamp timestamp = TmfTimestamp.BIG_CRUNCH;
        for (int i = 0; i < fTraces.length; i++) {
            final ITmfEvent event = expContext.getEvents()[i];
            if (event != null && event.getTimestamp() != null) {
                final ITmfTimestamp otherTS = event.getTimestamp();
                if (otherTS.compareTo(timestamp, true) < 0) {
                    trace = i;
                    timestamp = otherTS;
                }
            }
        }

        T event = null;
        if (trace != TmfExperimentContext.NO_TRACE)
            event = (T) expContext.getEvents()[trace];

//        TmfExperimentLocation location = (TmfExperimentLocation) fExperimentContext.getLocation();
//        location.getLocation().getLocations()[trace] = fTraces[trace].getCurrentLocation();
        expContext.setLastTrace(trace);
        return event;

//      // Scan the candidate events and identify the "next" trace to read from
//      final ITmfEvent eventArray[] = expContext.getEvents();
//      if (eventArray == null)
//          return null;
//      int trace = TmfExperimentContext.NO_TRACE;
//      ITmfTimestamp timestamp = TmfTimestamp.BIG_CRUNCH;
//      if (eventArray.length == 1) {
//          if (eventArray[0] != null) {
//              timestamp = eventArray[0].getTimestamp();
//              trace = 0;
//          }
//      } else
//          for (int i = 0; i < eventArray.length; i++) {
//              final ITmfEvent event = eventArray[i];
//              if (event != null && event.getTimestamp() != null) {
//                  final ITmfTimestamp otherTS = event.getTimestamp();
//                  if (otherTS.compareTo(timestamp, true) < 0) {
//                      trace = i;
//                      timestamp = otherTS;
//                  }
//              }
//          }
//
//      // Update the experiment context and set the "next" event
//      ITmfEvent event = null;
//      if (trace != TmfExperimentContext.NO_TRACE) {
//          updateIndex(expContext, timestamp);
//
//          final ITmfContext traceContext = expContext.getContexts()[trace];
//          final TmfExperimentLocation expLocation = (TmfExperimentLocation) expContext.getLocation();
//          //            expLocation.getLocation()[trace] = traceContext.getLocation().clone();
//          expLocation.getLocation().getLocations()[trace] = traceContext.getLocation().clone();
//
//          //            updateIndex(expContext, timestamp);
//
////          expLocation.getRanks()[trace] = traceContext.getRank();
//          expContext.setLastTrace(trace);
//          expContext.increaseRank();
//          event = expContext.getEvents()[trace];
//          fExperimentContext = expContext;
//      }
//
//      //        if (event != null) {
//      //            Tracer.trace("Exp: " + (expContext.getRank() - 1) + ": " + event.getTimestamp().toString());
//      //            dumpContext(expContext, false);
//      //            Tracer.trace("Ctx: Event returned= " + event.getTimestamp().toString());
//      //        }
//
//      return event;

    }

