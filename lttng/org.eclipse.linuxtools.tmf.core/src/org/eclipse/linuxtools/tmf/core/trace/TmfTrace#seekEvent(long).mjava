    /* (non-Javadoc)
     * @see org.eclipse.linuxtools.tmf.core.trace.ITmfTrace#seekEvent(long)
     */
    @Override
    public synchronized ITmfContext seekEvent(final long rank) {

        // A rank <= 0 indicates to seek the first event
        if (rank <= 0) {
            ITmfContext context = seekEvent((ITmfLocation<?>) null);
            context.setRank(0);
            return context;
        }

        // Position the trace at the checkpoint
        final ITmfContext context = fIndexer.seekIndex(rank);

        // And locate the requested event context
        long pos = context.getRank();
        if (pos < rank) {
            ITmfEvent event = getNext(context);
            while (event != null && ++pos < rank) {
                event = getNext(context);
            }
        }
//        System.out.println("seekEvent() before parseEvent() context=" + context);
//        ITmfEvent event = fParser.parseEvent(context);
//        System.out.println("seekEvent() after parseEvent() context=" + context + " TS=" + event.getTimestamp());
//        event = fParser.parseEvent(context);
//        System.out.println("seekEvent() after parseEvent() context=" + context + " TS=" + event.getTimestamp());
        return context;
    }

