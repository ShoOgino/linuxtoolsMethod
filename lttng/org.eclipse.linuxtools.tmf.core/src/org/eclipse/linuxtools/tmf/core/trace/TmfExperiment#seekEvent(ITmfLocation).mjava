    /* (non-Javadoc)
     *
     * Returns a brand new context based on the location provided and
     * initializes the event queues
     *
     * @see org.eclipse.linuxtools.tmf.core.trace.ITmfTrace#seekEvent(org.eclipse.linuxtools.tmf.core.trace.ITmfLocation)
     */
    @Override
    public synchronized ITmfContext seekEvent(final ITmfLocation location) {
        // Validate the location
        if (location != null && !(location instanceof TmfExperimentLocation)) {
            return null; // Throw an exception?
        }
        // Make sure we have something to read from
        if (fTraces == null) {
            return null;
        }

        // Create and populate the context's traces contexts
        final TmfExperimentContext context = new TmfExperimentContext(new ITmfContext[fTraces.length]);
        ITmfLocation[] expLocations = new ITmfLocation[fTraces.length];
        if (location != null) {
            TmfExperimentLocation locations = (TmfExperimentLocation) location;
            int index = 0;
            ITmfLocation l = locations.getLocationInfo().getLocation(index);
            while (index < expLocations.length && l != null) {
                expLocations[index] = l;
                l = locations.getLocationInfo().getLocation(++index);
            }
        }

        // Position the traces
        for (int i = 0; i < fTraces.length; i++) {
            // Get the relevant trace attributes
            final ITmfLocation trcLocation = expLocations[i];
            context.getContexts()[i] = fTraces[i].seekEvent(trcLocation);
            expLocations[i] = context.getContexts()[i].getLocation();
            context.getEvents()[i] = fTraces[i].getNext(context.getContexts()[i]);
        }

        // Finalize context
        context.setLocation(new TmfExperimentLocation(new TmfLocationArray(expLocations)));
        context.setLastTrace(TmfExperimentContext.NO_TRACE);
        context.setRank((location == null) ? 0 : ITmfContext.UNKNOWN_RANK);

        fExperimentContext = context;
        return context;
    }

