    /**
     * Gets a map in which the keys are the types of different requirements and
     * the values represent a set of requirement values linked to that type.
     *
     * @param providers
     *            The set of analysis requirement provider
     * @return A map with the values keyed by type
     */
    public static Map<String, Set<String>> getRequirementValuesMap(Iterable<IAnalysisRequirementProvider> providers) {
        Map<String, Set<String>> valuesByType = new HashMap<>();
        for (IAnalysisRequirementProvider provider : providers) {
            for (TmfAnalysisRequirement requirement : provider.getAnalysisRequirements()) {
                Set<String> values = valuesByType.get(requirement.getType());
                if (values == null) {
                    values = new HashSet<>();
                }
                /* Since it's a set, there will be no duplicate */
                values.addAll(requirement.getValues());
                valuesByType.put(requirement.getType(), values);
            }
        }
        return valuesByType;
    }

