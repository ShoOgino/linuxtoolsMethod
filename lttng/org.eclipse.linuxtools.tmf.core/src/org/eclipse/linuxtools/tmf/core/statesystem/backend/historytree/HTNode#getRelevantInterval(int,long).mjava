    /**
     * Get a single Interval from the information in this node If the
     * key/timestamp pair cannot be found, we return null.
     * 
     * @param key
     * @param t
     * @return The Interval containing the information we want, or null if it
     *         wasn't found
     * @throws TimeRangeException
     */
    HTInterval getRelevantInterval(int key, long t) throws TimeRangeException {
        assert (this.isDone);
        int startIndex;

        if (intervals.size() == 0) {
            return null;
        }

        startIndex = getStartIndexFor(t);

        for (int i = startIndex; i < intervals.size(); i++) {
            if (intervals.get(i).getAttribute() == key) {
                if (intervals.get(i).getStartTime() <= t) {
                    return intervals.get(i);
                }
            }
        }
        /* We didn't find the relevant information in this node */
        return null;
    }

