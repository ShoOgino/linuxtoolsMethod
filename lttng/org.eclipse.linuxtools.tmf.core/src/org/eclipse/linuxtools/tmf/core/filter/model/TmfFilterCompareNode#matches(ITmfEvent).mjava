	@Override
	public boolean matches(ITmfEvent event) {
        Object value = getFieldValue(event, fField);
        if (value == null) {
            return false ^ fNot;
        }
        if (fType == Type.NUM) {
            if (fValueNumber instanceof Number) {
                if (value instanceof Number) {
                    Double valueDouble = ((Number) value).doubleValue();
                    return (valueDouble.compareTo(fValueNumber.doubleValue()) == fResult) ^ fNot;
                } else {
                    try {
                        Double valueDouble = NumberFormat.getInstance().parse(value.toString())
                                        .doubleValue();
                        return (valueDouble.compareTo(fValueNumber.doubleValue()) == fResult)
                                        ^ fNot;
                    } catch (ParseException e) {
                    }
                }
            }
        } else if (fType == Type.ALPHA) {
            String valueString = value.toString();
            return (valueString.compareTo(fValue.toString()) == fResult) ^ fNot;
        } else if (fType == Type.TIMESTAMP) {
            if (fValueTimestamp instanceof TmfTimestamp) {
                if (value instanceof TmfTimestamp) {
                    TmfTimestamp valueTimestamp = (TmfTimestamp) value;
                    return (valueTimestamp.compareTo(fValueTimestamp, false) == fResult) ^ fNot;
                } else {
                    try {
                        TmfTimestamp valueTimestamp = new TmfTimestamp((long) (1E9 * NumberFormat
                                        .getInstance().parse(value.toString()).doubleValue()));
                        return (valueTimestamp.compareTo(fValueTimestamp, false) == fResult) ^ fNot;
                    } catch (ParseException e) {
                    }
                }
            }
        }
        return false ^ fNot;
	}

