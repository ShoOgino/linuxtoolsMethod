	/**
	 * @param id the field id
	 * @return the corresponding field
	 * @throws TmfNoSuchFieldException
	 */
    public ITmfEventField getField(String id) throws TmfNoSuchFieldException {
        if (fFields == null) {
            parseContent();
        }
        try {
            return fFields[getType().getFieldIndex(id)];
        } catch (TmfNoSuchFieldException e) {
            // Required for filtering from default TmfEventsTable columns
            if (id.equals(FIELD_ID_CONTENT)) {
                return new TmfEventField(this, FIELD_ID_CONTENT, toString());
            } else if (id.equals(FIELD_ID_TIMESTAMP)) {
                return new TmfEventField(this, FIELD_ID_TIMESTAMP, fParentEvent.getTimestamp().toString());
            } else if (id.equals(FIELD_ID_SOURCE)) {
                return new TmfEventField(this, FIELD_ID_SOURCE, fParentEvent.getSource());
            } else if (id.equals(FIELD_ID_TYPE)) {
                return new TmfEventField(this, FIELD_ID_TYPE, fParentEvent.getType().getId());
            } else if (id.equals(FIELD_ID_REFERENCE)) {
                return new TmfEventField(this, FIELD_ID_REFERENCE, fParentEvent.getReference());
            }
            throw e;
        }
    }

