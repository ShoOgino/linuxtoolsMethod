    /**
     * Load all custom text trace definitions, including the user-defined and,
     * optionally, the default (built-in) parsers.
     *
     * @param includeDefaults
     *            if true, the default (built-in) parsers are included
     *
     * @return The loaded trace definitions
     * @since 3.2
     */
    public static CustomTxtTraceDefinition[] loadAll(boolean includeDefaults) {
        File defaultFile = new File(CUSTOM_TXT_TRACE_DEFINITIONS_PATH_NAME);
        File legacyFile = new File(CUSTOM_TXT_TRACE_DEFINITIONS_PATH_NAME_LEGACY);

        /*
         * If there is no file at the expected location, check the legacy
         * location instead.
         */
        if (!defaultFile.exists() && legacyFile.exists()) {
            CustomTxtTraceDefinition[] oldDefs = loadAll(CUSTOM_TXT_TRACE_DEFINITIONS_PATH_NAME_LEGACY);
            for (CustomTxtTraceDefinition def : oldDefs) {
                /* Save in the new location */
                def.save();
            }
        }

        Set<CustomTxtTraceDefinition> defs = new TreeSet<>(new Comparator<CustomTxtTraceDefinition>() {
            @Override
            public int compare(CustomTxtTraceDefinition o1, CustomTxtTraceDefinition o2) {
                int result = o1.categoryName.compareTo(o2.categoryName);
                if (result != 0) {
                    return result;
                }
                return o1.definitionName.compareTo(o2.definitionName);
            }
        });
        defs.addAll(Arrays.asList(loadAll(CUSTOM_TXT_TRACE_DEFINITIONS_PATH_NAME)));
        if (includeDefaults) {
            defs.addAll(Arrays.asList(loadAll(CUSTOM_TXT_TRACE_DEFINITIONS_DEFAULT_PATH_NAME)));
        }
        return defs.toArray(new CustomTxtTraceDefinition[0]);

    }

