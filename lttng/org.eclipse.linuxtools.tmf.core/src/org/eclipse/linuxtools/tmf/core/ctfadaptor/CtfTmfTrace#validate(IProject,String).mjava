    /**
     * {@inheritDoc}
     * <p>
     * The default implementation sets the confidence to 10 if the trace is a
     * valid CTF trace.
     */
    @Override
    public IStatus validate(final IProject project, final String path) {
        IStatus validTrace = new TraceValidationStatus(CONFIDENCE, Activator.PLUGIN_ID);
        try {
            final CTFTrace temp = new CTFTrace(path);
            if (!temp.majorIsSet()) {
                validTrace = new Status(IStatus.ERROR, Activator.PLUGIN_ID, Messages.CtfTmfTrace_MajorNotSet);
            } else {
                CTFTraceReader ctfTraceReader = new CTFTraceReader(temp);
                if (!ctfTraceReader.hasMoreEvents()) {
                    // TODO: This will need an additional check when we support live traces
                    // because having no event is valid for a live trace
                    validTrace = new Status(IStatus.ERROR, Activator.PLUGIN_ID, Messages.CtfTmfTrace_NoEvent);
                }
                ctfTraceReader.dispose();
            }
            temp.dispose();
        } catch (final CTFReaderException e) {
            validTrace = new Status(IStatus.ERROR, Activator.PLUGIN_ID, Messages.CtfTmfTrace_ReadingError +": " + e.toString()); //$NON-NLS-1$
        } catch (final BufferOverflowException e){
            validTrace = new Status(IStatus.ERROR, Activator.PLUGIN_ID, Messages.CtfTmfTrace_ReadingError +": " + Messages.CtfTmfTrace_BufferOverflowErrorMessage); //$NON-NLS-1$
        }

        return validTrace;
    }

