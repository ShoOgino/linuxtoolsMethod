    /**
     * Test suite for the {@link TmfAnalysisRequirement#merge} method with the
     * parameter value OPTIONAL.
     */
    @Test
    public void testMergeOptional() {
        initMergeRequirements(TYPE_A, TYPE_A);

        assertTrue(fRequirement.merge(fSubRequirement, ValuePriorityLevel.OPTIONAL));

        assertEquals(6, fRequirement.getValues().size());

        assertEquals(ValuePriorityLevel.MANDATORY, fRequirement.getValueLevel(VALUE_A));
        assertEquals(ValuePriorityLevel.MANDATORY, fRequirement.getValueLevel(VALUE_B));

        assertEquals(ValuePriorityLevel.OPTIONAL, fRequirement.getValueLevel(VALUE_C));
        assertEquals(ValuePriorityLevel.OPTIONAL, fRequirement.getValueLevel(VALUE_D));

        assertEquals(ValuePriorityLevel.OPTIONAL, fRequirement.getValueLevel(VALUE_E));
        assertEquals(ValuePriorityLevel.OPTIONAL, fRequirement.getValueLevel(VALUE_F));

        Set<String> information = fRequirement.getInformation();

        assertEquals(3, information.size());

        assertTrue(information.contains(INFO_A));
        assertTrue(information.contains(INFO_B));
        assertTrue(information.contains(INFO_C));
    }

