    /**
     * Test a query range to the state system to get the average value in the
     * range. The test values are DOUBLE.
     */
    @Test
    public void testQueryMipmapRangeAvgDouble() {
        assertNotNull(ssqd);
        try {
            int quark = ssqd.getQuarkAbsolute(TEST_ATTRIBUTE_NAME);
            assertEquals(0.0, ssod.queryRangeAverage(0, 0, quark), DELTA);
            assertEquals(5.0, ssod.queryRangeAverage(500, 1500, quark), DELTA);
            assertEquals(90.0 / 7, ssod.queryRangeAverage(1500, 5000, quark), DELTA);
            assertEquals(90.0 / 5, ssod.queryRangeAverage(5000, 10000, quark), DELTA);
            assertEquals(14.0, ssod.queryRangeAverage(0, 10000, quark), DELTA);
            assertEquals(14.0, ssod.queryRangeAverage(0, 20000, quark), DELTA);
            assertEquals(14.0, ssod.queryRangeAverage(500, 20500, quark), DELTA);
            assertEquals(14.0, ssod.queryRangeAverage(1000, 21000, quark), DELTA);
            assertEquals(14.0, ssod.queryRangeAverage(2000, 22000, quark), DELTA);
            assertEquals(14.0, ssod.queryRangeAverage(3000, 23000, quark), DELTA);
            assertEquals(14.0, ssod.queryRangeAverage(4000, 24000, quark), DELTA);
            assertEquals(14.0, ssod.queryRangeAverage(5000, 25000, quark), DELTA);
            assertEquals(0.0, ssod.queryRangeAverage(120000, 120000, quark), DELTA);
            assertEquals(5.0, ssod.queryRangeAverage(120500, 121500, quark), DELTA);
            assertEquals(90.0 / 7, ssod.queryRangeAverage(121500, 125000, quark), DELTA);
            assertEquals(90.0 / 5, ssod.queryRangeAverage(125000, 130000, quark), DELTA);
            assertEquals(14.0, ssod.queryRangeAverage(120000, 130000, quark), DELTA);
            assertEquals(14.0, ssod.queryRangeAverage(100000, 150000, quark), DELTA);
            assertEquals(14.0, ssod.queryRangeAverage(240000, 250000, quark), DELTA);
            assertEquals(14.0, ssod.queryRangeAverage(0, 250000, quark), DELTA);
            assertEquals(0.0, ssod.queryRangeAverage(250000, 250000, quark), DELTA);
        } catch (AttributeNotFoundException e) {
            fail(e.getMessage());
        }
    }

