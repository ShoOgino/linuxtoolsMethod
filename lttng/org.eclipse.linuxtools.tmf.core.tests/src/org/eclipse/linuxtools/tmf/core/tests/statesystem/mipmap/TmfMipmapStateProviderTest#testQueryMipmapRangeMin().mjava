    /**
     * Test a query range to the state system to get the minimum value in the
     * range
     *
     * Make sure the state system has data.
     *
     *
     */
    @Test
    public void testQueryMipmapRangeMin() {
        assertNotNull(ssq);
        try {
            long min;
            int quark = ssq.getQuarkAbsolute(TEST_ATTRIBUTE_NAME);

            min = sso.queryRangeMin(0, START_TIME, quark).unboxLong();
            assertEquals(START_TIME / INTERVAL, min);

            min = sso.queryRangeMin(START_TIME, START_TIME, quark).unboxLong();
            assertEquals(START_TIME / INTERVAL, min);

            min = sso.queryRangeMin(START_TIME, END_TIME / 2, quark).unboxLong();
            assertEquals((START_TIME / INTERVAL), min);

            min = sso.queryRangeMin(0, END_TIME, quark).unboxLong();
            assertEquals(START_TIME / INTERVAL, min);

            min = sso.queryRangeMin(END_TIME / 2, END_TIME, quark).unboxLong();
            assertEquals(END_TIME / 2 / INTERVAL, min);

            min = sso.queryRangeMin(START_TIME - INTERVAL / 2, END_TIME / 2 + INTERVAL / 2, quark).unboxLong();
            assertEquals(START_TIME / INTERVAL, min);

        } catch (AttributeNotFoundException e) {
            fail(e.getMessage());
        } catch (StateValueTypeException e) {
            fail(e.getMessage());
        }
    }

