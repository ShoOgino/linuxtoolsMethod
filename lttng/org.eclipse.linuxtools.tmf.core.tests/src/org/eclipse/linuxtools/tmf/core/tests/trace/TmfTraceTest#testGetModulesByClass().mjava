    @Test
    public void testGetModulesByClass() {
        /* There should not be any modules at this point */
        Iterable<IAnalysisModule> modules = fTrace.getAnalysisModules();
        assertFalse(modules.iterator().hasNext());

        /* Open the trace, the modules should be populated */
        fTrace.traceOpened(new TmfTraceOpenedSignal(this, fTrace, null));

        modules = fTrace.getAnalysisModules();
        Iterable<TestAnalysis> testModules = fTrace.getAnalysisModulesOfClass(TestAnalysis.class);
        assertTrue(modules.iterator().hasNext());
        assertTrue(testModules.iterator().hasNext());

        /* Make sure all modules of type TestAnalysis are returned in the second call */
        for (IAnalysisModule module : modules) {
            if (module instanceof TestAnalysis) {
                IAnalysisModule otherModule = fTrace.getAnalysisModule(module.getId());
                assertNotNull(otherModule);
                assertTrue(otherModule.equals(module));
            }
        }

    }

