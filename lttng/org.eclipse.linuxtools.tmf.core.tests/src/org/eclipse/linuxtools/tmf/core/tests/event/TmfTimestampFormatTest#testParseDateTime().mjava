    /**
     * Test parsing of date and time patterns
     *
     * @throws ParseException
     *             should not happen, if it does, the test is a failure
     */
    @Test
    public void testParseDateTime() throws ParseException {
        long time;

        time = new TmfTimestampFormat("yyyy", GMT, CA).parseValue("2014");
        assertEquals("2014-01-01 00:00:00.000000000", tsf.format(time));

        time = new TmfTimestampFormat("YYYY", GMT, CA).parseValue("2014");
        assertEquals("2013-12-29 00:00:00.000000000", tsf.format(time)); // 1st day of week 1

        time = new TmfTimestampFormat("MM", GMT, CA).parseValue("11");
        assertEquals("1970-11-01 00:00:00.000000000", tsf.format(time));

        time = new TmfTimestampFormat("ww", GMT, CA).parseValue("01");
        assertEquals("1969-12-28 00:00:00.000000000", tsf.format(time)); // Sunday of week 1

        time = new TmfTimestampFormat("DDD", GMT, CA).parseValue("100");
        assertEquals("1970-04-10 00:00:00.000000000", tsf.format(time));

        time = new TmfTimestampFormat("F", GMT, CA).parseValue("2");
        assertEquals("1970-01-11 00:00:00.000000000", tsf.format(time)); // 2nd Sunday of month

        time = new TmfTimestampFormat("EEE", GMT, CA).parseValue("Mon");
        assertEquals("1970-01-05 00:00:00.000000000", tsf.format(time));

        time = new TmfTimestampFormat("u", GMT, CA).parseValue("1");
        assertEquals("1970-01-05 00:00:00.000000000", tsf.format(time));

        time = new TmfTimestampFormat("dd", GMT, CA).parseValue("22");
        assertEquals("1970-01-22 00:00:00.000000000", tsf.format(time));

        time = new TmfTimestampFormat("HH", GMT, CA).parseValue("12");
        assertEquals("1970-01-01 12:00:00.000000000", tsf.format(time));

        time = new TmfTimestampFormat("kk", GMT, CA).parseValue("24");
        assertEquals("1970-01-01 00:00:00.000000000", tsf.format(time));

        time = new TmfTimestampFormat("KK", GMT, CA).parseValue("12");
        assertEquals("1970-01-01 12:00:00.000000000", tsf.format(time));

        time = new TmfTimestampFormat("hh", GMT, CA).parseValue("12");
        assertEquals("1970-01-01 00:00:00.000000000", tsf.format(time));

        time = new TmfTimestampFormat("mm", GMT, CA).parseValue("34");
        assertEquals("1970-01-01 00:34:00.000000000", tsf.format(time));

        time = new TmfTimestampFormat("ss", GMT, CA).parseValue("56");
        assertEquals("1970-01-01 00:00:56.000000000", tsf.format(time));

        time = new TmfTimestampFormat("yyyy-MM", GMT, CA).parseValue("2014-11");
        assertEquals("2014-11-01 00:00:00.000000000", tsf.format(time));

        time = new TmfTimestampFormat("yyyy-MM-dd", GMT, CA).parseValue("2014-11-22");
        assertEquals("2014-11-22 00:00:00.000000000", tsf.format(time));

        time = new TmfTimestampFormat("yyyy-MM-dd HH", GMT, CA).parseValue("2014-11-22 12");
        assertEquals("2014-11-22 12:00:00.000000000", tsf.format(time));

        time = new TmfTimestampFormat("yyyy-MM-dd HH:mm", GMT, CA).parseValue("2014-11-22 12:34");
        assertEquals("2014-11-22 12:34:00.000000000", tsf.format(time));

        time = new TmfTimestampFormat("yyyy-MM-dd HH:mm:ss", GMT, CA).parseValue("2014-11-22 12:34:56");
        assertEquals("2014-11-22 12:34:56.000000000", tsf.format(time));

        time = new TmfTimestampFormat("yyyy-MM-dd HH:mm:ss.SSS", GMT, CA).parseValue("2014-11-22 12:34:56.123");
        assertEquals("2014-11-22 12:34:56.123000000", tsf.format(time));

        time = new TmfTimestampFormat("yyyy-ww", GMT, CA).parseValue("2014-01");
        assertEquals("2013-12-29 00:00:00.000000000", tsf.format(time)); // Sunday of week 1

        time = new TmfTimestampFormat("yyyy-DDD", GMT, CA).parseValue("2014-100");
        assertEquals("2014-04-10 00:00:00.000000000", tsf.format(time));

        time = new TmfTimestampFormat("yyyy-MM-F", GMT, CA).parseValue("2014-11-2");
        assertEquals("2014-11-09 00:00:00.000000000", tsf.format(time)); // 2nd Sunday of month

        time = new TmfTimestampFormat("yyyy-MM-EEE", GMT, CA).parseValue("2014-11-Mon");
        assertEquals("2014-11-03 00:00:00.000000000", tsf.format(time));

        time = new TmfTimestampFormat("yyyy-MM-u", GMT, CA).parseValue("2014-11-1");
        assertEquals("2014-11-03 00:00:00.000000000", tsf.format(time));

        time = new TmfTimestampFormat("yyyy MM dd HH mm ss SSS SSS SSS", GMT, CA).parseValue("2014 11 22 12 34 56 123 456 789");
        assertEquals("2014-11-22 12:34:56.123456789", tsf.format(time));

        time = new TmfTimestampFormat("yyyy.MM.dd.HH.mm.ss.SSS.SSS.SSS", GMT, CA).parseValue("2014.11.22.12.34.56.123.456.789");
        assertEquals("2014-11-22 12:34:56.123456789", tsf.format(time));

        time = new TmfTimestampFormat("yyyy,MM,dd,HH,mm,ss,SSS,SSS,SSS", GMT, CA).parseValue("2014,11,22,12,34,56,123,456,789");
        assertEquals("2014-11-22 12:34:56.123456789", tsf.format(time));

        time = new TmfTimestampFormat("yyyy-MM-dd-HH-mm-ss-SSS-SSS-SSS", GMT, CA).parseValue("2014-11-22-12-34-56-123-456-789");
        assertEquals("2014-11-22 12:34:56.123456789", tsf.format(time));

        time = new TmfTimestampFormat("yyyy_MM_dd_HH_mm_ss_SSS_SSS_SSS", GMT, CA).parseValue("2014_11_22_12_34_56_123_456_789");
        assertEquals("2014-11-22 12:34:56.123456789", tsf.format(time));

        time = new TmfTimestampFormat("yyyy:MM:dd:HH:mm:ss:SSS:SSS:SSS", GMT, CA).parseValue("2014:11:22:12:34:56:123:456:789");
        assertEquals("2014-11-22 12:34:56.123456789", tsf.format(time));

        time = new TmfTimestampFormat("yyyy;MM;dd;HH;mm;ss;SSS;SSS;SSS", GMT, CA).parseValue("2014;11;22;12;34;56;123;456;789");
        assertEquals("2014-11-22 12:34:56.123456789", tsf.format(time));

        time = new TmfTimestampFormat("yyyy/MM/dd/HH/mm/ss/SSS/SSS/SSS", GMT, CA).parseValue("2014/11/22/12/34/56/123/456/789");
        assertEquals("2014-11-22 12:34:56.123456789", tsf.format(time));

        time = new TmfTimestampFormat("yyyy''MM''dd''HH''mm''ss''SSS''SSS''SSS", GMT, CA).parseValue("2014'11'22'12'34'56'123'456'789");
        assertEquals("2014-11-22 12:34:56.123456789", tsf.format(time));

        time = new TmfTimestampFormat("yyyy\"MM\"dd\"HH\"mm\"ss\"SSS\"SSS\"SSS", GMT, CA).parseValue("2014\"11\"22\"12\"34\"56\"123\"456\"789");
        assertEquals("2014-11-22 12:34:56.123456789", tsf.format(time));

        time = new TmfTimestampFormat("yyyy MM dd HH mm ss SSS SSS SSS", GMT, CA).parseValue("2014  11  22  12  34  56  123 456 789");
        assertEquals("2014-11-22 12:34:56.123456789", tsf.format(time));

        time = new TmfTimestampFormat("yyyy MM dd HH mm ss SSS SSS SSS", GMT, CA).parseValue("2014  1  2  3  4  5  123 456 789");
        assertEquals("2014-01-02 03:04:05.123456789", tsf.format(time));

        time = new TmfTimestampFormat("yyyy MM dd HH mm ss SSS SSS SSS", GMT, CA).parseValue("2014 \t 1 \t 2 \t 3 \t 4 \t 5 \t 123 456 789");
        assertEquals("2014-01-02 03:04:05.123456789", tsf.format(time));
    }

