    @Test
    public void testNonEquals() {

        // Different classes
        final MyContext myContext = new MyContext(fLocation1, fRank1);
        assertFalse("equals", fContext1.equals(myContext));
        assertFalse("equals", myContext.equals(fContext1));

        // Different locations
        TextTraceContext context1 = new TextTraceContext(fLocation1, fRank1);
        TextTraceContext context2 = new TextTraceContext(fLocation2, fRank1);
        assertFalse("equals", context1.equals(context2));

        // Different ranks
        context1 = new TextTraceContext(fLocation1, fRank1);
        context2 = new TextTraceContext(fLocation1, fRank2);
        assertFalse("equals", context1.equals(context2));

        // Different firstLine
        context1 = new TextTraceContext(fLocation1, fRank1);
        context1.firstLine = line1;
        context2 = new TextTraceContext(fLocation1, fRank1);
        context2.firstLine = line2;
        assertFalse("equals", context1.equals(context2));

        // Different firstLineMatcher
        context1 = new TextTraceContext(fLocation1, fRank1);
        context1.firstLine = line1;
        context1.firstLineMatcher = fContext1.firstLineMatcher;
        context2 = new TextTraceContext(fLocation1, fRank1);
        context2.firstLine = line1;
        context2.firstLineMatcher = fContext2.firstLineMatcher;
        assertFalse("equals", context1.equals(context2));

        // Different nextLineLocation
        context1 = new TextTraceContext(fLocation1, fRank1);
        context1.firstLine = line1;
        context1.firstLineMatcher = fContext1.firstLineMatcher;
        context1.nextLineLocation = aLong2;
        context2 = new TextTraceContext(fLocation1, fRank1);
        context2.firstLine = line1;
        context2.firstLineMatcher = fContext1.firstLineMatcher;
        context2.nextLineLocation = aLong3;
        assertFalse("equals", context1.equals(context2));

    }

