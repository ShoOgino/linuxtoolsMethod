    @Test
    public void testBasicTmfExperimentConstructor() {
        assertEquals("GetId", EXPERIMENT, fExperiment.getName());
        assertEquals("GetNbEvents", NB_EVENTS, fExperiment.getNbEvents());

        final TmfTimeRange timeRange = fExperiment.getTimeRange();
        assertEquals("getStartTime", 1, timeRange.getStartTime().getValue());
        assertEquals("getEndTime", NB_EVENTS, timeRange.getEndTime().getValue());

        TmfTimestamp initRange = new TmfTimestamp(DEFAULT_INITIAL_OFFSET_VALUE, ITmfTimestamp.NANOSECOND_SCALE);
        assertEquals("getInitialRangeOffset", initRange, fExperiment.getInitialRangeOffset());

        assertEquals("getCurrentTime", fExperiment.getTimeRange().getStartTime(), fExperiment.getCurrentTime());

        ITmfTimestamp startTimestamp = fExperiment.getTimeRange().getStartTime();
        long endValue = startTimestamp.getValue() + initRange.normalize(0, startTimestamp.getScale()).getValue();
        ITmfTimestamp endTimestamp = new TmfTimestamp(endValue, startTimestamp.getScale());
        TmfTimeRange expectedRange = new TmfTimeRange(startTimestamp, endTimestamp);
        assertEquals("getCurrentRange", expectedRange, fExperiment.getCurrentRange());
    }

