    /**
     * Test parsing of date and time patterns with reference time
     *
     * @throws ParseException
     *             should not happen, if it does, the test is a failure
     */
    @Test
    public void testParseDateTimeWithRef() throws ParseException {
        long ref = tsf.parseValue("2014-11-22 12:34:56.123456789"); // Saturday
        long time;

        time = new TmfTimestampFormat("yyyy", GMT, CA).parseValue("1970", ref);
        assertEquals("1970-01-01 00:00:00.000000000", tsf.format(time));

        time = new TmfTimestampFormat("YYYY", GMT, CA).parseValue("1970", ref);
        assertEquals("1969-12-28 00:00:00.000000000", tsf.format(time)); // 1st day of week 1

        time = new TmfTimestampFormat("MM", GMT, CA).parseValue("01", ref);
        assertEquals("2014-01-01 00:00:00.000000000", tsf.format(time));

        time = new TmfTimestampFormat("ww", GMT, CA).parseValue("01", ref);
        assertEquals("2014-01-04 00:00:00.000000000", tsf.format(time)); // Saturday of week 1

        time = new TmfTimestampFormat("DDD", GMT, CA).parseValue("1", ref);
        assertEquals("2014-01-01 00:00:00.000000000", tsf.format(time));

        time = new TmfTimestampFormat("F", GMT, CA).parseValue("2", ref);
        assertEquals("2014-11-08 00:00:00.000000000", tsf.format(time)); // 2nd Saturday of month

        time = new TmfTimestampFormat("EEE", GMT, CA).parseValue("Mon", ref);
        assertEquals("2014-11-17 00:00:00.000000000", tsf.format(time));

        time = new TmfTimestampFormat("u", GMT, CA).parseValue("1", ref);
        assertEquals("2014-11-17 00:00:00.000000000", tsf.format(time));

        time = new TmfTimestampFormat("dd", GMT, CA).parseValue("01", ref);
        assertEquals("2014-11-01 00:00:00.000000000", tsf.format(time));

        time = new TmfTimestampFormat("HH", GMT, CA).parseValue("00", ref);
        assertEquals("2014-11-22 00:00:00.000000000", tsf.format(time));

        time = new TmfTimestampFormat("kk", GMT, CA).parseValue("24", ref);
        assertEquals("2014-11-22 00:00:00.000000000", tsf.format(time));

        time = new TmfTimestampFormat("KK", GMT, CA).parseValue("00", ref);
        assertEquals("2014-11-22 00:00:00.000000000", tsf.format(time));

        time = new TmfTimestampFormat("hh", GMT, CA).parseValue("12", ref);
        assertEquals("2014-11-22 00:00:00.000000000", tsf.format(time));

        time = new TmfTimestampFormat("mm", GMT, CA).parseValue("00", ref);
        assertEquals("2014-11-22 12:00:00.000000000", tsf.format(time));

        time = new TmfTimestampFormat("ss", GMT, CA).parseValue("00", ref);
        assertEquals("2014-11-22 12:34:00.000000000", tsf.format(time));

        time = new TmfTimestampFormat(".S", GMT, CA).parseValue(".9", ref);
        assertEquals("2014-11-22 12:34:56.900000000", tsf.format(time));

        time = new TmfTimestampFormat("T.S", GMT, CA).parseValue("8.9", ref);
        assertEquals("1970-01-01 00:00:08.900000000", tsf.format(time));

        time = new TmfTimestampFormat("T.S", GMT, CA).parseValue(".9", ref);
        assertEquals("1970-01-01 00:00:00.900000000", tsf.format(time));
    }

