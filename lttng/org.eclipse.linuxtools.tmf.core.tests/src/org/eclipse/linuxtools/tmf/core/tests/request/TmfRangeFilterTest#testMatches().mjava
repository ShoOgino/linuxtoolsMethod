    /**
     * The only test that really matters...
     */
    @Test
    public void testMatches() {

        TmfTimeRange range1 = new TmfTimeRange(new TmfTimestamp(0), new TmfTimestamp(1000));
        TmfTimeRange range2 = new TmfTimeRange(new TmfTimestamp(10), new TmfTimestamp(2000));

        TmfRangeFilter filter1 = new TmfRangeFilter(range1);
        TmfRangeFilter filter2 = new TmfRangeFilter(range2);

        ITmfEvent event = new TmfEvent(null, 0, new TmfTimestamp(0), null, null, null, null);
        assertTrue ("matches", TmfRangeFilter.ALL_EVENTS.matches(event));
        assertTrue ("matches", filter1.matches(event));
        assertTrue ("matches", filter2.matches(event));

        event = new TmfEvent(null, 0, new TmfTimestamp(5), null, null, null, null);
        assertTrue ("matches", TmfRangeFilter.ALL_EVENTS.matches(event));
        assertTrue ("matches", filter1.matches(event));
        assertFalse("matches", filter2.matches(event));

        event = new TmfEvent(null, 0, new TmfTimestamp(9), null, null, null, null);
        assertTrue ("matches", TmfRangeFilter.ALL_EVENTS.matches(event));
        assertTrue ("matches", filter1.matches(event));
        assertFalse("matches", filter2.matches(event));

        event = new TmfEvent(null, 0, new TmfTimestamp(10), null, null, null, null);
        assertTrue ("matches", TmfRangeFilter.ALL_EVENTS.matches(event));
        assertTrue ("matches", filter1.matches(event));
        assertTrue ("matches", filter2.matches(event));

        event = new TmfEvent(null, 0, new TmfTimestamp(999), null, null, null, null);
        assertTrue ("matches", TmfRangeFilter.ALL_EVENTS.matches(event));
        assertTrue ("matches", filter1.matches(event));
        assertTrue ("matches", filter2.matches(event));

        event = new TmfEvent(null, 0, new TmfTimestamp(1000), null, null, null, null);
        assertTrue ("matches", TmfRangeFilter.ALL_EVENTS.matches(event));
        assertTrue ("matches", filter1.matches(event));
        assertTrue ("matches", filter2.matches(event));

        event = new TmfEvent(null, 0, new TmfTimestamp(1001), null, null, null, null);
        assertTrue ("matches", TmfRangeFilter.ALL_EVENTS.matches(event));
        assertFalse("matches", filter1.matches(event));
        assertTrue ("matches", filter2.matches(event));

        event = new TmfEvent(null, 0, new TmfTimestamp(1999), null, null, null, null);
        assertTrue ("matches", TmfRangeFilter.ALL_EVENTS.matches(event));
        assertFalse("matches", filter1.matches(event));
        assertTrue ("matches", filter2.matches(event));

        event = new TmfEvent(null, 0, new TmfTimestamp(2000), null, null, null, null);
        assertTrue ("matches", TmfRangeFilter.ALL_EVENTS.matches(event));
        assertFalse("matches", filter1.matches(event));
        assertTrue ("matches", filter2.matches(event));

        event = new TmfEvent(null, 0, new TmfTimestamp(2001), null, null, null, null);
        assertTrue ("matches", TmfRangeFilter.ALL_EVENTS.matches(event));
        assertFalse("matches", filter1.matches(event));
        assertFalse("matches", filter2.matches(event));
    }

