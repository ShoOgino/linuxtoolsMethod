	public void testCancelCoalescedRequest() throws Exception {

		fTrace = setupTrace(DIRECTORY + File.separator + TEST_STREAM);

    	TmfSignalManager.register(this);
		TmfTestTriggerSignal signal = new TmfTestTriggerSignal(this, true);
    	TmfSignalManager.dispatchSignal(signal);

        request1.waitForCompletion();
        request2.waitForCompletion();
        request3.waitForCompletion();

        assertEquals("Request1: nbEvents", BLOCK_SIZE, requestedEvents1.size());
        assertTrue  ("Request1: isCompleted", request1.isCompleted());
        assertTrue  ("Request1: isCancelled", request1.isCancelled());

        assertEquals("Request2: nbEvents", NB_EVENTS, requestedEvents2.size());
        assertTrue  ("Request2: isCompleted", request2.isCompleted());
        assertFalse ("Request2: isCancelled", request2.isCancelled());

        assertEquals("Request3: nbEvents", NB_EVENTS, requestedEvents3.size());
        assertTrue  ("Request3: isCompleted", request3.isCompleted());
        assertFalse ("Request3: isCancelled", request3.isCancelled());

        // Ensure that we have distinct events.
        // Don't go overboard: we are not validating the stub!
        for (int i = 0; i < NB_EVENTS; i++) {
            assertEquals("Distinct events", i+1, requestedEvents2.get(i).getTimestamp().getValue());
            assertEquals("Distinct events", i+1, requestedEvents3.get(i).getTimestamp().getValue());
        }

        TmfSignalManager.deregister(this);
        fTrace.dispose();
        fTrace = null;
    }

