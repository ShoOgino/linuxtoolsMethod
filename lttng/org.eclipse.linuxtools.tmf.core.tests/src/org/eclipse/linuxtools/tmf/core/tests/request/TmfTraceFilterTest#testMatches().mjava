    /**
     * The only test that really matters...
     */
    @Test
    public void testMatches() {
        ITmfTrace trace0 = new TmfTraceStub();
        ITmfTrace trace1 = new TmfTraceStub();
        ITmfTrace trace2 = new TmfTraceStub();

        TmfTraceFilter filter0 = new TmfTraceFilter();
        TmfTraceFilter filter1 = new TmfTraceFilter(new ITmfTrace[] { trace1 });
        TmfTraceFilter filter2 = new TmfTraceFilter(new ITmfTrace[] { trace2 });
        TmfTraceFilter filter3 = new TmfTraceFilter(new ITmfTrace[] { trace1, trace2 });

        ITmfEvent event = new TmfEvent(trace0, 0, new TmfTimestamp(0), null, null, null, null);
        assertTrue ("matches", TmfTraceFilter.ALL_TRACES.matches(event));
        assertTrue ("matches", filter0.matches(event));
        assertFalse("matches", filter1.matches(event));
        assertFalse("matches", filter2.matches(event));
        assertFalse("matches", filter3.matches(event));

        event = new TmfEvent(trace1, 0, new TmfTimestamp(0), null, null, null, null);
        assertTrue ("matches", TmfTraceFilter.ALL_TRACES.matches(event));
        assertTrue ("matches", filter0.matches(event));
        assertTrue ("matches", filter1.matches(event));
        assertFalse("matches", filter2.matches(event));
        assertTrue ("matches", filter3.matches(event));

        event = new TmfEvent(trace2, 0, new TmfTimestamp(0), null, null, null, null);
        assertTrue ("matches", TmfTraceFilter.ALL_TRACES.matches(event));
        assertTrue ("matches", filter0.matches(event));
        assertFalse("matches", filter1.matches(event));
        assertTrue ("matches", filter2.matches(event));
        assertTrue ("matches", filter3.matches(event));
    }

