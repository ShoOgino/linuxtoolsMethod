    /**
     * Test, with two traces in parallel, when we select a time range that is
     * not valid for any trace.
     *
     * Each trace's time range should not be modified.
     */
    @Test
    public void testTwoTracesTimeRangeInBetween() {
        openTrace(trace1);
        openTrace(trace2);
        selectTrace(trace1);
        TmfTimeRange range = new TmfTimeRange(
                new TmfTimestamp(t1end + ONE_SECOND, SCALE),
                new TmfTimestamp(t1end - ONE_SECOND, SCALE));
        selectTimeRange(range);

        /* Range of trace1 should not have changed */
        TmfTimeRange expectedRange = getInitialRange(trace1);
        TmfTimeRange curRange = tm.getCurrentRange();
        assertEquals(expectedRange.getStartTime(), curRange.getStartTime());
        assertEquals(expectedRange.getEndTime(), curRange.getEndTime());

        /* Range of trace2 should not have changed */
        selectTrace(trace2);
        expectedRange = getInitialRange(trace2);
        curRange = tm.getCurrentRange();
        assertEquals(expectedRange.getStartTime(), curRange.getStartTime());
        assertEquals(expectedRange.getEndTime(), curRange.getEndTime());
    }

