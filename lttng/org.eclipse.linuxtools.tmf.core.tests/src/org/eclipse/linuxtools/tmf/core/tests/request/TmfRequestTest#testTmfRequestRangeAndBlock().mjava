    @Test
    public void testTmfRequestRangeAndBlock() {

        // 1. All events since beginning of time
        ITmfRequest request = new TmfRequestStub(ETERNITY, 0, ALL_EVENTS);
        fLastRequestId++;

        assertEquals("getRequestId", fLastRequestId, request.getRequestId());
        assertEquals("getRequestPriority", NORMAL, request.getRequestPriority());
        assertEquals("getTimeRange", ETERNITY, request.getTimeRange());
        assertEquals("getNbRequested", ALL_EVENTS, request.getNbRequested());
        assertEquals("getStartIndex", 0, request.getStartIndex());

        assertEquals("getNbEventsRead", 0, request.getNbEventsRead());
        assertEquals("getState", PENDING, request.getState());
        assertFalse("isRunning", request.isRunning());
        assertFalse("isCompleted", request.isCompleted());

        assertNull("getStatus", request.getStatus());
        assertFalse("isOK", request.isOK());
        assertFalse("isFailed", request.isFailed());
        assertFalse("isCancelled", request.isCancelled());

        // 2. All events since the epoch
        request = new TmfRequestStub(EPOCH, 0, ALL_EVENTS);
        fLastRequestId++;

        assertEquals("getRequestId", fLastRequestId, request.getRequestId());
        assertEquals("getRequestPriority", NORMAL, request.getRequestPriority());
        assertEquals("getTimeRange", EPOCH, request.getTimeRange());
        assertEquals("getNbRequested", ALL_EVENTS, request.getNbRequested());
        assertEquals("getStartIndex", 0, request.getStartIndex());

        assertEquals("getNbEventsRead", 0, request.getNbEventsRead());
        assertEquals("getState", PENDING, request.getState());
        assertFalse("isRunning", request.isRunning());
        assertFalse("isCompleted", request.isCompleted());

        assertNull("getStatus", request.getStatus());
        assertFalse("isOK", request.isOK());
        assertFalse("isFailed", request.isFailed());
        assertFalse("isCancelled", request.isCancelled());

        // 3. A block of events since the beginning of time
        long nbRequested = 10000;
        request = new TmfRequestStub(ETERNITY, 0, nbRequested);
        fLastRequestId++;

        assertEquals("getRequestId", fLastRequestId, request.getRequestId());
        assertEquals("getRequestPriority", NORMAL, request.getRequestPriority());
        assertEquals("getTimeRange", ETERNITY, request.getTimeRange());
        assertEquals("getNbRequested", nbRequested, request.getNbRequested());
        assertEquals("getStartIndex", 0, request.getStartIndex());

        assertEquals("getNbEventsRead", 0, request.getNbEventsRead());
        assertEquals("getState", PENDING, request.getState());
        assertFalse("isRunning", request.isRunning());
        assertFalse("isCompleted", request.isCompleted());

        assertNull("getStatus", request.getStatus());
        assertFalse("isOK", request.isOK());
        assertFalse("isFailed", request.isFailed());
        assertFalse("isCancelled", request.isCancelled());

        // 4. All events from a given index since the beginning of time
        long index = 100;
        request = new TmfRequestStub(ETERNITY, index, ALL_EVENTS);
        fLastRequestId++;

        assertEquals("getRequestId", fLastRequestId, request.getRequestId());
        assertEquals("getRequestPriority", NORMAL, request.getRequestPriority());
        assertEquals("getTimeRange", ETERNITY, request.getTimeRange());
        assertEquals("getNbRequested", ALL_EVENTS, request.getNbRequested());
        assertEquals("getStartIndex", index, request.getStartIndex());

        assertEquals("getNbEventsRead", 0, request.getNbEventsRead());
        assertEquals("getState", PENDING, request.getState());
        assertFalse("isRunning", request.isRunning());
        assertFalse("isCompleted", request.isCompleted());

        assertNull("getStatus", request.getStatus());
        assertFalse("isOK", request.isOK());
        assertFalse("isFailed", request.isFailed());
        assertFalse("isCancelled", request.isCancelled());

        // 4. Some events from a given index since the epoch
        request = new TmfRequestStub(EPOCH, index, nbRequested);
        fLastRequestId++;

        assertEquals("getRequestId", fLastRequestId, request.getRequestId());
        assertEquals("getRequestPriority", NORMAL, request.getRequestPriority());
        assertEquals("getTimeRange", EPOCH, request.getTimeRange());
        assertEquals("getNbRequested", nbRequested, request.getNbRequested());
        assertEquals("getStartIndex", index, request.getStartIndex());

        assertEquals("getNbEventsRead", 0, request.getNbEventsRead());
        assertEquals("getState", PENDING, request.getState());
        assertFalse("isRunning", request.isRunning());
        assertFalse("isCompleted", request.isCompleted());

        assertNull("getStatus", request.getStatus());
        assertFalse("isOK", request.isOK());
        assertFalse("isFailed", request.isFailed());
        assertFalse("isCancelled", request.isCancelled());
    }

