    /**
     * Test the {@link TmfAnalysisModuleHelperConfigElement#newModule(ITmfTrace)} method
     * for the 2 modules
     */
    @Test
    public void testNewModule() {
        /* Test analysis module with traceStub */
        Exception exception = null;
        IAnalysisModule module = null;
        try {
            module = fModule.newModule(TmfTestTrace.A_TEST_10K.getTrace());
        } catch (TmfAnalysisException e) {
            exception = e;
        }
        assertNull(exception);
        assertNotNull(module);
        assertTrue(module instanceof TestAnalysis);

        /* TestAnalysis2 module with trace, should return an exception */
        module = null;
        try {
            module = fModuleOther.newModule(TmfTestTrace.A_TEST_10K.getTrace());
        } catch (TmfAnalysisException e) {
            exception = e;
        }
        assertNotNull(exception);
        assertEquals(NLS.bind(Messages.TmfAnalysisModuleHelper_AnalysisDoesNotApply, fModuleOther.getName()), exception.getMessage());

        /* TestAnalysis2 module with a TraceStub2 */
        exception = null;
        module = null;
        try {
            module = fModuleOther.newModule(fTrace);
        } catch (TmfAnalysisException e) {
            exception = e;
        }
        assertNull(exception);
        assertNotNull(module);
        assertTrue(module instanceof TestAnalysis2);
    }

