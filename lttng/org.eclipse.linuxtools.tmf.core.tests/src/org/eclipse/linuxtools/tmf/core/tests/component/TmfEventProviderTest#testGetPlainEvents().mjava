    /**
     * Test getPlainEvents
     */
    @Test
    public void testGetPlainEvents() {
        final int BLOCK_SIZE = 100;
        final int NB_EVENTS = 1000;
        final Vector<ITmfEvent> requestedEvents = new Vector<ITmfEvent>();

        // Get the TmfSyntheticEventStub provider
        ITmfDataProvider[] eventProviders = TmfProviderManager.getProviders(ITmfEvent.class,
                TmfEventProviderStub.class);
        ITmfDataProvider provider = eventProviders[0];

        TmfTimeRange range = new TmfTimeRange(TmfTimestamp.BIG_BANG, TmfTimestamp.BIG_CRUNCH);
        final TmfEventRequest request = new TmfEventRequest(ITmfEvent.class,
                range, 0, NB_EVENTS, BLOCK_SIZE, ExecutionType.FOREGROUND) {
            @Override
            public void handleData(ITmfEvent event) {
                super.handleData(event);
                requestedEvents.add(event);
            }
        };

        provider.sendRequest(request);
        try {
            request.waitForCompletion();
            assertEquals("nbEvents", NB_EVENTS, requestedEvents.size());
            assertTrue("isCompleted", request.isCompleted());
            assertFalse("isCancelled", request.isCancelled());

            // Make that we have distinct events.
            // Don't go overboard: we are not validating the stub!
            for (int i = 0; i < NB_EVENTS; i++) {
                assertEquals("Distinct events", i + 1, requestedEvents.get(i).getTimestamp().getValue());
            }
        } catch (InterruptedException e) {
            fail();
        }
    }

