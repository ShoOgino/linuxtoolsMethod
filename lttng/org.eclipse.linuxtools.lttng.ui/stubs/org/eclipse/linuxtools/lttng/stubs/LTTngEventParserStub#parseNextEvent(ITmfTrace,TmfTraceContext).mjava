    public TmfEvent parseNextEvent(ITmfTrace eventStream, TmfTraceContext context) throws IOException {

        if (! (eventStream instanceof LTTngTraceStub)) {
            return null;
        }

       	// Highly inefficient...
       	RandomAccessFile stream = ((LTTngTraceStub) eventStream).getStream();
       	String name = eventStream.getName();
       	name = name.substring(name.lastIndexOf('/') + 1);

		synchronized(stream) {
        	long location = 0;
        	if (context != null)
        		location = (Long) (context.getLocation());
        	stream.seek(location);

    		try {
    			// Read the individual fields
        		long ts       = stream.readLong();
        		String source = stream.readUTF();
        		String type   = stream.readUTF();
    			@SuppressWarnings("unused")
    			int reference = stream.readInt();

        		// Read the event parts
        		int typeIndex  = Integer.parseInt(type.substring(typePrefix.length()));
        		String[] fields = new String[typeIndex];
        		for (int i = 0; i < typeIndex; i++) {
        			fields[i] = stream.readUTF();
        		}

        		// Format the content from the individual fields
        		String content = "[";
        		if (typeIndex > 0) {
        			content += fields[0];
        		}
        		for (int i = 1; i < typeIndex; i++) {
        			content += ", " + fields[i];
        		}
        		content += "]";

        		// Update the context
        		context.setLocation(stream.getFilePointer());
        		context.incrIndex();
       			try {
       				long ts2 = stream.readLong();
           			context.setTimestamp(new LTTngTimestampStub(ts2));
        		} catch (EOFException e) {
        			context.setTimestamp(null);
            	}

       	    	// Create the event
       			TmfEvent event = new TmfEvent(
       					new LTTngTimestampStub(ts),
       					new TmfEventSource(source),
       					new TmfEventType(type, fFormats[typeIndex]),
       					new TmfEventContent(content, fFormats[typeIndex]),
       					new TmfEventReference(name));

       			return event;

    		} catch (EOFException e) {
    			context.setTimestamp(null);
        	}
        }
        return null;
    }

