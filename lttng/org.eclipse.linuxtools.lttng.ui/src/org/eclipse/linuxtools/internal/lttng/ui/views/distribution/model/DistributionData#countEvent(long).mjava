    public int countEvent(long timestamp) {

        // Set the start/end time if not already done
        if (fIsFirst) {
            fIsFirst = false;
            fFirstBucketTime = timestamp;
            fFirstEventTime = timestamp;

            updateEndTime();
        }

        // save first event time if necessary 
        if (timestamp < fFirstEventTime) {
            fFirstEventTime = timestamp;
        }

        // save last event time if necessary
        if (fLastEventTime < timestamp) {
            fLastEventTime = timestamp;
        }

        
        if (timestamp >= fFirstBucketTime) {
            // Compact as needed
            while (timestamp >= fTimeLimit) {
                mergeBuckets();
            }

        } else {

            // Get offset for buckets adjustment
            int offset = getOffset(timestamp);

            // Compact as needed
            while (fLastBucket + offset >= fNbBuckets) {
                mergeBuckets();
                offset = getOffset(timestamp);
            }

            // Move buckets with offset (to right)
            moveBuckets(offset);

            // Adjust start/end time and index 
            fLastBucket = fLastBucket + offset;
            fFirstBucketTime = fFirstBucketTime - offset * fBucketDuration;
            updateEndTime();
        }

        // Increment the right bucket
        int index = (int) ((timestamp - fFirstBucketTime) / fBucketDuration);

        if (fLastBucket < index) {
            fLastBucket = index;
        }

        return index;
    }

