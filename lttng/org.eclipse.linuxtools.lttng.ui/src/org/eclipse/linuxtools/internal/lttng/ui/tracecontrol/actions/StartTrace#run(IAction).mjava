    /*
     * (non-Javadoc)
     * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)
     */
    @Override
    public void run(IAction arg0) {
        for (int i = 0; i < fSelectedTraces.size(); i++) {

            TraceResource trace = (TraceResource) fSelectedTraces.get(i);
            TraceSubSystem subSystem = (TraceSubSystem)trace.getSubSystem();

            TraceConfig traceConfig = trace.getTraceConfig();
            if (traceConfig != null) {
                try {
                    ILttControllerService service = subSystem.getControllerService();
                    if (trace.getTraceState() == TraceState.CONFIGURED) {
                        setTraceTransport(service, trace, traceConfig);
                        allocTrace(service, trace, traceConfig);
                    	setupLocation(service, trace, traceConfig);
                    }
                    // for network traces and if trace path is not available, open a dialog box for the user to specify the trace path
                    else if (traceConfig.isNetworkTrace() && (TraceConfig.InvalidTracePath.equals(traceConfig.getTracePath()))) {
                        
                        SelectTracePathDialog selectDialog = new SelectTracePathDialog(SystemBasePlugin.getActiveWorkbenchShell());

                        if (selectDialog.open() == Window.OK) {
                            traceConfig.setTracePath(selectDialog.getTracePath());
                        }
                        else {
                            // we don't have place to store the trace files ... go to the next trace
                            continue;
                        }
                    }

                    startTrace(service, trace, traceConfig);

                    trace.setTraceState(TraceState.STARTED);

                    if (trace.isNetworkTraceAndStarted()) {
                        LiveTraceManager.setLiveTrace(trace.getTraceConfig().getTracePath(), true);
                    }

                    // Refresh display
                    ISystemRegistry registry = SystemStartHere.getSystemRegistry();
                    registry.fireRemoteResourceChangeEvent(ISystemRemoteChangeEvents.SYSTEM_REMOTE_RESOURCE_CHANGED, trace, trace.getParent(), subSystem, null);

                } catch (Exception e) {
                    SystemMessageException sysExp;
                    if (e instanceof SystemMessageException) {
                        sysExp = (SystemMessageException)e;
                    } else {
                        sysExp = new SystemMessageException(Activator.getDefault().getMessage(e));    
                    }
                    SystemBasePlugin.logError(Messages.Lttng_Control_ErrorStart + " (" +  //$NON-NLS-1$
                            Messages.Lttng_Resource_Trace + ": "  + trace.getName() + ")", sysExp); //$NON-NLS-1$ //$NON-NLS-2$
                } 
           }
        }
    }

