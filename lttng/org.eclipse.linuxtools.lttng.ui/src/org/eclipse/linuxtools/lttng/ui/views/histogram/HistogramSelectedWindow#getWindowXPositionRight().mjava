	/**
	 * Getter for the right border of the window.<p>
	 * Compute the position from the HistogramContent data; may return 0 if the content data are wrong.  
	 * 
	 * @return The right position of the window, or 0 if it cannot compute it. 
	 */
	public int getWindowXPositionRight() {
		// If the timewidth is too small, we would pick the same position as the center one.
		// To avoid this, we take a "full interval" when the window size is too small
		if ( windowTimeWidth < histogramContent.getElementsTimeInterval() ) {
			// Use intervalTime and not intervalTime/2 to make sure we step into the next interval
			// Otherwise, if we are in the beginning of an interval, adding IntervalTime/2 could lead us into the same one
			// The rounding operation will then return a correct position
			return histogramContent.getXPositionByPositionAndTimeInterval(windowCenterPosition, +(histogramContent.getElementsTimeInterval() ) );
		}
		else {
			return histogramContent.getXPositionByPositionAndTimeInterval(windowCenterPosition, +(windowTimeWidth / 2) );
		}
		
	}

