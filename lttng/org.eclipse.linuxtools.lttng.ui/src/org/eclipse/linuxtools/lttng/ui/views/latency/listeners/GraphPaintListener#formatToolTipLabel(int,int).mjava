    /*
     * (non-Javadoc)
     * @see org.eclipse.linuxtools.lttng.ui.views.latency.listeners.AbstractPaintListener#formatToolTipLabel(int, int)
     */
    @Override
    public String formatToolTipLabel(int x, int y) {

        int index = getIndexFromHorizontalValue(x);
        int yIndex = getIndexFromVerticalValue(y);

        if (index != BaseDistributionData.OUT_OF_RANGE_BUCKET && yIndex != BaseDistributionData.OUT_OF_RANGE_BUCKET) {
            if (fScaledData.getEventCount(index, yIndex) > 0) {
                StringBuffer buffer = new StringBuffer();
                buffer.append("Time Range in s = ["); //$NON-NLS-1$
                // TODO change Utility
                long startTime = fScaledData.getHorBucketStartTime(index) > 0 ? fScaledData.getHorBucketStartTime(index) : 0;
                buffer.append(HistogramUtils.nanosecondsToString(startTime));
                buffer.append(","); //$NON-NLS-1$
                buffer.append(HistogramUtils.nanosecondsToString(fScaledData.getHorBucketEndTime(index)));
                buffer.append("]\n"); //$NON-NLS-1$
                buffer.append("Latency Range in s = ["); //$NON-NLS-1$
                long yStartTime = fScaledData.getVerBucketStartTime(yIndex) > 0 ? fScaledData.getVerBucketStartTime(yIndex) : 0;
                buffer.append(HistogramUtils.nanosecondsToString(yStartTime));
                buffer.append(","); //$NON-NLS-1$
                buffer.append(HistogramUtils.nanosecondsToString(fScaledData.getVerBucketEndTime(yIndex)));
                buffer.append("]\n"); //$NON-NLS-1$
                buffer.append("Latency count = "); //$NON-NLS-1$
                buffer.append(fScaledData.getEventCount(index, yIndex));
                return buffer.toString();
            }
        }
        return ""; //$NON-NLS-1$
    }

