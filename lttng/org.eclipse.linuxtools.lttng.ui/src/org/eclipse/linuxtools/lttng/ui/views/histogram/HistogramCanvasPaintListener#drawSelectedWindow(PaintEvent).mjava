	/**
	 * Draw the selection window in the canvas.<p>
	 * This draw a square around the selected section with a crosshair in the middle.
	 * The square cannot be smaller than "MINIMUM_WINDOW_WIDTH"
	 * 
	 * @param event The generated paint event when redraw is called.
	 */
	public void drawSelectedWindow(PaintEvent event) {
		HistogramSelectedWindow tmpWindow = parentCanvas.getCurrentWindow();
		
		// Attributes (color and width) of the lines
		event.gc.setForeground(event.display.getSystemColor(HistogramConstant.SELECTION_WINDOW_COLOR));
		event.gc.setLineWidth(HistogramConstant.SELECTION_LINE_WIDTH);
	    
		// Get the window position... this would fail if the window is not initialized yet
		int positionCenter = tmpWindow.getWindowXPositionCenter();
		int positionLeft = tmpWindow.getWindowXPositionLeft();
		int positionRight = tmpWindow.getWindowXPositionRight();
		
		// Minimal size verification.
		if ( (positionRight - positionLeft) < HistogramConstant.MINIMUM_WINDOW_WIDTH ) {
			positionLeft  = positionCenter - (HistogramConstant.MINIMUM_WINDOW_WIDTH/2);
			positionRight = positionCenter + (HistogramConstant.MINIMUM_WINDOW_WIDTH/2);
		}
		
		// Draw the selection window square
		event.gc.drawLine(positionLeft , 0       	 , positionLeft , event.height);
		event.gc.drawLine(positionLeft , event.height, positionRight, event.height);
		event.gc.drawLine(positionRight, event.height, positionRight, 0);
		event.gc.drawLine(positionLeft , 0       	 , positionRight, 0);
	    
		// Draw the crosshair section
		event.gc.drawLine(positionCenter + HistogramConstant.SELECTION_CROSSHAIR_LENGTH, event.height/2, positionCenter - HistogramConstant.SELECTION_CROSSHAIR_LENGTH, event.height/2);
		event.gc.drawLine(positionCenter, (event.height/2) + HistogramConstant.SELECTION_CROSSHAIR_LENGTH, positionCenter, (event.height/2) - HistogramConstant.SELECTION_CROSSHAIR_LENGTH);
	}

