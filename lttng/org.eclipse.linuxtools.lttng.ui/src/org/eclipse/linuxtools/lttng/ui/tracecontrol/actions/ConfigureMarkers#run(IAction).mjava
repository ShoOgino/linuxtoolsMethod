    /*
     * (non-Javadoc)
     * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)
     */
    @Override
    public void run(IAction arg0) {
        Shell shell = getShell();

        final TargetResource tr = (TargetResource) fSelectedTargets.get(0);
        TraceSubSystem subSystem = (TraceSubSystem)tr.getSubSystem();

        ConfigureMarkersDialog dialog = new ConfigureMarkersDialog(shell, subSystem);
        Map<String, Boolean> map = dialog.open(tr);
        if (map == null) {
            return;
        }

        for (Iterator<Map.Entry<String, Boolean>> it = map.entrySet().iterator(); it.hasNext();) {
            Map.Entry<String, Boolean> entry = (Map.Entry<String, Boolean>) it.next();
            final String key = (String) entry.getKey();

            final Boolean value = (Boolean) entry.getValue();

            try {

                final ILttControllerService service = subSystem.getControllerService();

                // Create future task
                @SuppressWarnings("unused")
                Boolean ok = new TCFTask<Boolean>() {
                    @Override
                    public void run() {

                        // Set marker enable using Lttng controller service proxy
                        service.setMarkerEnable(tr.getParent().getName(), tr.getName(), key, value.booleanValue(), new ILttControllerService.DoneSetMarkerEnable() {

                            @Override
                            public void doneSetMarkerEnable(IToken token, Exception error, Object str) {
                                if (error != null) {
                                    // Notify with error
                                    error(error);
                                    return;
                                }

                                // Notify about success
                                done(Boolean.valueOf(true));
                            }
                        });
                    }}.get(TraceControlConstants.DEFAULT_TCF_TASK_TIMEOUT, TimeUnit.SECONDS);
            } catch (Exception e) {
                SystemMessageException sysExp;
                if (e instanceof SystemMessageException) {
                    sysExp = (SystemMessageException)e;
                } else {
                    sysExp = new SystemMessageException(LTTngUiPlugin.getDefault().getMessage(e));    
                }
                SystemBasePlugin.logError(Messages.Lttng_Control_ErrorConfigureMarkers + " (" +  //$NON-NLS-1$
                        Messages.Lttng_Resource_Target + ": "  + tr.getName() + ")", sysExp); //$NON-NLS-1$ //$NON-NLS-2$
            }
        }
    }

