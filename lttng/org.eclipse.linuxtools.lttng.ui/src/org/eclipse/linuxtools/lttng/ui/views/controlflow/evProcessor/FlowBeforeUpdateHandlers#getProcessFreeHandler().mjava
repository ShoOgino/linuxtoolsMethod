	/**
	 * <p>
	 * Handles: LTT_EVENT_PROCESS_FREE
	 * </p>
	 * Replace C function named "before_process_release_hook" in eventhooks.c
	 * <p>
	 * Fields: LTT_FIELD_PID
	 * </p>
	 * 
	 * @return
	 */
	final ILttngEventProcessor getProcessFreeHandler() {
		AbsFlowTRangeUpdate handler = new AbsFlowTRangeUpdate() {

			// @Override
			@Override
			public boolean process(LttngEvent trcEvent, LttngTraceState traceSt) {
				// PID of the process to release
				Long release_pid = getAFieldLong(trcEvent, traceSt,
						Fields.LTT_FIELD_PID);

				if ((release_pid != null)) {
					LttngProcessState process = lttv_state_find_process(
							traceSt, ANY_CPU, release_pid);
					if (process != null) {

						// Replace the C call :
						// hashed_process_data =
						// processlist_get_process_data(process_list,pid,process->cpu,&birth,trace_num);
						TimeRangeEventProcess localProcess = procContainer
								.findProcess(process.getPid(), process.getCpu(), traceSt
										.getTraceId(), process
                                        .getCreation_time());

						// This is as it was in the C ... ?
						if (localProcess == null) {
							return false;
						}

						// Perform the drawing
						makeDraw(traceSt, trcEvent.getTimestamp().getValue(),
								process,
								localProcess, params);
					}
				} else {
					TraceDebug
							.debug("Release_pid is null! (getProcessFreeHandler)");
				}

				return false;
			}
		};
		return handler;
	}

