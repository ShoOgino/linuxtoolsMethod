	@Override
	public void modelInputChanged(ILttngSyntEventRequest request, boolean complete) {
		// Ignore update if disposed
		if (treeViewer.getTree().isDisposed()) return;
		
		if(TraceDebug.isSV() && complete) {
		    // print results

		    TmfExperiment<?> experiment = TmfExperiment.getCurrentExperiment();
		    if(experiment != null) {
		        StatisticsTreeNode node = StatisticsTreeRootFactory.getStatTreeRoot(experiment.getName());
		        printRecursively(node);

		    }
		}
		
		treeViewer.getTree().getDisplay().asyncExec(new Runnable() {
			// @Override
			@Override
			public void run() {
				if (!treeViewer.getTree().isDisposed())
					treeViewer.refresh();
			}
		});
		
		if (complete) {
			synchronized (fStatisticsUpdateSyncObj) {
				fStatisticsUpdateBusy = false;
				if (fStatisticsUpdatePending) {
					fStatisticsUpdatePending = false;
					requestData(TmfExperiment.getCurrentExperiment(), fStatisticsUpdateRange, false);
				}
			}
		}

	}

