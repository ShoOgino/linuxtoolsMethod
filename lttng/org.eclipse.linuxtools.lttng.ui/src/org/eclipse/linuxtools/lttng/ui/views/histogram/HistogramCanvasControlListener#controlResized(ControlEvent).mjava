	/**
	 * Method called when the canvas is resized.<p>
	 * 
	 * We need to tell the content that the canvas size changed and to recenter the windows
	 * 
	 * @param event 	The controle event generated by the resize.
	 */
	public void controlResized(ControlEvent event) {
		
		if ( (parentCanvas != null) && (parentCanvas.getHistogramContent() != null) ) {
			int newSize = parentCanvas.getSize().x;
			int oldSize = parentCanvas.getHistogramContent().getCanvasWindowSize();
			
			// Set the new canvas size
			parentCanvas.getHistogramContent().setCanvasWindowSize(newSize);
			
			// Try to recenter to window at the same place it was
			// Note : this is a best hope approach and is not intended to be precise;
			//		the idea is to avoid issuing a (maybe) long request fo the selection window;
			// There WILL be slight discrepancy between the "window values" (timestamp, etc...) showed 
			//		and what it really points to. The user should reclick by himself to refresh it. 
			int oldWindowCenter = parentCanvas.getCurrentWindow().getWindowXPositionCenter();
			int newWindowCenter = (int)Math.ceil((double)newSize * ((double)oldWindowCenter / (double)oldSize));
			parentCanvas.centerWindow(newWindowCenter);
		}
	}

