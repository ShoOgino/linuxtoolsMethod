	public boolean isSelectedElementsValidLttngTraces() {
		boolean returnedValue = true;
		
		// We don't want to test until something is selected
		if ( selectionGroup.getCheckedElementCount() > 0 ) {
			
			// We don't want to revalidate each time, only want a new directory is selected
			if ( ! selectedSourceDirectory.equals(getSourceDirectory().getAbsolutePath().toString()) )
			{
				try {
					if ( isPathLttngTrace( getSourceDirectory().getAbsolutePath() ) == false ) {
						returnedValue = false;
						selectedSourceDirectory = "";
						
						String errMessage[] = { "Couldn't get LTTng version number for the path : " }; 
						errMessage = extendErrorMessage(errMessage, getSourceDirectory().getAbsolutePath() );
						errMessage = extendErrorMessage(errMessage, "");
		    			errMessage = extendErrorMessage(errMessage, "Verify that the directory is a valid LTTng trace directory.");
		    			errMessage = extendErrorMessage(errMessage, "Make sure the top directory is the trace itself and not any of its parent.");
		    			showVersionErrorPopup(errMessage);
		    			selectionGroup.setAllSelections(false);
					}
					else {
						selectedSourceDirectory = getSourceDirectory().getAbsolutePath();
						
						if ( isContainerSet == false ) {
							isContainerSet = true;
							
							if ( ! getDestination().toString().equals( getInitialContainerString() + "/" + getTraceDirectory() )  ) {
								// *** HACK ***
						    	// Force a sane destination to avoid imported files to end up in the root of the "Traces/" directory
						    	setContainerFieldValue(getInitialContainerString() + "/" + getTraceDirectory());
							}
						}
					}
		    	}
		    	catch (LttngException e) {
		    		String[] errorMessages = e.toString().split("\n");
		    		String exceptionMessage[] = { "Version check failed for the path : ", this.getTracepath(), "", "Returned error was :" }; 
		    		
		    		for ( int pos=0; pos<errorMessages.length; pos++) {
		    			exceptionMessage = extendErrorMessage(exceptionMessage, errorMessages[pos]);
		    		}
		    		
		    		showVersionErrorPopup(exceptionMessage);
		    		selectionGroup.setAllSelections(false);
		    		returnedValue = false;
		    	}
			}
		}
		isContainerSet = false;
		
    	return returnedValue;
	}

