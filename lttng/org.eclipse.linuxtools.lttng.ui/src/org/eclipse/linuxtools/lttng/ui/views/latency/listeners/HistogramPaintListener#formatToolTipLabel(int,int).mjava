    /*
     * (non-Javadoc)
     * @see org.eclipse.linuxtools.lttng.ui.views.latency.listeners.AbstractPaintListener#formatToolTipLabel(int, int)
     */
    @Override
    public String formatToolTipLabel(int x, int y) {
        if (fScaledData != null) {

            double barWidth = getBarWidth();
            double height = getHeight();     // height of the plot area
            
            double zoomFactor = fViewer.getZoomFactor();

            int index = (int) ((x - fPadding - fVerticalAxisOffset - 1) / barWidth);

            double barHeight = 0.0;
            if (index >= 0 && index <= fScaledData.fLastBucket) {
                barHeight = (zoomFactor * height * (fScaledData.fData[index] - fYMin) / (fYMax - fYMin));
            }

            long fMouseY = (long) (height - (y - fPadding - fPaddingTop));

            // Verifying mouse pointer is over histogram bar
            if (index >= 0 && fScaledData.fLastBucket >= index && fMouseY >= 0 && fMouseY < barHeight && fMouseY < height && x >= (fVerticalAxisOffset + fPadding)) {

                fScaledData.fCurrentBucket = index;

                long startTime = fScaledData.getBucketStartTime(index);
                // negative values are possible if time values came into the model in decreasing order
                if (startTime < 0) {
                    startTime = 0;
                }
                long endTime = fScaledData.getBucketEndTime(index);
                int nbEvents = fScaledData.fData[index];

                StringBuffer buffer = new StringBuffer();
                buffer.append("Latency Range in s = ["); //$NON-NLS-1$
                buffer.append(HistogramUtils.nanosecondsToString(startTime));
                buffer.append(","); //$NON-NLS-1$
                buffer.append(HistogramUtils.nanosecondsToString(endTime));
                buffer.append("]\n"); //$NON-NLS-1$
                buffer.append("Latency count = "); //$NON-NLS-1$
                buffer.append(nbEvents);
                return buffer.toString();
            }
        }
        return ""; //$NON-NLS-1$
    }

