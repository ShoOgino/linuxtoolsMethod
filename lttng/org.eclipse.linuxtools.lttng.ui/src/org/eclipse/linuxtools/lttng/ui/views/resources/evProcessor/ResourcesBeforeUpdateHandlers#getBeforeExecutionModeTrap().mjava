	/**
	 * <p>
	 * Handles: LTT_EVENT_TRAP_ENTRY, LTT_EVENT_TRAP_EXIT,
	 * LTT_EVENT_PAGE_FAULT_ENTRY, LTT_EVENT_PAGE_FAULT_EXIT,
	 * LTT_EVENT_PAGE_FAULT_NOSEM_ENTRY, LTT_EVENT_PAGE_FAULT_NOSEM_EXIT
	 * </p>
	 * Replace C function named "before_execmode_hook_trap" in eventhooks.c
	 * <p>
	 * Fields: LTT_FIELD_TRAP_ID
	 * </p>
	 * 
	 * @return
	 */
	final ILttngEventProcessor getBeforeExecutionModeTrap() {
		AbsResourcesTRangeUpdate handler = new AbsResourcesTRangeUpdate() {

			// @Override
			public boolean process(LttngEvent trcEvent, LttngTraceState traceSt) {

				Long trapId = null;

				// According to Ltt, we should not draw anything if the channel
				// is the kernel one
				if (trcEvent.getChannelName().equals(
						Channels.LTT_CHANNEL_KERNEL)) {
					return false;
				} else {

					if ((trcEvent.getMarkerName()
							.equals(Events.LTT_EVENT_TRAP_ENTRY.getInName()))
							|| (trcEvent.getMarkerName()
									.equals(Events.LTT_EVENT_PAGE_FAULT_ENTRY
											.getInName()))
							|| (trcEvent.getMarkerName()
									.equals(Events.LTT_EVENT_PAGE_FAULT_NOSEM_ENTRY
											.getInName()))) {
						trapId = getAFieldLong(trcEvent, traceSt,
								Fields.LTT_FIELD_TRAP_ID);
					} else if ((trcEvent.getMarkerName()
							.equals(Events.LTT_EVENT_TRAP_EXIT.getInName()))
							|| (trcEvent.getMarkerName()
									.equals(Events.LTT_EVENT_PAGE_FAULT_EXIT
											.getInName()))
							|| (trcEvent.getMarkerName()
									.equals(Events.LTT_EVENT_PAGE_FAULT_NOSEM_EXIT
											.getInName()))) {
						long cpu = trcEvent.getCpuId();
						trapId = traceSt.getCpu_states().get(cpu)
								.peekFromTrapStack();

						if (trapId.equals(-1L)) {
							// Nothing to update
							return false;
						}
					} else {
						return false;
					}

					// Add the resource to the resource list
					// trapId is the resource id here
					TimeRangeEventResource localResource = resourcelist_obtain_trap(
							traceSt, trapId);

					// If the resource is missing in the list, add it
					if (localResource == null) {
						TmfTimeRange timeRange = traceSt.getContext()
								.getTraceTimeWindow();
						localResource = addLocalResource(timeRange
								.getStartTime().getValue(), timeRange
								.getEndTime().getValue(), traceSt.getTraceId(),
								ResourceTypes.TRAP, trapId, trcEvent
										.getTimestamp().getValue());
					}

					// Determine the trap state.
					String trapStateMode = localResource.getStateMode(traceSt);

					long stime = localResource.getNext_good_time();
					makeDraw(traceSt, stime,
							trcEvent.getTimestamp().getValue(), localResource,
							params, trapStateMode);

					// Call the globalProcessBeforeExecmode() after, as
					// it is needed by all
					// getBeforeExecmode*SOMETHING*()
					globalProcessBeforeExecmode(trcEvent, traceSt);

				}

				return false;
			}
		};

		return handler;
	}

