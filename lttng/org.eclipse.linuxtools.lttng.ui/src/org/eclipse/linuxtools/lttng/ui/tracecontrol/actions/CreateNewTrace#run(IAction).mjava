    /*
     * (non-Javadoc)
     * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)
     */
    @Override
    public void run(IAction action) {
        Shell shell = getShell();
        fSelectedTarget = getFirstSelectedTarget();
        TraceSubSystem subSystem = (TraceSubSystem)fSelectedTarget.getSubSystem();
        NewTraceDialog dialog = new NewTraceDialog(shell, subSystem, fSelectedTarget);
        
        final TraceConfig traceConfig = dialog.open();

        if (traceConfig != null) {
            
            fTraceName = traceConfig.getTraceName();

            try {
                final ILttControllerService service = subSystem.getControllerService();

                if (fSelectedTarget.isUst()) {
                	boolean ok = setupUstLocation(service, fSelectedTarget, traceConfig);
                	if (!ok) {
                		return;
                	}
                }
                
                // Create future task
                @SuppressWarnings("unused")
                Boolean success = new TCFTask<Boolean>() {
                    @Override
                    public void run() {

                        // Setup trace  using Lttng controller service proxy
                        service.setupTrace(fSelectedTarget.getParent().getName(), fSelectedTarget.getName(), traceConfig.getTraceName(), new ILttControllerService.DoneSetupTrace() {
                            
                            @Override
                            public void doneSetupTrace(IToken token, Exception error, Object str) {
                                if (error != null) {
                                    // Notify with error
                                    error(error);
                                    return;
                                }

                                // Notify about success
                                done(Boolean.valueOf(true));
                            }
                        });
                    }}.get(TraceControlConstants.DEFAULT_TCF_TASK_TIMEOUT, TimeUnit.SECONDS);

                    // Enable all channels by default
                    setChannelEnable(service, fSelectedTarget, traceConfig, TraceControlConstants.Lttng_Control_AllChannels, true);

            } catch (Exception e) {
                SystemMessageException sysExp;
                if (e instanceof SystemMessageException) {
                    sysExp = (SystemMessageException)e;
                } else {
                    sysExp = new SystemMessageException(LTTngUiPlugin.getDefault().getMessage(e));    
                }
                SystemBasePlugin.logError(Messages.Lttng_Control_ErrorNewTrace + " (" +  //$NON-NLS-1$
                        Messages.Lttng_Resource_Trace + ": "  + traceConfig.getTraceName() + ")", sysExp); //$NON-NLS-1$ //$NON-NLS-2$

                return;
            }

            TraceResource trace = new TraceResource(fSelectedTarget.getSubSystem());
            trace.setName(fTraceName);
            trace.setParent(fSelectedTarget);
            
            if (trace.isUst()) {
                // in UST the tracing is started after setupTrace!!
                trace.setTraceState(TraceState.STARTED);
            }
            else {
                trace.setTraceState(TraceState.CONFIGURED);
            }
            
            trace.setTraceConfig(traceConfig);
            fSelectedTarget.addTrace(trace);

            ISystemRegistry registry = SystemStartHere.getSystemRegistry();
            registry.fireRemoteResourceChangeEvent(ISystemRemoteChangeEvents.SYSTEM_REMOTE_RESOURCE_CREATED, trace, fSelectedTarget, subSystem, null);
        }
    }

