    /**
     * Function used to warn that the selection window changed.<p>
     * This might be called because the window moved or because its size changed.<p>
     * 
     * We will update the different control related to the selection window.
     */
    public void windowChangedNotification() {
    	
    	if ( lastUsedExperiment != null ) {
    		// If a request is ongoing, try to stop it
    		if ( selectedWindowRequest.isCompleted() == false ) {
    			selectedWindowRequest.cancel();
    		}
    		
    		// Get the latest window information
    		selectedWindowTime = fullExperimentCanvas.getCurrentWindow().getTimestampCenter();
    		selectedWindowTimerange = fullExperimentCanvas.getCurrentWindow().getWindowTimeWidth();
    		
    		// If the current event time is outside the new window, change the current event
    		//		The new current event will be the one closest to the center of the new window
    		if ( isGivenTimestampInSelectedWindow(currentEventTime) == false ) {
    			currentEventChangeNotification( selectedWindowTime );
    		}
    		
    		// Tell the framework that the timerange (time window) changed
    		currentTimerangeChangeNotification();
    		
    		// Perform a new request to read data about the new window
    		performSelectedWindowEventsRequest(lastUsedExperiment);
    	}
    }

