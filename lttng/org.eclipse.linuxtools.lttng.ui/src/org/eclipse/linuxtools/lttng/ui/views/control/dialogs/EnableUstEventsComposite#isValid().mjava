    /**
    * Validates the kernel composite input data.
    * @return true if configured data is valid and can be retrieved.
    */
    public boolean isValid() {
        
        fIsTracepoints = fTracepointsActivateButton.getSelection();
        fIsWildcard = fWildcardActivateButton.getSelection();
        fIsLogLevel = fLogLevelActivateButton.getSelection();
        
        fIsAllTracepoints = fTracepointsViewer.getChecked(fProviderGroup);

        Set<String> set = new HashSet<String>();
        Object[] checkedElements = fTracepointsViewer.getCheckedElements();
        fSelectedEvents = new ArrayList<String>();
        for (int i = 0; i < checkedElements.length; i++) {
            ITraceControlComponent component = (ITraceControlComponent)checkedElements[i];
            if (!set.contains(component.getName()) && (component instanceof BaseEventComponent)) {
                set.add(component.getName());
                fSelectedEvents.add(component.getName());
            }
        }

        if (fLogLevelButton.getSelection()) {
            fLogLevelType = LogLevelType.LOGLEVEL;
        } else if (fLogLevelOnlyButton.getSelection()) {
            fLogLevelType = LogLevelType.LOGLEVEL_ONLY;
        } else {
            fLogLevelType = LogLevelType.LOGLEVEL_NONE;
        }

        // initialize log level event name string
        fLogLevelEventName = null;
        String temp = fLogLevelEventNameText.getText();
        if (!temp.matches("^[\\s]{0,}$") && !temp.matches("^[a-zA-Z0-9\\-\\_]{1,}$")) { //$NON-NLS-1$ //$NON-NLS-2$
            MessageDialog.openError(getShell(),
                    Messages.TraceControl_EnableEventsDialogTitle,
                    Messages.TraceControl_InvalidLogLevelEventNameError + " (" + temp + ") \n");  //$NON-NLS-1$ //$NON-NLS-2$

            return false;
        }

        if(!temp.matches("\\s*")) { //$NON-NLS-1$
          fLogLevelEventName = temp;
        }

        // initialize log level event name string
        fWildcard = null;
        temp = fWildcardText.getText();
        if (!temp.matches("^[\\s]{0,}$") && !temp.matches("^[a-zA-Z0-9\\-\\_\\*]{1,}$")) { //$NON-NLS-1$ //$NON-NLS-2$
            MessageDialog.openError(getShell(),
                    Messages.TraceControl_EnableEventsDialogTitle,
                    Messages.TraceControl_InvalidWildcardError + " (" + temp + ") \n");  //$NON-NLS-1$ //$NON-NLS-2$

            return false;
        }
        
        if(!temp.matches("\\s*")) { //$NON-NLS-1$
            fWildcard = temp;
        }
        
        // validation successful -> call super.okPressed()
        return true;
    }

