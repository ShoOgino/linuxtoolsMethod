    /*
     * (non-Javadoc)
     * @see org.eclipse.rse.ui.view.AbstractSystemViewAdapter#testAttribute(java.lang.Object, java.lang.String, java.lang.String)
     */
    @SuppressWarnings("nls")
    @Override
    public boolean testAttribute(Object target, String name, String value) {
        if(target instanceof TraceResource) {
            TraceResource trace = (TraceResource) target;
            if (name.equals("canConfigure") && value.equals("yes")) {
                if (trace.getTraceState() != TraceState.STOPPED) {
                    return true;
                }
            }
            else if (name.equals("canStart") && value.equals("yes")) {
                if (trace.getTraceState() == TraceState.CONFIGURED|| trace.getTraceState() == TraceState.PAUSED) {
                    return true;
                }
            }
            else if (name.equals("canPause") && value.equals("yes")) {
                if (trace.getTraceState() == TraceState.STARTED) {
                    return true;
                }
            }
            else if (name.equals("canStop") && value.equals("yes")) {
                if (trace.getTraceState() == TraceState.CREATED || trace.getTraceState() == TraceState.PAUSED || trace.getTraceState() == TraceState.CONFIGURED) {
                    return true;
                }
            }
            else if (name.equals("canBrowse") && value.equals("yes")) {
                if ((trace.getTraceConfig() != null) && trace.getTraceConfig().isNetworkTrace() && (trace.getTraceState() == TraceState.STOPPED)) {
                    return true;
                }
            }
            else if (name.equals("canDelete") && value.equals("yes")) {
                if (trace.getTraceState() == TraceState.STOPPED) {
                    return true;
                }
            }
            else if (name.equals("canImport") && value.equals("yes")) {
                if (trace.getTraceState() == TraceState.STOPPED) {
                    return true;
                }
            }
        }
        return super.testAttribute(target, name, value);
    }

