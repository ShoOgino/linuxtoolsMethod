	// ========================================================================
	// Methods
	// ========================================================================
	/*
	 * (non-Javadoc)
	 * 
	 * @seeorg.eclipse.linuxtools.lttng.state.IStateDataRequestListener#
	 * processingStarted(org.eclipse.linuxtools.lttng.state.StateDataRequest)
	 */
	@TmfSignalHandler
	public synchronized void processingStarted(RequestStartedSignal signal) {
		StateDataRequest request = signal.getRequest();
		if (request != null) {
			// update queue with the id of the current request.
			reqState.requestStarted(request);
			// if there was no new request then this one is still on
			// prepare for the reception of new data

			waitCursor(true);

			StateManager smanager = request.getStateManager();
			// Clear the children on the Processes related to this
			// manager.
			// Leave the GUI in charge of the updated data.
			String traceId = smanager.getEventLog().getName();

			// indicate if the data model needs to be cleared e.g. a new
			// experiment is being selected
			boolean clearData = request.isclearDataInd();
			// no new time range for zoom orders
			TmfTimeRange trange = null;
			if (clearData) {
				// Time Range will be used to filter out events which are
				// not visible in one pixel
				trange = StateManagerFactory.getExperimentManager()
						.getExperimentTimeRange();
			}

			// Indicate if current data needs to be cleared and if so
			// specify the new experiment time range that applies
			ModelUpdatePrep(traceId, clearData, trange);
		}
	}

