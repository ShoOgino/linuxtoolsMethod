	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * org.eclipse.linuxtools.lttng.ui.views.common.AbsTimeUpdateView#displayModel
	 * (org.eclipse.linuxtools.tmf.ui.viewers.timeAnalysis.model.
	 * ITmfTimeAnalysisEntry[], long, long, boolean, long, long,
	 * java.lang.Object)
	 */
	@Override
	public void displayModel(final ITmfTimeAnalysisEntry[] items, final long startBoundTime,
			final long endBoundTime, final boolean updateTimeBounds, final long startVisibleWindow,
			final long endVisibleWindow, final Object source) {
		
		// Return if disposed
		if ((tsfviewer == null) || (tsfviewer.getControl().isDisposed())) return;
		
		Display display = tsfviewer.getControl().getDisplay();
		display.asyncExec(new Runnable() {
			@Override
			public void run() {
				if ((tsfviewer != null) && (!tsfviewer.getControl().isDisposed())) {
					tsfviewer.display(items, startBoundTime, endBoundTime, updateTimeBounds);
					// validate visible boundaries
					if (startVisibleWindow > -1 && endVisibleWindow > -1) {
						tsfviewer.setSelectVisTimeWindow(startVisibleWindow, endVisibleWindow, source);
					}
					tsfviewer.resizeControls();
				}
			}
		});
	}

