	/**
	 * Function called when the mouse scroll button is used.<p>
	 * Start a "ScrollListener" that will wait for more scroll clicks as they are asynchonous.
	 * After a certain delay, the parent canvas will get notified.   
	 * 
	 * @param event  The generated mouse event when the mouse scroll was spinned.
	 */
	@Override
	public void mouseScrolled(MouseEvent event) {
		
		// Start a scrollListener if none exist yet and start its thread
		// Otherwise, we will just notify the one that is currenly alive...
		// Badly timed event could happen while the thread is dying but we can live with loss scroll events, I believe. 
		if ( mouseScrollListener == null ) {
			mouseScrollListener = new DelayedMouseScroll(this, HistogramConstant.FULL_WAIT_MS_TIME_BETWEEN_MOUSE_SCROLL, HistogramConstant.INTERVAL_WAIT_MS_TIME_BETWEEN_POLL );
			mouseScrollListener.start();
		}
		
		// *** NOTE ***
		// We need to refer to the "count" to know if the scroll is done backward or forward.
		// Positive count mean it is done backward (from the wall in the direction of the hand)
		// Negative count mean it is done backward (from the hand in the direction of the wall)
		if ( event.count > 0) {
			mouseScrollListener.incrementMouseScroll();
		}
		else {
			mouseScrollListener.decrementMouseScroll();
		}
	}

