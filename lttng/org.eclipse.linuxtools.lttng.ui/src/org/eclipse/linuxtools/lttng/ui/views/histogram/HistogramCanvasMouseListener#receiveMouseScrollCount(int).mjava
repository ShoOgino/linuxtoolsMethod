	/**
	 * Function that will be called at the end of the "wait time" for scroll events.<p>
	 * This will calculate the correct zoom time and call the canvas to resize its selection window.
	 * 
	 * @param nbMouseScroll
	 */
	public void receiveMouseScrollCount(int nbMouseScroll) {
		mouseScrollListener = null;
		
		long ajustedTime = 0;
		
		// If we received Negative scroll event, ZoomOut by ZOOM_OUT_FACTOR * the number of scroll events received.
		if ( nbMouseScroll < 0 ) {
			ajustedTime = (long)((double)parentCanvas.getSelectedWindowSize() * HistogramConstant.ZOOM_OUT_FACTOR);
			ajustedTime = ajustedTime * Math.abs(nbMouseScroll);
			ajustedTime = parentCanvas.getSelectedWindowSize() + ajustedTime;
		}
		// If we received Positive scroll event, ZoomIn by ZOOM_IN_FACTOR * the number of scroll events received.
		else {
			ajustedTime = (long)((double)parentCanvas.getSelectedWindowSize() * HistogramConstant.ZOOM_IN_FACTOR);
			ajustedTime = ajustedTime * Math.abs(nbMouseScroll);
			ajustedTime = parentCanvas.getSelectedWindowSize() - ajustedTime;
		}
		
		// Resize the canvas selection window  
		parentCanvas.resizeWindowByAbsoluteTime(ajustedTime);
	}

