	/**
	 * <p>
	 * Handles: LTT_EVENT_SCHED_SCHEDULE
	 * </p>
	 * <p>
	 * Fields: LTT_FIELD_PREV_PID, LTT_FIELD_NEXT_PID, LTT_FIELD_PREV_STATE
	 * </p>
	 * 
	 * @return
	 */
	final ILttngEventProcessor getAfterHandler() {
		AbstractStatsEventHandler handler = new StatsModeChangeHandler(null) {
			int sched_hash = StateStrings.Events.LTT_EVENT_SCHED_SCHEDULE.getInName().hashCode();
			public boolean process(LttngEvent event, LttngTraceState traceState) {
				// Step the event counter for any after event
				stepCount(event, traceState);

				int eventNameHash = event.getMarkerName().hashCode();
				// specific processing for after sched schedule
				if (sched_hash == eventNameHash
						&& event.getMarkerName().equals(StateStrings.Events.LTT_EVENT_SCHED_SCHEDULE.getInName())) {
					return super.process(event, traceState);
				}

				return false;
			}
		};

		return handler;
	}

