    /**
     * Computes the timestamp of the bucket at [offset]
     * 
     * @param offset offset from the left on the histogram
     * @return the start timestamp of the corresponding bucket
     */
    public synchronized long getTimestamp(int offset) {
        assert offset > 0 && offset < fScaledData.fWidth;
        try {
            return fDataModel.getStartTime() + fScaledData.fBucketDuration * offset;
        } catch (Exception e) {
            return 0; // TODO: Fix that racing condition (NPE)
        }
    }

