    /* (non-Javadoc)
     * @see org.eclipse.linuxtools.tmf.ui.viewers.timeAnalysis.TmfTimeAnalysisProvider#getEventHoverToolTipInfo(org.eclipse.linuxtools.tmf.ui.viewers.timeAnalysis.model.ITimeEvent)
     */
    @Override
    public Map<String, String> getEventHoverToolTipInfo(ITimeEvent revent) {
	Map<String, String> toolTipEventMsgs = new HashMap<String, String>();
	// if the selected resource is a Process, add the Process type to the
	// tool tip
	if (revent instanceof TimeRangeComponent) {
	    ITimeRangeComponent parent = ((TimeRangeComponent) revent).getEventParent();

	    // if the event start time is unknown, indicate it to the user
	    String extraInfo = "\n" + Messages.TimeRangeViewerProvider_BadRangeExtraInfo; //$NON-NLS-1$
	    long eventStart = revent.getTime();
	    if (eventStart < fviewParameters.getStartTime()) {
		toolTipEventMsgs.put(Messages.TimeRangeViewerProvider_StartTime, Messages.TimeRangeViewerProvider_UndefinedStartTime + extraInfo);
		// avoid repeated details
		extraInfo = ""; //$NON-NLS-1$
	    }

	    long eventEnd = revent.getTime() + revent.getDuration();
	    if (eventEnd > fviewParameters.getEndTime()) {
		toolTipEventMsgs.put(Messages.TimeRangeViewerProvider_EndTime, Messages.TimeRangeViewerProvider_UndefinedEndTime + extraInfo);
	    }

	    if (parent != null && parent instanceof TimeRangeEventProcess) {
		TimeRangeEventProcess localProcess = (TimeRangeEventProcess) parent;
		toolTipEventMsgs.put(Messages.TimeRangeViewerProvider_ProcessType, localProcess.getProcessType());
	    }
	}

	return toolTipEventMsgs;
    }

