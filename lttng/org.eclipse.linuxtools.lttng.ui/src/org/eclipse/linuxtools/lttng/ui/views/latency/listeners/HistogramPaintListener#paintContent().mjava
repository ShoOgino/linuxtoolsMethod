    /*
     * (non-Javadoc)
     * @see org.eclipse.linuxtools.lttng.ui.views.latency.listeners.AbstractPaintListener#paintContent()
     */
    @Override
    public void paintContent() {
        double zoomFactor = fViewer.getZoomFactor();

        // Calculate the vertical axis factor and see if it has changed
        double tmpDelta = fDelta;
        fDelta = 0;
        if (Long.toString(fYMax / (long) zoomFactor).length() > MAX_CHAR_VERTICAL_DISPLAY) {
            fDelta = Long.toString(fYMax / (long) zoomFactor).length() - MAX_CHAR_VERTICAL_DISPLAY;
        }
        if (tmpDelta != fDelta) {
            fViewer.clearBackground();
        }

        paintBackground();
        paintVerticalAxis();
        paintHorizontalAxis();

        fAxisImage.setForeground(fDataColor);
        fAxisImage.setBackground(fDataColor);

        // height of the plot area
        double height = getHeight();

        int barWidth = getBarWidth();
        
        // axisImage_.setBackground(backgroundColor_);
        // 1.a Iterate over the points, from 0 to nbPoints
        // 1.b Find the max counter value
        // 2. Assign the max value to the "yMax_" class attribute
        // 3. Draw the histogram bars using "axisImage_.fillRectangle(...)"
        boolean oneBarIsClipped = false;

        for (int i = 0; i < fScaledData.fData.length; i++) {
            double pointY = fScaledData.fData[i];

            // in pixels
            double x = fPadding + i * barWidth + fVerticalAxisOffset + 1;

            if (i == fScaledData.fData.length - 1)
                x -= 1.0;
            double barHeight = zoomFactor * ((double)(pointY - fYMin) / (double)(fYMax - fYMin)) * height;

            if (barHeight > height + 1) {
                barHeight = height;
                oneBarIsClipped = true;

                fAxisImage.drawImage(fWarningImage, 5, 3);
            }

            // Only draw the bars that have a barHeight of more than 1 pixel
            if (barHeight > 0) {
                double y = fPadding + fPaddingTop + height - barHeight;
                fAxisImage.setBackground(fDataColor);

                if (barHeight > height - 1) {
                    fAxisImage.fillRectangle((int) x, (int) y, (int) barWidth, (int) (barHeight + 1));
                } else {
                    fAxisImage.fillRectangle((int) x, (int) y, (int) barWidth, (int) (barHeight + 2));
                }
            }
        }

        if (oneBarIsClipped)
            fBarIsClipped = true;
        else
            fBarIsClipped = false;
    }

