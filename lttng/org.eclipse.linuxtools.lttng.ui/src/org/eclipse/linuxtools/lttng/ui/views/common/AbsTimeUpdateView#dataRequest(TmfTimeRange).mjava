	/**
	 * Evaluates the need to either send a new data request or queue the request
	 * till next available opportunity. One element queue to keep the latest
	 * request only.
	 * 
	 * @param trange
	 */
	public synchronized void dataRequest(TmfTimeRange trange) {
		if (trange != null) {
			// cancelPendingRequests();
			StateDataRequest currentRequest = reqState.getCurrentRequest();
			// If a request is ongoing queue the new request
			if (reqState.getState().equals(RequestState.BUSY)) {
				reqState.setQueued(trange);
				currentRequest = reqState.getCurrentRequest();
				if (currentRequest != null) {
					currentRequest.cancel();
				}
			} else {
				// Set the state to busy
				reqState.setState(DataRequestState.RequestState.BUSY);
				waitCursor(true);
				// no request is ongoing, proceed with request
				StateManagerFactory.getExperimentManager()
						.readExperimentTimeWindow(trange, viewID, this);

			}
		}
	}

