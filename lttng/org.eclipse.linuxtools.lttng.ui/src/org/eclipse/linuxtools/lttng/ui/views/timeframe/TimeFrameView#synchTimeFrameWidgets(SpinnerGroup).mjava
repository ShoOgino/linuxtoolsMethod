    /**
     * One of the spinners has been updated. Synchronize the other widgets.
     */
    public void synchTimeFrameWidgets(SpinnerGroup trigger) {
		boolean trangeUpdated = false;

        // Collect the data
        TmfTimestamp startTime   = fStartGroup.getCurrentTime();
        TmfTimestamp endTime     = fEndGroup.getCurrentTime();
        TmfTimestamp timeRange   = fRangeGroup.getCurrentTime();
        TmfTimestamp currentTime = fCurrentGroup.getCurrentTime();

        // If startTime was set beyond endTime, adjust endTime and interval
        if (trigger == fStartGroup) {
            if (startTime.compareTo(endTime, false) > 0) {
                endTime = startTime;
				trangeUpdated = true;
            }
        }

        // If endTime was set beyond startTime, adjust startTime and interval
        if (trigger == fEndGroup) {
            if (endTime.compareTo(startTime, false) < 0) {
                startTime = endTime;
				trangeUpdated = true;
            }
        }

        // If timeRange was set, adjust endTime
        if (trigger == fRangeGroup) {
            long start = startTime.getValue();
            long span  = timeRange.getValue();
            TmfTimestamp ts = new TmfTimestamp(start + span, startTime.getScale(), 0);
            if (ts.compareTo(fTraceEndTime, false) > 0) {
                ts = fTraceEndTime.synchronize(fTraceEndTime.getValue(), startTime.getScale());
            }
            endTime = ts;
			trangeUpdated = true;
        }

        // Compute the new time range
        TmfTimeRange subrange = new TmfTimeRange(startTime, endTime);
        byte scale = startTime.getScale();
        TmfTimestamp interval = new TmfTimestamp(startTime.getAdjustment(endTime, scale), scale, 0);

        // Update the spinner groups
        fStartGroup.setContent(fTraceTimeRange, startTime);
        fEndGroup.setContent(fTraceTimeRange, endTime);
        fRangeGroup.setContent(fTraceSpan, interval);
        fCurrentGroup.setContent(subrange, currentTime);

        updateSlider(subrange, currentTime);
		// Notify other views, only if the update originated from this view
		if (fupdateExternalListeners) {
			if (!fCurrentTime.equals(currentTime)) {
				fCurrentTime = currentTime;
				broadcast(new TmfTimeSynchSignal(this, currentTime));
			}

			// Notify the views if the time range has been impacted
			if (trangeUpdated) {
				TmfTimeRange trange = new TmfTimeRange(startTime, endTime);
				broadcast(new TmfRangeSynchSignal(this, trange, currentTime));
			}
        }
    }

