	/**
	 * @param experiment
	 */
	public void selectExperiment(LTTngExperimentNode experiment) {
    	String expId = experiment.getName();
        if (fSelectedExperiment != null) {
//        	System.out.println(fSelectedExperiment.getName() + ": nbEvents=" + fSelectedExperiment.getNbEvents() + 
//        			", nbReads=" + ((LTTngTrace) fSelectedExperiment.getTraces()[0]).nbEventsRead);
        	fSelectedExperiment.dispose();
        }
        try {
        	LTTngTraceNode[] traceEntries = experiment.getTraces();
        	int nbTraces = traceEntries.length;
        	ITmfTrace[] traces = new ITmfTrace[nbTraces];
        	for (int i = 0; i < nbTraces; i++) {
        		IResource res = traceEntries[i].getFolder();
        		String location = res.getLocation().toOSString();
        		IProject project = res.getProject().getProject();
                String traceLibPath = TraceHelper.getTraceLibDirFromProject(project);
        		ITmfTrace trace = new LTTngTrace(location, traceLibPath, waitForCompletion, false);
                traces[i] = trace;
        	}
            fSelectedExperiment = new LTTngExperiment<LttngEvent>(LttngEvent.class, expId, traces);
            TmfExperiment.setCurrentExperiment(fSelectedExperiment);
            
			// Make sure the lttng-core, experiment selection context is ready
			// for an event request from any view
			StateManagerFactory.getExperimentManager().experimentSelected_prep(
					(TmfExperiment<LttngEvent>) fSelectedExperiment);

//			System.out.println(System.currentTimeMillis() + ": Experiment selected");
            broadcast(new TmfExperimentSelectedSignal<LttngEvent>(this, fSelectedExperiment));
        } catch (FileNotFoundException e) {
            return;
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

