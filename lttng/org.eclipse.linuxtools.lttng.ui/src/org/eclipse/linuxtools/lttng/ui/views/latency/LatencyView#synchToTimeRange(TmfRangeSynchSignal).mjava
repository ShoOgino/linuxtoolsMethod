    /**
     * Method called when synchronization is active and that the user changed the current time range.

     * The models will be updated with the new time range.
     * 
     * @param signal
     *            Signal received from the framework. Contain the new time range.
     */
    @TmfSignalHandler
    public void synchToTimeRange(TmfRangeSynchSignal signal) {
        if (signal.getSource() != this) {
            // Erase the graph views
            fGraphViewer.clear();
            fHistogramViewer.clear();
            
            TmfTimestamp startTime = signal.getCurrentRange().getStartTime();
            TmfTimestamp endTime = signal.getCurrentRange().getEndTime();
            fTimeRange = new TmfTimeRange(startTime, endTime);

            fController.refreshModels(fExperiment, fTimeRange);
        }
    }

