	/**
	 * <p>
	 * Handles: LTT_EVENT_EXEC
	 * </p>
	 * Replace C function "after_fs_exec_hook" in eventhooks.c
	 * 
	 * @return
	 */
	final IEventProcessing getProcessExecHandler() {
	    AbsFlowTRangeUpdate handler = new AbsFlowTRangeUpdate() {

			private Events eventType = Events.LTT_EVENT_EXEC;

			// @Override
			public boolean process(LttngEvent trcEvent, LttngTraceState traceSt) {
			    
			    LttngProcessState process = traceSt.getRunning_process().get(trcEvent.getCpuId());

                if ( process != null ) {
                    
                    // *** VERIFY ***
                    // This make no sense in our java implementation and should be ignored, right?
                    //
                    //   if(likely(process_list->current_hash_data[trace_num][cpu] != NULL) ){
                    //        hashed_process_data = process_list->current_hash_data[trace_num][cpu];
                    //   }
                    TimeRangeEventProcess localProcess = procContainer.findProcess(process.getPid(), process.getCreation_time().getValue(), traceSt.getTraceId());
                    
                    if ( localProcess == null ) {
                        if ( (process.getPid() == 0) || (process.getPid() != process.getPpid()) ) {
                            // *** VERIFY ***
                            // What am I supposed to do with that?
                            //   Drawing_t *drawing = control_flow_data->drawing;
                            //   ProcessInfo *process_info;
                            //   gtk_widget_set_size_request(drawing->drawing_area, -1, pl_height);
                            //   gtk_widget_queue_draw(drawing->drawing_area);
                            TmfTimeRange timeRange = traceSt.getInputDataRef().getTraceTimeWindow();
                            localProcess = addLocalProcess(process, timeRange.getStartTime().getValue(), timeRange.getEndTime().getValue(), traceSt.getTraceId());
                        }
                        else {
                            TraceDebug.debug("process pid is not 0 or pid equals ppid! (getProcessExecHandler)");
                        }
                    }
                    else {
                        // If we found the process, the name might be missing. Let's add it here.
                        localProcess.setName(process.getName());
                        
                        // *** FIXME ***
                        // I feel like we are missing something here... what are we suppose to do with that?
                        //   process_list->current_hash_data[trace_num][process->cpu] = hashed_process_data;
                    }
                }
                else {
                    TraceDebug.debug("process is null! (getProcessExecHandler)");
                }
                
				return false;
			}

			// @Override
			public Events getEventHandleType() {
				return eventType;
			}
		};
		return handler;
	}

