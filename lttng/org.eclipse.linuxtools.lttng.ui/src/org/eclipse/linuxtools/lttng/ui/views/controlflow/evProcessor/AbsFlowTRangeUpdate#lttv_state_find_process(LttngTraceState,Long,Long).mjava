	/**
	 * Find the process matching the given pid and cpu
	 * 
	 * If cpu is 0, the cpu value is not matched and the selection is based on
	 * pid value only
	 * 
	 * @param ts
	 * @param cpu
	 * @param pid
	 * @return
	 */
	protected LttngProcessState lttv_state_find_process(LttngTraceState ts,
			Long cpu, Long pid) {
		// Define the return value
		LttngProcessState process = null;

		// Obtain the list of available processes
		List<LttngProcessState> processList = ts.getProcesses();

		// find the process matching pid and cpu,
		// TODO: This may need to be improved since the pid may be re-used and
		// the creation time may need to be considered
		for (LttngProcessState dprocess : processList) {
			if (dprocess.getPid().equals(pid)) {
				if (dprocess.getCpu().equals(cpu) || cpu.longValue() == 0L) {
					return dprocess;
				}
			}
		}

		return process;
	}

