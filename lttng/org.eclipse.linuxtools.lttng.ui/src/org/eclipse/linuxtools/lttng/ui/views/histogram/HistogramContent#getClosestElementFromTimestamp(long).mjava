	/**
	 * Return the closest element to a timestamp (long) given.<p>
	 * Note : startTime and intervalTime need to be set correctly here, otherwise unexpected element might be returned.<p>
	 * <p>
	 * NOTE : This <b>ALWAYS</b> return an element; 
	 * 		If calculation lead outside the table, the first or the last element will be returned.  
	 * 
	 * @param timestamp  The timestamp (in nanosecond, as long) of the element we are looking for (startTime < timestamp < endTime) 
	 * 
	 * @return	The <i>closest</i> element found.
	 */
	public HistogramElement getClosestElementFromTimestamp(long timestamp) {
		int index = (int)Math.round( (double)(timestamp - startTime)/(double)elementsTimeInterval );
		
		// If we are out of bound, return the closest border (first or last element)
		if ( index < 0) {
			index = 0;
		}
		else if ( index >= elementTable.length ) {
			index = (elementTable.length -1);
		}
		
		return elementTable[index];
	}

