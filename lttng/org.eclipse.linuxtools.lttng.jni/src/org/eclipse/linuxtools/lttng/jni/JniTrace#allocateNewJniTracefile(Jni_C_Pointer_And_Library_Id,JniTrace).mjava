    /**
     * Function place holder to allocate a new JniTracefile.<p>
     * 
     * JniTracefile constructor is non overridable so we need another overridable function to return the correct version of JniTracefile.<br>
     * Effect of this function should be the same (allocate a fresh new JniTracefile)<br>
     * <br>
     * <b>!! Override this with you version specific implementation.</b><br>
     * 
     * @param newPtr			The pointer of an already opened LttTracefile C Structure
     * @param newParentTrace	The JniTrace parent of this tracefile.
     * 
     * @return					The newly allocated JniTracefile of the correct version
     * 
     * @throws JniException		The construction (allocation) failed.
     * 
     * @see org.eclipse.linuxtools.lttng.jni.JniTracefile
     * @see org.eclipse.linuxtools.lttng.jni.common.Jni_C_Pointer_And_Library_Id
     * @see org.eclipse.linuxtools.lttng.jni.JniTrace
     */
    public abstract JniTracefile allocateNewJniTracefile(Jni_C_Pointer_And_Library_Id newPtr, JniTrace newParentTrace) throws JniException;

