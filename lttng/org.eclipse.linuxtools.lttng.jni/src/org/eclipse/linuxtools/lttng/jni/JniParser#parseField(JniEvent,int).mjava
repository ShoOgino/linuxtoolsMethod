    /**
     * Method to parse a single field identified by its id.<p>
     *
     * All parsing will be done on C side as we need LTT functions.
     *
     * @param   eventToParse    The jni event we want to parse.
     * @param   fieldPosition   The position (or id) of the field we want to parse
     *
     * @return                  An Object that contain the JniEvent payload parsed by the C, or null, if if was impossible to parse (i.e., wrong position)
     *
     * @see org.eclipse.linuxtools.lttng.jni.JniEvent
     */
    static public Object parseField(JniEvent eventToParse, int fieldPosition) {

        // Sanity check
        if ( (fieldPosition < 0) || ( fieldPosition >= eventToParse.requestEventMarker().getMarkerFieldsArrayList().size() ) ){
            return null;
        }

        JniMarkerField tmpField = eventToParse.requestEventMarker().getMarkerFieldsArrayList().get(fieldPosition);

        // Call the parsing function in C. The result will be put in parsedData object
        ltt_getParsedData(eventToParse.getEventPtr().getLibraryId(), parsedData, eventToParse.getEventPtr().getPointer(), tmpField.getMarkerFieldPtr().getPointer());

        return parsedData.getData();
    }

