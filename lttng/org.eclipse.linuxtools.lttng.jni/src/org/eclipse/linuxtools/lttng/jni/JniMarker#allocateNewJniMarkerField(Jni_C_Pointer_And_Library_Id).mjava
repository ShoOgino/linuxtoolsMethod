	/**
     * Function place holder to allocate a new JniMarkerField.<p>
     * <br>
     * JniMarkerField constructor is non overridable so we need another overridable function to return the correct version of JniMarkerField.<br>
     * Effect of this function should be the same (allocate a fresh new JniMarkerField).<br>
     * <br>
     * <b>!! Override this with you version specific implementation.</b><br>
     * 
     * @param newMarkerFieldPtr		The pointer and library id of an already opened marker_field C Structure
     * 
     * @return						The newly allocated JniMarkerField of the correct version
     * 
     * @throws JniException			The construction (allocation) failed.
     * 
     * @see org.eclipse.linuxtools.lttng.jni.common.Jni_C_Pointer_And_Library_Id
     * @see org.eclipse.linuxtools.lttng.jni.JniMarkerField
     */
    public abstract JniMarkerField allocateNewJniMarkerField(Jni_C_Pointer_And_Library_Id newMarkerFieldPtr) throws JniException;

