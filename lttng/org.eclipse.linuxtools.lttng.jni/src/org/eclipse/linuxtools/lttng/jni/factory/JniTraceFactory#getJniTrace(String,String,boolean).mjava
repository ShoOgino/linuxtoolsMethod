	/**
	 * Factory function : return the correct version of the JniTrace from a given path<p>
	 * NOTE : The correct Lttv library (liblttvtraceread-X.Y.so) need to be installed and accessible otherwise this
	 * 		  function will return an Exception. 
	 * 
	 * If the path is wrong or if the library is not supported (bad version or missing library) an Exception will be throwed. 
	 * 
	 * @param path			Path of the trace we want to open
	 * @param traceLibPath  Directory to the trace libraries
	 * @param show_debug	Should JniTrace print debug or not?
	 * 
	 * @return				a newly allocated JniTrace of the correct version
	 * 
	 * @throws JniException
	 */
	static public JniTrace getJniTrace(String path, String traceLibPath, boolean show_debug) throws JniException {
		
        try {
            JniTraceVersion traceVersion = new JniTraceVersion(path, traceLibPath);
            JniTrace trace = null;
            if (traceVersion.getVersionAsString().equals(TraceVersion_v2_6)) {
                trace = new JniTrace_v2_6(path, show_debug);
            } else if (traceVersion.getVersionAsString().equals(
                    TraceVersion_v2_5)) {
                trace = new JniTrace_v2_5(path, show_debug);
            } else if (traceVersion.getVersionAsString().equals(
                    TraceVersion_v2_3)) {
                trace = new JniTrace_v2_3(path, show_debug);
            }
            if (trace != null) {
                if (traceLibPath != null)
                    trace.setTraceLibPath(traceLibPath);
                trace.openTrace(path);
                return trace;
            } else {
                String errMsg = "\nERROR : Unrecognized/unsupported trace version." + //$NON-NLS-1$
                        "\nLibrary reported a trace version "
                        + traceVersion.getVersionAsString()
                        + "." + //$NON-NLS-1$ //$NON-NLS-2$
                        "\nMake sure you installed the Lttv library that support this version (look for liblttvtraceread-"
                        + traceVersion.getVersionAsString() + ".so).\n"; //$NON-NLS-1$ //$NON-NLS-2$
                throw new JniException(errMsg);
            }

        } catch (JniTraceVersionException e) {
            String errMsg = "\nERROR : Call to JniTraceVersion() failed." + //$NON-NLS-1$
                    "\nThis usually means that the library (liblttvtraceread_loader.so) could not be found."
                    + //$NON-NLS-1$
                    "\nMake sure the LTTv library is installed and that your LD_LIBRARY_PATH is set correctly (see help for more details)\n."; //$NON-NLS-1$

            throw new JniException(errMsg);
        }
    }

