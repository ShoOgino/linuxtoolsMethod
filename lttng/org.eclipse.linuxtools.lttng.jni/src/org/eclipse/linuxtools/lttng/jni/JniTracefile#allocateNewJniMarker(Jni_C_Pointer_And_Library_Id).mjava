	/**
     * Function place holder to allocate a new JniMarker.<p>
     * <br>
     * JniMarker constructor is non overridable so we need another overridable function to return the correct version of JniMarker.<br>
     * Effect of this function should be the same (allocate a fresh new JniMarker).<br>
     * <br>
     * <b>!! Override this with you version specific implementation.</b><br>
     * 
     * @param newMarkerPtr			The pointer of an already opened marker_info C Structure
     * 
     * @return						The newly allocated JniMarker of the correct version
     * 
     * @throws JniException			The construction (allocation) failed.
     * 
     * @see org.eclipse.linuxtools.lttng.jni.JniMarker
     * @see org.eclipse.linuxtools.lttng.jni.common.Jni_C_Pointer_And_Library_Id
     */
	public abstract JniMarker allocateNewJniMarker(Jni_C_Pointer_And_Library_Id newMarkerPtr) throws JniException;

