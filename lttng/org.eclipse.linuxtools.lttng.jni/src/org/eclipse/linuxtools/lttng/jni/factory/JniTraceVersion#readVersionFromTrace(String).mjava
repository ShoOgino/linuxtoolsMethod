	/**
	 * Read the version from a given tracepath.<p>
	 * MajorVersion and MinorVersion should be set after a successful execution of this function.<br>
	 * 
	 * This function throw if the library can not be loaded,if the path is wrong or if something go wrong during the read.
	 * 
	 */
	public void readVersionFromTrace(String newTracepath) throws JniTraceVersionException {
		
		// Verify that the tracepath isn't obliviously wrong (null or empty)
		if ( (newTracepath == null) || (newTracepath.equals("") ) ) {
			throw new JniTraceVersionException("ERROR : Tracepath is null or empty! (readVersionNumber)");
		}
		else {
			// Otherwise set the path in case it was changed
			tracepath = newTracepath;
		}
		
		try {
			// Load the C library here. 
			// If LD_LIBRARY_PATH is not set correctly this will raise a java.lang.UnsatisfiedLinkError
			System.loadLibrary("lttvtraceread_loader");
			
			// Assuming the C library loaded correctly, call the JNI here.
			ltt_getTraceVersion(tracepath);
			
			// We can now assume that the trace was read
			wasTraceRead = true;
		}
		// The library was unable to load -> Lttv not installed or bad version of it? 
		catch (java.lang.UnsatisfiedLinkError e) {
			throw new JniTraceVersionException("\nERROR : Could not get trace version. Is the library missing?" +
											   "\nMake sure your \"LD_LIBRARY_PATH\" is setted correctly (readVersionNumber)\n");
		}
		// Something else failed -> Possibly a bad tracepath was given 
		catch (Exception e) {
			throw new JniTraceVersionException("\nERROR : Call to ltt_getTraceVersion failed. (readVersionNumber)\n");
		}
	}

