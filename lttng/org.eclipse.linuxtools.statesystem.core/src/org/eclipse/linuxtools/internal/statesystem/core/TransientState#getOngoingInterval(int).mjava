    /**
     * Convenience method to return the "ongoing" value for a given attribute as
     * a dummy interval whose end time = the current latest time.
     *
     * @param quark
     *            The quark of the attribute
     * @return An interval representing the current state (but whose end time is
     *         the current one, and probably not the "final" one)
     * @throws AttributeNotFoundException
     *             If the quark is invalid
     */
    public ITmfStateInterval getOngoingInterval(int quark) throws AttributeNotFoundException {
        rwl.readLock().lock();
        try {
            checkValidAttribute(quark);
            return new TmfStateInterval(ongoingStateStartTimes.get(quark), latestTime,
                    quark, ongoingStateInfo.get(quark));
        } finally {
            rwl.readLock().unlock();
        }
    }

