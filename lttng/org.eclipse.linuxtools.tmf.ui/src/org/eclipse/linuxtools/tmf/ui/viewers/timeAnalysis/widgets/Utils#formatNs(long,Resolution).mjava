	/**
	 * Obtains the remainder fraction on unit Seconds of the entered value in
	 * nanoseconds. e.g. input: 1241207054171080214 ns The number of fraction
	 * seconds can be obtained by removing the last 9 digits: 1241207054 the
	 * fractional portion of seconds, expressed in ns is: 171080214
	 * 
	 * @param time
	 * @param res
	 * @return
	 */
	public static String formatNs(long time, Resolution res) {
		StringBuffer temp = new StringBuffer();
		boolean neg = time < 0;
		if (neg) {
			time = -time;
		}

		// The following approach could be used although performance
		// decreases in half.
		// String strVal = String.format("%09d", time);
		// String tmp = strVal.substring(strVal.length() - 9);

		// number of segments to be included
		int segments = 0;
		switch (res) {
		case MILLISEC:
			segments = 1;
			break;
		case MICROSEC:
			segments = 2;
			break;
		case NANOSEC:
			segments = 3;
			break;
		default:
			break;
		}

		long ns = time;
		ns %= 1000000000;
		if (ns < 10) {
			temp.append("00000000");
		} else if (ns < 100) {
			temp.append("0000000");
		} else if (ns < 1000) {
			temp.append("000000");
		} else if (ns < 10000) {
			temp.append("00000");
		} else if (ns < 100000) {
			temp.append("0000");
		} else if (ns < 1000000) {
			temp.append("000");
		} else if (ns < 10000000) {
			temp.append("00");
		} else if (ns < 100000000) {
			temp.append("0");
		}
		temp.append(ns);

		StringBuffer str = new StringBuffer();
		if (segments > 0) {
			// append ms
			str.append(temp.substring(0, 3));
		}
		if (segments > 1) {
			// append Micro secs
			str.append(".");
			str.append(temp.substring(3, 6));
		}
		if (segments > 2) {
			// append Nano seconds
			str.append(".");
			str.append(temp.substring(6));
		}

		return str.toString();
	}

