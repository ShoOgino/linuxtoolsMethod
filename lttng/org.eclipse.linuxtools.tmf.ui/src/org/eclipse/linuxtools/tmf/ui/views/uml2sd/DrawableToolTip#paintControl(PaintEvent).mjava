    @Override
    public void paintControl(PaintEvent event) {
        fMessage = Messages.SequenceDiagram_Delta + " " +  fCurrentValue.toString(); //$NON-NLS-1$
        Point size = event.gc.textExtent(fMessage);
        if (size.x < fScaleLength) {
            size.x = fScaleLength;
        }
        event.gc.drawText(fMessage, fHorMargin, fVertMargin, true);
        event.gc.drawLine(fHorMargin, fVertMargin + fTextScaleMargin + size.y, fHorMargin + fScaleLength, fVertMargin + fTextScaleMargin + size.y);

        int step = fScaleLength / NUMBER_STEPS;

        ITmfTimestamp minMaxdelta = fMinMaxRange.getEndTime().getDelta(fMinMaxRange.getStartTime());
        double gr = (minMaxdelta.getValue()) / (double) NUMBER_STEPS;

        ITmfTimestamp delta = fCurrentValue.getDelta(fMinMaxRange.getStartTime());
        long absDelta = Math.abs(delta.getValue());

        int colIndex = 0;
        if (gr != 0) {
            colIndex = Math.round((float) (absDelta / gr));
            if (colIndex > fColors.length) {
                colIndex = fColors.length;
            } else if (colIndex <= 1) {
                colIndex = 1;
            }
        } else {
            colIndex = 1;
        }

        for (int i = 0; i <= NUMBER_STEPS; i++) {
            if (i < NUMBER_STEPS) {
                event.gc.setBackground(fColors[i]);
            }
            if ((i < colIndex) && (i < NUMBER_STEPS)) {
                event.gc.fillRectangle(fHorMargin + i * step, fVertMargin + fTextScaleMargin + size.y - 5, step, RECTANGLE_HEIGHT);
            }
            if (i == 0) {
                event.gc.drawText(Messages.SequenceDiagram_Min, fHorMargin, size.y + 2 * fVertMargin + fTextScaleMargin, true);
            }
            if (i == 0) {
                int len = event.gc.textExtent(Messages.SequenceDiagram_Max).x;
                event.gc.drawText(Messages.SequenceDiagram_Max, fHorMargin + fScaleLength - len + 1, size.y + 2 * fVertMargin + fTextScaleMargin, true);
            }
            int lineWidth = DEFAULT_LINE_WIDTH;
            if ((i == 0) || (i == NUMBER_STEPS)) {
                lineWidth = BORDER_LINE_WIDTH;
            }
            event.gc.drawLine(fHorMargin + i * step, fVertMargin + fTextScaleMargin + size.y - lineWidth / 2, fHorMargin + i * step, fVertMargin + fTextScaleMargin + size.y + lineWidth / 2);
        }
        fToolTipShell.setSize(size.x + 2 * fHorMargin + 2, 2 * size.y + 3 * fVertMargin + fTextScaleMargin);
    }

