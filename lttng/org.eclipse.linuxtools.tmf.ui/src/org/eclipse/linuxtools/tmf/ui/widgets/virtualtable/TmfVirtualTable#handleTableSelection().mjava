	/**
	 * Update the rows and selected item
	 */
	private void handleTableSelection() {
		int selectedRow = fTable.getSelectionIndices()[0];
		if (selectedRow < fFrozenRowCount) {
			fSelectedEventRank = selectedRow;
		} else {
			fSelectedEventRank = fTableTopEventRank + selectedRow;
		}

		/*
		 * Feature in Windows. When a partially visible table item is selected,
		 * after ~500 ms the top index is changed to ensure the selected item is
		 * fully visible. This leaves a blank space at the bottom of the virtual
		 * table. The workaround is to update the top event rank, refresh the
		 * table and reset the top index to 0 after a sufficient delay.
		 */
		if (selectedRow >= fFullyVisibleRows) {
			final Display display = fTable.getDisplay();
			Thread thread = new Thread("Top index check") { //$NON-NLS-1$
				@Override
				public void run() {
					try {
						Thread.sleep(600);
					} catch (InterruptedException e) {
					}
					display.asyncExec(new Runnable() {
						@Override
                        public void run() {
							if (fTable.isDisposed()) return;
							int topIndex = fTable.getTopIndex();
							if (topIndex != 0) {
								fTableTopEventRank += topIndex;
								refreshTable();
								fSlider.setSelection(fTableTopEventRank);
								fTable.setTopIndex(0);
							}
						}
					});
				}
			};
			thread.start();
		}
	}

