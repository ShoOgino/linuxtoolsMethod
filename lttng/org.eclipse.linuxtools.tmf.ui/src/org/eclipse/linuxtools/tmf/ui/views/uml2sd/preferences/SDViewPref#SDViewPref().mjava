    /**
     * Builds the Sequence Diagram preference handler: - Define the preference default values. - Load the currently used
     * preferences setting
     * 
     */
    protected SDViewPref() {
        prefStore = TmfUiPlugin.getDefault().getPreferenceStore();

        prefStore.setDefault(PREF_LINK_FONT, true);
        prefStore.setDefault(PREF_EXCLUDE_EXTERNAL_TIME, true);
        prefStore.setDefault(PREF_LIFELINE_WIDTH, 200);
        prefStore.setDefault(PREF_USE_GRADIENT, true);
        prefStore.setDefault(PREF_TOOLTIP, true);

        fontPref = new Hashtable<String, IFont>();
        foreColorPref = new Hashtable<String, IColor>();
        backColorPref = new Hashtable<String, IColor>();
        textColorPref = new Hashtable<String, IColor>();

        for (int i = 0; i < fontList.length; i++) {
            if (fontList[i].equals(PREF_FRAME_NAME)) {
                FontData[] data = Display.getDefault().getSystemFont().getFontData();
                data[0].setStyle(SWT.BOLD);
                PreferenceConverter.setDefault(prefStore, fontList[i], data[0]);
                PreferenceConverter.setDefault(prefStore, fontList[i] + TEMP_TAG, data[0]);
            } else {
                PreferenceConverter.setDefault(prefStore, fontList[i], Display.getDefault().getSystemFont().getFontData());
                PreferenceConverter.setDefault(prefStore, fontList[i] + TEMP_TAG, Display.getDefault().getSystemFont().getFontData());
            }
        }

        for (int i = 0; i < prefBackColorList.length; i++) {
            IColor color;
            if ((prefBackColorList[i].equals(PREF_EXEC)) || prefBackColorList[i].equals(PREF_FRAME_NAME))
                color = new ColorImpl(Display.getDefault(), 201, 222, 233);
            else if (prefBackColorList[i].equals(PREF_LIFELINE))
                color = new ColorImpl(Display.getDefault(), 220, 220, 220);
            else if (prefBackColorList[i].equals(PREF_LIFELINE_HEADER))
                color = new ColorImpl(Display.getDefault(), 245, 244, 244);
            else
                color = new ColorImpl(Display.getDefault(), 255, 255, 255);
            PreferenceConverter.setDefault(prefStore, prefBackColorList[i] + BACK_COLOR_POSTFIX, ((Color) color.getColor()).getRGB());
            PreferenceConverter.setDefault(prefStore, prefBackColorList[i] + BACK_COLOR_POSTFIX + TEMP_TAG, ((Color) color.getColor()).getRGB());
            color.dispose();
        }

        for (int i = 0; i < prefForeColorList.length; i++) {
            IColor color;
            if (prefForeColorList[i].equals(PREF_LIFELINE))
                color = new ColorImpl(Display.getDefault(), 129, 129, 129);
            else if (prefForeColorList[i].equals(PREF_FRAME_NAME))
                color = new ColorImpl(Display.getDefault(), 81, 153, 200);
            else if (prefForeColorList[i].equals(PREF_LIFELINE_HEADER))
                color = new ColorImpl(Display.getDefault(), 129, 127, 137);
            else
                color = new ColorImpl(Display.getDefault(), 134, 176, 212);
            PreferenceConverter.setDefault(prefStore, prefForeColorList[i] + FORE_COLOR_POSTFIX, ((Color) color.getColor()).getRGB());
            PreferenceConverter.setDefault(prefStore, prefForeColorList[i] + FORE_COLOR_POSTFIX + TEMP_TAG, ((Color) color.getColor()).getRGB());
            color.dispose();
        }

        for (int i = 0; i < prefTextColorList.length; i++) {
            IColor color;
            if (prefTextColorList[i].equals(PREF_LIFELINE))
                color = new ColorImpl(Display.getDefault(), 129, 129, 129);
            else if (prefTextColorList[i].equals(PREF_FRAME_NAME))
                color = new ColorImpl(Display.getDefault(), 0, 0, 0);
            else if (prefTextColorList[i].equals(PREF_LIFELINE_HEADER))
                color = new ColorImpl(Display.getDefault(), 129, 127, 137);
            else
                color = new ColorImpl(Display.getDefault(), 134, 176, 212);
            PreferenceConverter.setDefault(prefStore, prefTextColorList[i] + TEXT_COLOR_POSTFIX, ((Color) color.getColor()).getRGB());
            PreferenceConverter.setDefault(prefStore, prefTextColorList[i] + TEXT_COLOR_POSTFIX + TEMP_TAG, ((Color) color.getColor()).getRGB());
            color.dispose();
        }

        IColor color = new ColorImpl(Display.getDefault(), 218, 232, 238);
        PreferenceConverter.setDefault(prefStore, PREF_TIME_COMP, ((Color) color.getColor()).getRGB());
        color.dispose();

        buildFontsAndColors();

        prefStore.addPropertyChangeListener(this);
    }

