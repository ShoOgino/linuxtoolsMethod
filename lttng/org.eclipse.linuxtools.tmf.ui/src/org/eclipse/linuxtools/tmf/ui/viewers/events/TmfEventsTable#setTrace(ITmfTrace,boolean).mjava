    /**
     * @param trace
     * @param disposeOnClose true if the trace should be disposed when the table is disposed
     */
    public void setTrace(ITmfTrace trace, boolean disposeOnClose) {
        if (fTrace != null && fDisposeOnClose) {
            fTrace.dispose();
        }
        fTrace = trace;
	    fPackDone = false;
	    fHeaderState = HeaderState.SEARCH;
	    fSelectedRank = 0;
        fDisposeOnClose = disposeOnClose;
        
        // Perform the updates on the UI thread
        fTable.getDisplay().syncExec(new Runnable() {
            @Override
			public void run() {
                fTable.removeAll();
                // Clear filters if present
                fTable.setData(Key.FILTER_OBJ, null);
                fTable.setData(Key.FILTER_TXT, null);
                fTable.setData(Key.SEARCH_OBJ, null);
                fTable.setData(Key.SEARCH_TXT, null);
                for (TableColumn column : fTable.getColumns()) {
                	column.setData(Key.FILTER_OBJ, null);
                	column.setData(Key.FILTER_TXT, null);
                	column.setData(Key.SEARCH_OBJ, null);
                	column.setData(Key.SEARCH_TXT, null);
                }
                fCacheStartIndex = fCacheEndIndex = 0; // Clear the cache
                if (fTrace != null) {
                    if (!fTable.isDisposed() && fTrace != null) {
                        fTable.setItemCount((int) fTrace.getNbEvents() + 1); // +1 for header row
                    }
                    fRawViewer.setTrace(fTrace);
                }
            }
        });
    }

