    public void drawState(TimeGraphColorScheme colors, int colorIdx,
            Rectangle rect, GC gc, boolean selected, boolean rectBound,
            boolean timeSelected) {

        boolean visible = rect.width == 0 ? false : true;
        int colorIdx1 = colorIdx;

        timeSelected = timeSelected && selected;
        if (timeSelected) {
            colorIdx1 = colorIdx + TimeGraphColorScheme.STATES_SEL0 - TimeGraphColorScheme.STATES0;
        }

        if (visible) {
            // fill all rect area
            if (rect.isEmpty())
                return;

            gc.setBackground(colors.getColor(colorIdx1));
            gc.fillRectangle(rect);
            colorIdx1 = colorIdx + TimeGraphColorScheme.STATES_BORDER0 - TimeGraphColorScheme.STATES0;
            gc.setForeground(colors.getColor(colorIdx1));

            // draw bounds
            if (!timeSelected) {
                if (rectBound && rect.width >= 3) {
                    gc.drawRectangle(rect.x, rect.y, rect.width - 1, rect.height - 1);
                } else {
                    // Draw the top and bottom borders i.e. no side borders
                    // top
                    gc.drawLine(rect.x, rect.y, rect.x + rect.width - 1, rect.y);
                    // bottom
                    gc.drawLine(rect.x, rect.y + rect.height - 1, rect.x + rect.width - 1, rect.y + rect.height - 1);
                }
            }
        } else {
            // selected rectangle area is not visible but can be represented
            // with a broken vertical line of specified width.
            int width = 2;
            rect.width = width;
            // check if height is greater than zero.
            if (rect.isEmpty())
                return;
            // colorIdx1 = TraceColorScheme.BLACK;
            gc.setForeground(colors.getColor(colorIdx));
            int s = gc.getLineStyle();
            int w = gc.getLineWidth();
            gc.setLineStyle(SWT.LINE_DOT);
            gc.setLineWidth(width);
            // Trace.debug("Reactangle not visible, drawing vertical line with: "
            // + rect.x + "," + rect.y + "," + rect.x + "," + rect.y
            // + rect.height);
            gc.drawLine(rect.x, rect.y, rect.x, rect.y + rect.height);
            gc.setLineStyle(s);
            gc.setLineWidth(w);
        }
    }

