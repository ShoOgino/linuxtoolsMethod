        /**
         *  apply overview support on a control. Replace existing corner_widget 
         */
        public void useControl(Control control) {
            final Point pos = control.getLocation();
            control.addMouseListener(new MouseListener() {
                @Override
                public void mouseDoubleClick(MouseEvent e) {
                }

                @Override
                public void mouseDown(MouseEvent e) {
                    overviewAppear(e.x, e.y);
                }

                @Override
                public void mouseUp(MouseEvent e) {
                    overviewDisappear();
                }
            });

            control.addFocusListener(new FocusListener() {

                @Override
                public void focusGained(FocusEvent e) {
                }

                @Override
                public void focusLost(FocusEvent e) {
                    if (overviewing())
                        overviewDisappear(false);
                }

            });
            control.addKeyListener(new KeyListener() {

                @Override
                public void keyPressed(KeyEvent event) {
                    if (event.keyCode == 32 && !overviewing()) {
                        overviewAppear(pos.x, pos.y);
                    } else if (event.keyCode == 32) {
                        overviewDisappear();
                    }
                    if (event.keyCode == SWT.ARROW_DOWN) {
                        overviewMove(0, 1, event);
                    }

                    if (event.keyCode == SWT.ARROW_UP) {
                        overviewMove(0, -1, event);
                    }

                    if (event.keyCode == SWT.ARROW_RIGHT) {
                        overviewMove(1, 0, event);
                    }

                    if (event.keyCode == SWT.ARROW_LEFT) {
                        overviewMove(-1, 0, event);
                    }
                }

                @Override
                public void keyReleased(KeyEvent e) {
                }
            });
            control.addMouseMoveListener(new MouseMoveListener() {
                private int refReshCount  = 0;
                @Override
                public void mouseMove(MouseEvent event) {
                    if (overviewing()) {
                        // Slow down the refresh
                        if (refReshCount % 4 == 0) {
                            overviewMove(event);
                        }
                        refReshCount++;
                    }
                }
            });
        }

