    /**
     * Create a TreeColumn with this column's data and adds it to a {@link Tree}
     *
     * @param treeViewer
     *            The {@link TreeViewer} object to add the column to
     * @return The newly created {@link TreeViewerColumn}
     */
    @NonNull
    public TreeViewerColumn createColumn(final TreeViewer treeViewer) {
        final TreeViewerColumn column = new TreeViewerColumn(treeViewer, getAlignment());
        final TmfTreeColumnData columnData = this;
        column.getColumn().setText(getText());
        if (getWidth() != -1) {
            column.getColumn().setWidth(getWidth());
        }
        if (getTooltip() != null) {
            column.getColumn().setToolTipText(getTooltip());
        }
        column.getColumn().setMoveable(isMovable());

        /* Add the comparator to sort the column */
        if (getComparator() != null) {
            column.getColumn().addSelectionListener(new SelectionAdapter() {

                @Override
                public void widgetSelected(SelectionEvent e) {

                    if (treeViewer.getTree().getSortDirection() == SWT.UP || treeViewer.getTree().getSortColumn() != column.getColumn()) {
                        /*
                         * Puts the descendant order if the old order was up
                         * or if the selected column has changed.
                         */
                        treeViewer.setComparator(columnData.getComparator());
                        treeViewer.getTree().setSortDirection(SWT.DOWN);
                    } else {
                        ViewerComparator reverseComparator;
                        /* Initializes the reverse comparator. */
                        reverseComparator = new ViewerComparator() {
                            @Override
                            public int compare(Viewer viewer, Object e1, Object
                                    e2) {
                                return -1 * columnData.getComparator().compare(viewer, e1, e2);
                            }
                        };

                        /*
                         * Puts the ascendant ordering if the selected
                         * column hasn't changed.
                         */
                        treeViewer.setComparator(reverseComparator);
                        treeViewer.getTree().setSortDirection(SWT.UP);
                    }
                    treeViewer.getTree().setSortColumn(column.getColumn());
                }
            });
        }

        return column;
    }

