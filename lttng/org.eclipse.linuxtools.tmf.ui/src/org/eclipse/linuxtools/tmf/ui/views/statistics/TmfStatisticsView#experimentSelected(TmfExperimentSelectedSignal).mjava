    /**
     * Handler called when an experiment is selected. Checks if the experiment
     * has changed and requests the selected experiment if it has not yet been
     * cached.
     *
     * @param signal
     *            Contains the information about the selection.
     */
    @TmfSignalHandler
    public void experimentSelected(TmfExperimentSelectedSignal signal) {
        if (signal != null) {
            // Does not reload the same trace if already opened
            if (fExperiment == null
                    || signal.getExperiment().toString().compareTo(fExperiment.toString()) != 0) {
                /*
                 * Dispose the current viewer and adapt the new one to the trace
                 * type of the experiment selected
                 */
                if (fStatsViewer != null) {
                    fStatsViewer.dispose();
                }
                // Update the current experiment
                fExperiment = signal.getExperiment();
                fStatsViewer = createStatisticsViewer();
                fParent.layout();

                String experimentName = fExperiment.getName();
                String treeID = fStatsViewer.getTreeID(experimentName);

                setInput(treeID, fExperiment.getTraces());

                if (fRequestData) {
                    requestData(fExperiment, fExperiment.getTimeRange());
                    fRequestData = false;
                }
            }
        }
    }

