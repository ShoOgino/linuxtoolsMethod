    private void createTooltipShell(Shell parent) {
        final Display display = parent.getDisplay();
        if (_tipShell != null && ! _tipShell.isDisposed()) {
            _tipShell.dispose();
        }
        _tipShell = new Shell(parent, SWT.ON_TOP | SWT.TOOL);
        GridLayout gridLayout = new GridLayout();
        gridLayout.numColumns = 2;
        gridLayout.marginWidth = 2;
        gridLayout.marginHeight = 2;
        _tipShell.setLayout(gridLayout);
        _tipShell.setBackground(display.getSystemColor(SWT.COLOR_INFO_BACKGROUND));

        _tipTable = new Table(_tipShell, SWT.NONE);
        new TableColumn(_tipTable, SWT.NONE);
        new TableColumn(_tipTable, SWT.NONE);
        _tipTable.setForeground(display
                .getSystemColor(SWT.COLOR_INFO_FOREGROUND));
        _tipTable.setBackground(display
                .getSystemColor(SWT.COLOR_INFO_BACKGROUND));
        _tipTable.setHeaderVisible(false);
        _tipTable.setLinesVisible(false);

        _tipTable.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseDown(MouseEvent e) {
                _tipShell.dispose();
            }
        });

        _tipTable.addMouseTrackListener(new MouseTrackAdapter() {
            @Override
            public void mouseExit(MouseEvent e) {
                _tipShell.dispose();
            }
        });

        _tipTable.addMouseMoveListener(new MouseMoveListener() {
            @Override
            public void mouseMove(MouseEvent e) {
                _tipShell.dispose();
            }
        });
    }

