    /**
     * Adds a trace to the experiment
     *
     * @param trace The trace element to add
     * @param refresh Flag for refreshing the project
     *
     * @since 3.1
     */
    public void addTrace(TmfTraceElement trace, boolean refresh) {
        /**
         * Create a link to the actual trace and set the trace type
         */
        IFolder experiment = getResource();
        IResource resource = trace.getResource();
        IPath location = resource.getLocation();
        IWorkspace workspace = ResourcesPlugin.getWorkspace();
        try {
            String traceTypeId = trace.getResource().getPersistentProperty(TmfCommonConstants.TRACETYPE);
            TraceTypeHelper traceType = TmfTraceType.getTraceType(traceTypeId);

            if (resource instanceof IFolder) {
                IFolder folder = experiment.getFolder(trace.getElementPath());
                TraceUtils.createFolder((IFolder) folder.getParent(), new NullProgressMonitor());
                IStatus result = workspace.validateLinkLocation(folder, location);
                if (result.isOK() || result.matches(IStatus.INFO | IStatus.WARNING)) {
                    folder.createLink(location, IResource.REPLACE, null);
                    if (traceType != null) {
                        TmfTraceTypeUIUtils.setTraceType(folder, traceType, refresh);
                    }

                } else {
                    Activator.getDefault().logError("Error creating link. Invalid trace location " + location); //$NON-NLS-1$
                }
            } else {
                IFile file = experiment.getFile(trace.getElementPath());
                TraceUtils.createFolder((IFolder) file.getParent(), new NullProgressMonitor());
                IStatus result = workspace.validateLinkLocation(file, location);
                if (result.isOK() || result.matches(IStatus.INFO | IStatus.WARNING)) {
                    file.createLink(location, IResource.REPLACE, null);
                    if (traceType != null) {
                        TmfTraceTypeUIUtils.setTraceType(file, traceType, refresh);
                    }
                } else {
                    Activator.getDefault().logError("Error creating link. Invalid trace location " + location); //$NON-NLS-1$
                }
            }
        } catch (CoreException e) {
            Activator.getDefault().logError("Error creating link to location " + location, e); //$NON-NLS-1$
        }

    }

