    private void createStatesGroup(Composite composite) {
        ScrolledComposite sc = new ScrolledComposite(composite, SWT.V_SCROLL|SWT.H_SCROLL);
        sc.setExpandHorizontal(true);
        sc.setExpandVertical(true);
        Group gs = new Group(sc, SWT.H_SCROLL);
        sc.setContent(gs);
        GridData gd = new GridData(SWT.FILL, SWT.FILL, true, true);
        sc.setLayoutData(gd);

        String stateTypeName = provider.getStateTypeName();
        StringBuffer buffer = new StringBuffer();
        if (!stateTypeName.isEmpty()) {
            buffer.append(stateTypeName);
            buffer.append(" "); //$NON-NLS-1$
        }
        buffer.append(Messages.TmfTimeLegend_StateTypeName);
        gs.setText(buffer.toString());

        GridLayout layout = new GridLayout();
        layout.numColumns = 2;
        layout.marginWidth = 20;
        layout.marginBottom = 10;
        gs.setLayout(layout);

        // Go through all the defined pairs of state color and state name and display them.
        StateItem[] stateItems = provider.getStateTable();
        for (int i = 0; i < stateItems.length; i++) {
            //Get the color related to the index
            RGB rgb = stateItems[i].getStateColor();

            //Get the given name, provided by the interface to the application
            String stateName = stateItems[i].getStateString();

            // draw color with name
            Bar bar = new Bar(gs, rgb);
            gd = new GridData();
            gd.widthHint = 40;
            gd.heightHint = 20;
            gd.verticalIndent = 8;
            bar.setLayoutData(gd);
            Label name = new Label(gs, SWT.NONE);
            name.setText(stateName);
            gd = new GridData();
            gd.horizontalIndent = 10;
            gd.verticalIndent = 8;
            name.setLayoutData(gd);
        }
        sc.setMinSize(gs.computeSize(SWT.DEFAULT, SWT.DEFAULT));
    }

