    private void createButtonBar() {
        Composite buttonBar = new Composite(container, SWT.NONE);
        GridLayout buttonBarLayout = new GridLayout(6, false);
        buttonBarLayout.marginHeight = 0;
        buttonBarLayout.marginWidth = 0;
        buttonBar.setLayout(buttonBarLayout);
        
        removeButton = new Button(buttonBar, SWT.PUSH);
        removeButton.setImage(deleteImage);
        removeButton.setToolTipText("Remove element");
        removeButton.addSelectionListener(new SelectionAdapter() {
        	@Override
            public void widgetSelected(SelectionEvent e) {
                if (treeViewer.getSelection().isEmpty() || selectedElement == null) return;
                removeElement();
                InputElement inputElement = (InputElement) ((IStructuredSelection) treeViewer.getSelection()).getFirstElement();
                if (inputElement == definition.rootInputElement) {
                    definition.rootInputElement = null;
                } else {
                    inputElement.parentElement.childElements.remove(inputElement);
                }
                treeViewer.refresh();
                validate();
                updatePreviews();
                removeButton.setEnabled(false);
                if (definition.rootInputElement == null) {
                    addChildButton.setEnabled(true);
                    addChildButton.setToolTipText("Add document element");
                } else {
                    addChildButton.setEnabled(false);
                }
                addNextButton.setEnabled(false);
                moveUpButton.setEnabled(false);
                moveDownButton.setEnabled(false);
            }
        });
        
        addChildButton = new Button(buttonBar, SWT.PUSH);
        addChildButton.setImage(addChildImage);
        addChildButton.setToolTipText("Add child element");
        addChildButton.addSelectionListener(new SelectionAdapter() {
        	@Override
            public void widgetSelected(SelectionEvent e) {
                InputElement inputElement = new InputElement("", false, CustomXmlTraceDefinition.TAG_IGNORE, 0, "", null);
                if (definition.rootInputElement == null) {
                    definition.rootInputElement = inputElement;
                    inputElement.elementName = getChildNameSuggestion(null);
                } else if (treeViewer.getSelection().isEmpty()) {
                    return;
                } else {
                    InputElement parentInputElement = (InputElement) ((IStructuredSelection) treeViewer.getSelection()).getFirstElement();
                    parentInputElement.addChild(inputElement);
                    inputElement.elementName = getChildNameSuggestion(parentInputElement);
                }
                treeViewer.refresh();
                treeViewer.setSelection(new StructuredSelection(inputElement), true);
            }
        });
        
        addNextButton = new Button(buttonBar, SWT.PUSH);
        addNextButton.setImage(addNextImage);
        addNextButton.setToolTipText("Add next element");
        addNextButton.addSelectionListener(new SelectionAdapter() {
        	@Override
            public void widgetSelected(SelectionEvent e) {
                InputElement inputElement = new InputElement("", false, CustomXmlTraceDefinition.TAG_IGNORE, 0, "", null);
                if (definition.rootInputElement == null) {
                    definition.rootInputElement = inputElement;
                    inputElement.elementName = getChildNameSuggestion(null);
                } else if (treeViewer.getSelection().isEmpty()) {
                    return;
                } else {
                    InputElement previousInputElement = (InputElement) ((IStructuredSelection) treeViewer.getSelection()).getFirstElement();
                    if (previousInputElement == definition.rootInputElement) {
                        return;
                    } else {
                        previousInputElement.addNext(inputElement);
                        inputElement.elementName = getChildNameSuggestion(inputElement.parentElement);
                    }
                }
                treeViewer.refresh();
                treeViewer.setSelection(new StructuredSelection(inputElement), true);
            }
        });
        
        feelingLuckyButton = new Button(buttonBar, SWT.PUSH);
        feelingLuckyButton.setImage(addManyImage);
        feelingLuckyButton.setToolTipText("Feeling lucky");
        feelingLuckyButton.addSelectionListener(new SelectionAdapter() {
        	@Override
            public void widgetSelected(SelectionEvent e) {
                InputElement inputElement = null;
                if (definition.rootInputElement == null) {
                    if (getChildNameSuggestion(null).length() != 0) {
                        inputElement = new InputElement(getChildNameSuggestion(null), false, CustomXmlTraceDefinition.TAG_IGNORE, 0, "", null);
                        definition.rootInputElement = inputElement;
                        feelingLucky(inputElement);
                    }
                } else if (treeViewer.getSelection().isEmpty()) {
                    return;
                } else {
                    inputElement = (InputElement) ((IStructuredSelection) treeViewer.getSelection()).getFirstElement();
                    feelingLucky(inputElement);
                }
                treeViewer.refresh();
                treeViewer.setSelection(new StructuredSelection(inputElement), true);
                treeViewer.expandToLevel(inputElement, TreeViewer.ALL_LEVELS);
            }
        });
        
        moveUpButton = new Button(buttonBar, SWT.PUSH);
        moveUpButton.setImage(moveUpImage);
        moveUpButton.setToolTipText("Move up");
        moveUpButton.addSelectionListener(new SelectionAdapter() {
        	@Override
            public void widgetSelected(SelectionEvent e) {
                if (treeViewer.getSelection().isEmpty()) return;
                InputElement inputElement = (InputElement) ((IStructuredSelection) treeViewer.getSelection()).getFirstElement();
                if (inputElement == definition.rootInputElement) {
                    return;
                } else {
                    inputElement.moveUp();
                }
                treeViewer.refresh();
                validate();
                updatePreviews();
            }
        });
        
        moveDownButton = new Button(buttonBar, SWT.PUSH);
        moveDownButton.setImage(moveDownImage);
        moveDownButton.setToolTipText("Move down");
        moveDownButton.addSelectionListener(new SelectionAdapter() {
        	@Override
            public void widgetSelected(SelectionEvent e) {
                if (treeViewer.getSelection().isEmpty()) return;
                InputElement inputElement = (InputElement) ((IStructuredSelection) treeViewer.getSelection()).getFirstElement();
                if (inputElement == definition.rootInputElement) {
                    return;
                } else {
                    inputElement.moveDown();
                }
                treeViewer.refresh();
                validate();
                updatePreviews();
            }
        });
    }

