    /**
     * Display the tooltip using the given text The tooltip will stay on screen until it is told otherwise
     * 
     * @param value the text to display
     */
    public void showToolTip(String value) {
        if ((value == null) || (value.equalsIgnoreCase("")))//$NON-NLS-1$
        {
            toolTipShell.setVisible(false);
            return;
        }

        text = value;
        int w = toolTipShell.getBounds().width;
        Point hr = Display.getDefault().getCursorLocation();
        int cursorH = 32;
        for (int i = 0; i < Display.getDefault().getCursorSizes().length; i++) {
            if (Display.getDefault().getCursorSizes()[i].y < cursorH)
                cursorH = Display.getDefault().getCursorSizes()[i].y;
        }
        if (hr.x + w > Display.getDefault().getBounds().width) {
            int tempX = (hr.x + w) - Display.getDefault().getBounds().width;
            if (tempX > Display.getDefault().getBounds().width)
                hr.x = 0;
            hr.x = hr.x - tempX;
        }
        textBox.setText(value);
        int charactersPerColumn = 100;
        GC gc = new GC(textBox);
        FontMetrics fm = gc.getFontMetrics();
        gc.dispose();
        int width = charactersPerColumn * fm.getAverageCharWidth();
        textBox.setSize(textBox.computeSize(width, textBox.getLineCount() * textBox.getLineHeight()));
        toolTipShell.setLocation(hr.x, hr.y + cursorH);
        toolTipShell.setSize(textBox.getSize());
        textBox.setVisible(true);
        toolTipShell.setVisible(true);

    }

