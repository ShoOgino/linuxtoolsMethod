    /**
     * Called when mouse is on contents area and mode.
     *
     * @param event
     */
    protected void contentsMouseMoveEvent(MouseEvent event) {
        if ((event.stateMask & SWT.BUTTON_MASK) != 0) {
            if (!fAutoScrollEnabled) {
                scrollBy(-(event.x - fMouseDownX), -(event.y - fMousDownY));
                return;
            }

            int sx = 0, sy = 0;

            int v_right = getContentsX() + getVisibleWidth();
            int v_bottom = getContentsY() + getVisibleHeight();

            // auto scroll... ?
            if (event.x < getContentsX()) {
                sx = (getContentsX() - event.x);
                fMouseDownX = getContentsX();
            } else if (event.x > v_right) {
                sx = -event.x + v_right;
                fMouseDownX = v_right;
            }
            if (event.y < getContentsY()) {
                sy = (getContentsY() - event.y);
                fMousDownY = getContentsY();
            } else if (event.y > v_bottom) {
                sy = -event.y + v_bottom;
                fMousDownY = v_bottom;
            }

            if (sx != 0 || sy != 0) {
                // start auto scroll...
                if (fAutoScroll == null) {
                    if (fAutoScrollTimer == null) {
                        fAutoScrollTimer = new Timer(true);
                    }
                    fAutoScroll = new AutoScroll(this, sx, sy);
                    fAutoScrollTimer.schedule(fAutoScroll, 0, fAutoScrollPeriod);
                } else {
                    fAutoScroll.deltaX = sx;
                    fAutoScroll.deltaY = sy;
                }
            } else {
                if (fAutoScroll != null) {
                    fAutoScroll.cancel();
                    fAutoScroll = null;
                }

                scrollBy(-(event.x - fMouseDownX), -(event.y - fMousDownY));
            }
        }
    }

