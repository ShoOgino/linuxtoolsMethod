    /**
     * Initializes the input for the tree viewer.
     */
    protected void initInput() {
        String treeID = getTreeID();
        TmfStatisticsTreeNode experimentTreeNode;
        if (TmfStatisticsTreeManager.containsTreeRoot(treeID)) {
            // The experiment root is already present
            experimentTreeNode = TmfStatisticsTreeManager.getStatTreeRoot(treeID);

            // Checks if the trace is already in the statistics tree.
            int numNodeTraces = experimentTreeNode.getNbChildren();

            int numTraces = 1;
            ITmfTrace[] trace = { fTrace };
            // For experiment, gets all the traces within it
            if (fTrace instanceof TmfExperiment) {
                TmfExperiment experiment = (TmfExperiment) fTrace;
                numTraces = experiment.getTraces().length;
                trace = experiment.getTraces();
            }

            if (numTraces == numNodeTraces) {
                boolean same = true;
                /*
                 * Checks if the experiment contains the same traces as when
                 * previously selected.
                 */
                for (int i = 0; i < numTraces; i++) {
                    String traceName = trace[i].getName();
                    if (!experimentTreeNode.containsChild(traceName)) {
                        same = false;
                        break;
                    }
                }

                if (same) {
                    // No need to reload data, all traces are already loaded
                    fTreeViewer.setInput(experimentTreeNode);
                    return;
                }
                // Clears the old content to start over
                experimentTreeNode.reset();
            }
        } else {
            // Creates a new tree
            experimentTreeNode = TmfStatisticsTreeManager.addStatsTreeRoot(treeID, getStatisticData());
        }

        // Sets the input to a clean data model
        fTreeViewer.setInput(experimentTreeNode);
        resetUpdateSynchronization();
    }

