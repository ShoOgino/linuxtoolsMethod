    /**
     * Get every children of a node, even if it doesn't have any registered
     * events, as opposed to getChildren
     *
     * @param path
     *            Path to the node.
     * @return Collection containing all the children.
     */
    public List<TmfStatisticsTreeNode> getAllChildren(String... path) {
        LinkedList<TmfStatisticsTreeNode> result = new LinkedList<TmfStatisticsTreeNode>();

        if (path.length % 2 == 0) { // if we are at a Category
            TmfStatisticsTreeNode current = null;
            for (String value : getKeys().get(path[path.length - 1])) {
                current = get(addToArray(path, value));
                if (current != null) {
                    result.add(current);
                }
            }
        } else if (path.length == 1) { // Special case.
            if (path.equals(ROOT)) {
                for (String value : getKeys().get(ROOT[0])) {
                    result.add(getOrCreate(value));
                }
            } else {
                // Get value under the root
                for (String value : getKeys().get(ROOT_NODE_KEY)) {
                    result.add(getOrCreate(addToArray(path, value)));
                }
            }
        } else {// If we are at a value
            for (String value : getKeys().get(mergeString(path[path.length - 2], NODE))) {
                // Search the parent name + NODE
                result.add(getOrCreate(addToArray(path, value)));
            }
        }
        return result;
    }

