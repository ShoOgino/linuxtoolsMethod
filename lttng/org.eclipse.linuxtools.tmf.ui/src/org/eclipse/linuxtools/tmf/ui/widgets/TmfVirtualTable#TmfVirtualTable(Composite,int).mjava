	/**
	 * @param parent
	 * @param style
	 */
	public TmfVirtualTable(Composite parent, int style) {
		super(parent, style & (~SWT.H_SCROLL) & (~SWT.V_SCROLL) & (~SWT.SINGLE) & (~SWT.FULL_SELECTION) & (~SWT.HIDE_SELECTION) & (~SWT.CHECK));

		// Create the controls
		createTable(style & (SWT.H_SCROLL | SWT.SINGLE | SWT.FULL_SELECTION | SWT.HIDE_SELECTION | SWT.CHECK));
		createSlider(style & SWT.V_SCROLL);
		
		// Prevent the slider from being traversed
		setTabList(new Control[] { fTable });

		// Set the layout
		GridLayout gridLayout = new GridLayout();
		gridLayout.numColumns = 2;
		gridLayout.horizontalSpacing = 0;
		gridLayout.verticalSpacing   = 0;
		gridLayout.marginWidth  = 0;
		gridLayout.marginHeight = 0;
		setLayout(gridLayout);
		
		GridData tableGridData = new GridData(SWT.FILL, SWT.FILL, true, true);
		fTable.setLayoutData(tableGridData);

		GridData sliderGridData = new GridData(SWT.FILL, SWT.FILL, false, true);
		fSlider.setLayoutData(sliderGridData);

		// Add the listeners
		fTable.addMouseWheelListener(new MouseWheelListener() {
			@Override
			public void mouseScrolled(MouseEvent event) {
				if (fTableItemCount <= fFullyVisibleRows) {
					return;
				}
				fTableTopEventRank -= event.count;
				if (fTableTopEventRank < 0) {
					fTableTopEventRank = 0;
				}
				int latestFirstRowOffset = fTableItemCount - fFullyVisibleRows;
				if (fTableTopEventRank > latestFirstRowOffset) {
					fTableTopEventRank = latestFirstRowOffset;
				}

				fSlider.setSelection(fTableTopEventRank);
				refreshTable();
			}
		});

		fTable.addListener(SWT.MouseWheel, new Listener() {
			// disable mouse scroll of horizontal scroll bar
			@Override
            public void handleEvent(Event event) {
				event.doit = false;
			}
		});

		fTable.addControlListener(new ControlAdapter() {
			@Override
			public void controlResized(ControlEvent event) {
				int tableHeight = Math.max(0, fTable.getClientArea().height - fTable.getHeaderHeight());
				fFullyVisibleRows = tableHeight / getItemHeight();
				if (fTableItemCount > 0) {
					fSlider.setThumb(Math.max(1, Math.min(fTableRows, fFullyVisibleRows)));
				}
			}
		});

		addControlListener(new ControlAdapter() {
			@Override
			public void controlResized(ControlEvent event) {
				resize();
			}
		});

		// And display
		refresh();
	}

