    @Override
    protected void contentsMouseMoveEvent(MouseEvent e) {
        fScrollToolTip.hideToolTip();
        fToolTip.hideToolTip();
        // super.contentsMouseMoveEvent(e);
        if (!(isFocusControl() || getViewControl().isFocusControl())) {
            Control[] child = getParent().getChildren();
            for (int i = 0; i < child.length; i++) {
                if ((child[i].isFocusControl()) && (!(child[i] instanceof ScrollView))) {
                    getViewControl().setFocus();
                    break;
                }
            }
        }
        setFocus(-1);

        if (((e.stateMask & SWT.BUTTON_MASK) != 0) && ((fDragAndDrop != null) || fIsDragAndDrop) && (fReorderMode || fCollapseProvider != null)) {
            fIsDragAndDrop = false;
            if (fCurrentGraphNode instanceof Lifeline) {
                fDragAndDrop = (Lifeline) fCurrentGraphNode;
            }
            if (fDragAndDrop != null) {
                int dx = 0;
                int dy = 0;
                if (e.x > getContentsX() + getVisibleWidth()) {
                    dx = e.x - (getContentsX() + getVisibleWidth());
                } else if (e.x < getContentsX()) {
                    dx = -getContentsX() + e.x;
                }
                if (e.y > getContentsY() + getVisibleHeight()) {
                    dy = e.y - (getContentsY() + getVisibleHeight());
                } else if (e.y < getContentsY()) {
                    dy = -getContentsY() + e.y;
                }
                fDragX = e.x;
                fDragY = e.y;
                if (dx != 0 || dy != 0) {
                    if (fLocalAutoScroll == null) {
                        if (fLocalAutoScrollTimer == null) {
                            fLocalAutoScrollTimer = new Timer(true);
                        }
                        fLocalAutoScroll = new AutoScroll(this, dx, dy);
                        fLocalAutoScrollTimer.schedule(fLocalAutoScroll, 0, 75);
                    } else {
                        fLocalAutoScroll.fDeltaX = dx;
                        fLocalAutoScroll.fDeltaY = dy;
                    }
                } else if (fLocalAutoScroll != null) {
                    fLocalAutoScroll.cancel();
                    fLocalAutoScroll = null;
                }
                fDragX = Math.round(e.x / fZoomValue);
                fDragY = Math.round(e.y / fZoomValue);
                redraw();
                Lifeline node = fFrame.getCloserLifeline(fDragX);
                if ((node != null) && (node != fDragAndDrop)) {
                    int y = 0;
                    int y1 = 0;
                    int height = Metrics.getLifelineHeaderFontHeigth() + 2 * Metrics.LIFELINE_HEARDER_TEXT_V_MARGIN;
                    int hMargin = Metrics.LIFELINE_VT_MAGIN / 4;
                    int x = node.getX();
                    int width = node.getWidth();
                    if (fFrame.getVisibleAreaY() < node.getY() + node.getHeight() - height - hMargin) {
                        y = contentsToViewY(Math.round((node.getY() + node.getHeight()) * fZoomValue));
                    } else {
                        y = Math.round(height * fZoomValue);
                    }

                    if (fFrame.getVisibleAreaY() < contentsToViewY(node.getY() - hMargin)) {
                        y1 = contentsToViewY(Math.round((node.getY() - hMargin) * fZoomValue));
                    } else {
                        y1 = Math.round(height * fZoomValue);
                    }

                    int rx = Math.round(x * fZoomValue);

                    fInsertionCartet.setVisible(true);
                    if ((fInsertionCartet.getImage() != null) && (!fInsertionCartet.getImage().isDisposed())) {
                        fInsertionCartet.getImage().dispose();
                    }
                    if (rx <= e.x && Math.round(rx + (width * fZoomValue)) >= e.x) {
                        if (fCollapseProvider != null) {
                            ImageData data = fCollapaseCaretImg.getImageData();
                            data = data.scaledTo(Math.round(fCollapaseCaretImg.getBounds().width * fZoomValue), Math.round(fCollapaseCaretImg.getBounds().height * fZoomValue));
                            fCurrentCaretImage = new Image(Display.getCurrent(), data);
                            fInsertionCartet.setImage(fCurrentCaretImage);
                            fInsertionCartet.setLocation(contentsToViewX(rx + Math.round((width / (float) 2) * fZoomValue)) - fCurrentCaretImage.getBounds().width / 2, y);
                        }
                    } else if (fReorderMode) {
                        if (rx > e.x) {
                            if (node.getIndex() > 1 && fFrame.getLifeline(node.getIndex() - 2) == fDragAndDrop) {
                                return;
                            }
                            ImageData data = fArrowUpCaretImg.getImageData();
                            data = data.scaledTo(Math.round(fArrowUpCaretImg.getBounds().width * fZoomValue), Math.round(fArrowUpCaretImg.getBounds().height * fZoomValue));
                            fCurrentCaretImage = new Image(Display.getCurrent(), data);
                            fInsertionCartet.setImage(fCurrentCaretImage);
                            fInsertionCartet.setLocation(contentsToViewX(Math.round((x - Metrics.LIFELINE_SPACING / 2) * fZoomValue)) - fCurrentCaretImage.getBounds().width / 2, y1);
                        } else {
                            if (node.getIndex() < fFrame.lifeLinesCount() && fFrame.getLifeline(node.getIndex()) == fDragAndDrop) {
                                return;
                            }
                            ImageData data = fArrowUpCaretImg.getImageData();
                            data = data.scaledTo(Math.round(fArrowUpCaretImg.getBounds().width * fZoomValue), Math.round(fArrowUpCaretImg.getBounds().height * fZoomValue));
                            fCurrentCaretImage = new Image(Display.getCurrent(), data);
                            fInsertionCartet.setImage(fCurrentCaretImage);
                            fInsertionCartet.setLocation(contentsToViewX(Math.round((x + width + Metrics.LIFELINE_SPACING / 2) * fZoomValue)) - fCurrentCaretImage.getBounds().width / 2 + 1, y1);
                        }
                    }
                } else {
                    fInsertionCartet.setVisible(false);
                }
            }
        } else {
            super.contentsMouseMoveEvent(e);
        }
    }

