    @Override
    protected void contentsMouseUpEvent(MouseEvent event) {
        // Just in case the diagram highlight a time compression region
        // this region need to be released when clicking everywhere
        fInsertionCartet.setVisible(false);
        if (fDragAndDrop != null) {
            if ((fOverView != null) && (!fOverView.isDisposed())) {
                fOverView.dispose();
            }
            fOverView = null;
            Lifeline node = fFrame.getCloserLifeline(fDragX);
            if (node != null) {
                int rx = Math.round(node.getX() * fZoomValue);
                if (rx <= event.x && Math.round(rx + (node.getWidth() * fZoomValue)) >= event.x) {
                    if ((fCollapseProvider != null) && (fDragAndDrop != node)) {
                        fCollapseProvider.collapseTwoLifelines(fDragAndDrop, node);
                    }
                } else if (rx < event.x) {
                    fFrame.insertLifelineAfter(fDragAndDrop, node);
                    if (node.getIndex() < fFrame.lifeLinesCount()) {
                        Lifeline temp[] = { fDragAndDrop, fFrame.getLifeline(node.getIndex()) };
                        fReorderList.add(temp);
                    } else {
                        Lifeline temp[] = { fDragAndDrop, null };
                        fReorderList.add(temp);
                    }
                } else {
                    fFrame.insertLifelineBefore(fDragAndDrop, node);
                    Lifeline temp[] = { fDragAndDrop, node };
                    fReorderList.add(temp);
                }
            }
        }
        fDragAndDrop = null;
        redraw();
        if (fFrame == null) {
            return;
        }
        fFrame.resetTimeCompression();

        // reset auto scroll if it's engaged
        if (fLocalAutoScroll != null) {
            fLocalAutoScroll.cancel();
            fLocalAutoScroll = null;
        }
        super.contentsMouseUpEvent(event);
    }

