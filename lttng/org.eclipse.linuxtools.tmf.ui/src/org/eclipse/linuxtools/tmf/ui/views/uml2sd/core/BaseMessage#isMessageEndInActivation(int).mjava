    /**
     * Determines if the given event occurrence occurs on a execution occurrence owned by the receiving lifeline.<br>
     * WARNING: this method will return a valid result only for execution occurrences which are visible in the View.<br>
     * As consequence this method is only used for drawing purpose, especially to determine the exact message x
     * coordinate and width.<br>
     * 
     * @see BaseMessage#getX(boolean)
     * @param event the event occurrence to test
     * @return true if occurs on a execution occurrence owned by the receiving lifeline, false otherwise
     */
    protected boolean isMessageEndInActivation(int event) {
        boolean inActivation = false;
        if ((endLifeline != null) && (endLifeline.getExecutions() != null)) {
            // acIndex = first visible execution occurrence
            // for drawing speed reason with only search on the visivle subset
            for (int i = 0; i < endLifeline.getExecutions().size(); i++) {
                BasicExecutionOccurrence toDraw = (BasicExecutionOccurrence) endLifeline.getExecutions().get(i);
                if ((event >= toDraw.startEventOccurrence) && (event <= toDraw.endEventOccurrence)) {
                    inActivation = true;
                }
                // if we are outside the visible area we stop right now
                // This works because execution occurrences are ordered along the Y axis
                if (toDraw.getY() > getY()) {
                    break;
                }
            }
        }
        return inActivation;
    }

