    /**
     * Sets the timegraph provider used by this timegraph viewer.
     * 
     * @param timeGraphProvider the timegraph provider
     */
    public void setTimeGraphProvider(ITimeGraphPresentationProvider timeGraphProvider) {
        fTimeGraphProvider = timeGraphProvider;
        _data.provider = timeGraphProvider;
//        RGB[] eventColorTable = fTimeGraphProvider.getEventColorTable();
//        if (eventColorTable != null) {
//            fEventColorMap = new Color[eventColorTable.length];
//            for (int i = 0; i < eventColorTable.length; i++) {
//                fEventColorMap[i] = fResourceManager.createColor(eventColorTable[i]);
//            }
//        } else {
//            fEventColorMap = new Color[] { };
//        }

        StateItem[] stateItems = fTimeGraphProvider.getStateTable();
        if (stateItems != null) {
            fEventColorMap = new Color[stateItems.length];
            for (int i = 0; i < stateItems.length; i++) {
                fEventColorMap[i] = fResourceManager.createColor(stateItems[i].getStateColor());
            }
        } else {
            fEventColorMap = new Color[] { };
        }
        
        
    }

