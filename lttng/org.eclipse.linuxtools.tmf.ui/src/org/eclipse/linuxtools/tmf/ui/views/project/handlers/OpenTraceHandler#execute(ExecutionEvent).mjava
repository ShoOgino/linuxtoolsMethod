	public Object execute(ExecutionEvent event) throws ExecutionException {

        IResource resource = fTrace.getResource();
        if (fTrace.getParent() instanceof TmfExperimentNode) {
            resource = fTrace.getProject().getTracesFolder().getTraceForLocation(resource.getLocation()).getResource();
        }
        
        ITmfTrace trace = ParserProviderManager.getTrace(resource);
        if (trace == null) {
            return null;
        }
        
        try {
            IEditorInput editorInput = new TmfEditorInput(resource, trace);
            IWorkbench wb = PlatformUI.getWorkbench();
            IWorkbenchPage activePage = wb.getActiveWorkbenchWindow().getActivePage();
  
            String editorId = ParserProviderManager.getEditorId(resource);
            IEditorPart editor = activePage.findEditor(editorInput);
            if (editor != null && editor instanceof IReusableEditor) {
                activePage.reuseEditor((IReusableEditor)editor, editorInput);
                activePage.activate(editor);
            } else {
                editor = activePage.openEditor(editorInput, editorId);
            }
            
        } catch (PartInitException e) {
            e.printStackTrace();
        }
        
//        ITmfTrace[] traces = new ITmfTrace[]{trace};
//        TmfExperiment<TmfEvent> experiment = new TmfExperiment<TmfEvent>(TmfEvent.class, resource.getName(), traces, trace.getCacheSize());
//        experiment.indexExperiment(false);
//        TmfSignalManager.dispatchSignal(new TmfExperimentSelectedSignal<TmfEvent>(this, experiment));
        
		return null;
	}

