	public void adjustScrolls() {
		if (null == _timeProvider) {
			getVerticalBar().setValues(0, 1, 1, 1, 1, 1);
			getHorizontalBar().setValues(0, 1, 1, 1, 1, 1);
			return;
		}
		int page = countPerPage();
		if (_topItem + page > _data._items.length)
			_topItem = _data._items.length - page;
		if (_topItem < 0)
			_topItem = 0;
		getVerticalBar().setValues(_topItem, 0, _data._items.length, page, 1,
				page);
		long time0 = _timeProvider.getTime0();
		long time1 = _timeProvider.getTime1();
		long timeMin = _timeProvider.getMinTime();
		long timeMax = _timeProvider.getMaxTime();

		// int timePage = (int) ((time1 - time0) / _timeStep);
		// int timePos = (int) (time0 / _timeStep);
		// int minimum = (int) (timeMin / _timeStep);
		// int maximum = (int) (timeMax / _timeStep);

		long delta = timeMax - timeMin;

		int timePos = 0;
		int timePage = 0;
		// Trace.debug("time0 - time1 = " + (time0 - timeMin));
		if (delta != 0) {
			timePage = (int) (((double) (time1 - time0) / _timeStep) / delta);
			timePos = (int) (((double) (time0 - timeMin) / _timeStep) / delta);
		}

		int minimum = 0;
		int maximum = 1000;
		// Trace.debug("time0:" + time0 + " time1:" + time1 + " timeStep:"
		// + _timeStep + " delta:" + delta);
		// Trace.debug("selection:" + timePos + " min:" + minimum + " maximum:"
		// + maximum + " Page:" + timePage);
		getHorizontalBar().setValues(timePos, minimum, maximum, timePage, 1,
				timePage);
	}

