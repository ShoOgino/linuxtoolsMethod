	static public String getTypeSignature(String type) {
		int dim = 0;
		for (int j = 0; j < type.length(); j++) {
			if (type.charAt(j) == '[')
				dim++;
		}
		int pos = type.indexOf('[');
		if (pos >= 0)
			type = type.substring(0, pos);
		String sig = "";                //$NON-NLS-1$
		for (int j = 0; j < dim; j++)
			sig += "[";                 //$NON-NLS-1$
		if (type.equals("boolean"))     //$NON-NLS-1$
			sig += "Z";                 //$NON-NLS-1$
		else if (type.equals("byte"))   //$NON-NLS-1$
			sig += "B";                 //$NON-NLS-1$
		else if (type.equals("char"))   //$NON-NLS-1$
			sig += "C";                 //$NON-NLS-1$
		else if (type.equals("short"))  //$NON-NLS-1$
			sig += "S";                 //$NON-NLS-1$
		else if (type.equals("int"))    //$NON-NLS-1$
			sig += "I";                 //$NON-NLS-1$
		else if (type.equals("long"))   //$NON-NLS-1$
			sig += "J";                 //$NON-NLS-1$
		else if (type.equals("float"))  //$NON-NLS-1$
			sig += "F";                 //$NON-NLS-1$
		else if (type.equals("double")) //$NON-NLS-1$
			sig += "D";                 //$NON-NLS-1$
		else if (type.equals("void"))   //$NON-NLS-1$
			sig += "V";                 //$NON-NLS-1$
		else
			sig += "L" + type.replace('.', '/') + ";"; //$NON-NLS-1$ //$NON-NLS-2$
		return sig;
	}

