    /**
     * Handle the event from the trace by updating the histogram data model.
     *
     * @param event
     *            a event from the trace
     * @see org.eclipse.linuxtools.tmf.core.request.TmfEventRequest#handleData(org.eclipse.linuxtools.tmf.core.event.ITmfEvent)
     */
    @Override
    public void handleData(ITmfEvent event) {
        super.handleData(event);
        synchronized (fHistogram) {
            if (!isCancelled()) {
                if (event instanceof ITmfLostEvent) {
                    ITmfLostEvent lostEvents = (ITmfLostEvent) event;
                    /* clear the old data when it is a new request */
                    fHistogram.countLostEvent(lostEvents.getTimeRange(), lostEvents.getNbLostEvents(), fFullRange);

                } else { /* handle lost event */
                    long timestamp = event.getTimestamp().normalize(0, ITmfTimestamp.NANOSECOND_SCALE).getValue();
                    fHistogram.countEvent(getNbRead(), timestamp, event.getTrace());
                }
            }
        }
    }

