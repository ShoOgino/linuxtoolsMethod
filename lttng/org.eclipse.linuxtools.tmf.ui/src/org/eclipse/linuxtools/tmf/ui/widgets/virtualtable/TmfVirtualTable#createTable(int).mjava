    /**
     * Create the table and add listeners
     * @param style int can be H_SCROLL, SINGLE, MULTI, FULL_SELECTION, HIDE_SELECTION, CHECK
     */
    private void createTable(int style) {
        fTable = new Table(this, style | SWT.NO_SCROLL);

        fTable.addSelectionListener(new SelectionAdapter() {
            @Override
            public void widgetSelected(SelectionEvent event) {
                if (event.item == null) {
                    // Override table selection from Select All action
                    refreshSelection();
                }
            }
        });

        fTable.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseDown(MouseEvent e) {
                handleTableMouseEvent(e);
            }
        });

        fTable.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent event) {
                handleTableKeyEvent(event);
            }
        });

        fTable.addListener(
                SWT.MouseDoubleClick, new Listener() {
                    @Override
                    public void handleEvent(Event event) {
                        if (doubleClickListener != null) {
                            TableItem item = fTable.getItem (new Point (event.x, event.y));
                            if (item != null) {
                                for(int i=0;i<fTable.getColumnCount();i++){
                                    Rectangle bounds = item.getBounds(i);
                                    if (bounds.contains(event.x,event.y)){
                                        doubleClickListener.handleDoubleClick(TmfVirtualTable.this, item, i);
                                        break;
                                    }
                                }
                            }
                        }
                    }
                }
                );

        /*
         * Feature in Windows. When a partially visible table item is selected,
         * after ~500 ms the top index is changed to ensure the selected item is
         * fully visible. This leaves a blank space at the bottom of the virtual
         * table. The workaround is to reset the top index to 0 if it is not 0.
         * Also reset the top index to 0 if indicated by the flag that was set
         * at table selection of a partially visible table item.
         */
        fTable.addPaintListener(new PaintListener() {
            @Override
            public void paintControl(PaintEvent e) {
                if (fTable.getTopIndex() != 0 || fResetTopIndex) {
                    fTable.setTopIndex(0);
                }
                fResetTopIndex = false;
            }
        });
    }

