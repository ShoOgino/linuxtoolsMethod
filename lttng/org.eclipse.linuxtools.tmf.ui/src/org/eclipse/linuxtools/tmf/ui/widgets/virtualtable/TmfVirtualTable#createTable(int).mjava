    /**
     * Create the table and add listeners
     * @param style int can be H_SCROLL, V_SCROLL, SINGLE, CHECK, FULL_SELECTION, HIDE_SELECTION, NO_SCROLL
     */
    private void createTable(int style) {
        fTable = new Table(this, style | SWT.NO_SCROLL);

        fTable.addSelectionListener(new SelectionAdapter() {
            @Override
            public void widgetSelected(SelectionEvent event) {
                if (fTable.getSelectionIndices().length > 0) {
                    handleTableSelection();
                }
            }
        });

        fTable.addKeyListener(new KeyListener() {
            @Override
            public void keyPressed(KeyEvent event) {
                handleTableKeyEvent(event);
            }
            @Override
            public void keyReleased(KeyEvent event) {
            }
        });

        fTable.addListener(
                SWT.MouseDoubleClick, new Listener() {
                    @Override
                    public void handleEvent(Event event) {
                        if (doubleClickListener != null) {
                            TableItem item = fTable.getItem (new Point (event.x, event.y));
                            if (item != null) {
                                for(int i=0;i<fTable.getColumnCount();i++){
                                    Rectangle bounds = item.getBounds(i);
                                    if (bounds.contains(event.x,event.y)){
                                        doubleClickListener.handleDoubleClick(TmfVirtualTable.this, item, i);
                                        break;
                                    }
                                }
                            }
                        }
                    }
                }
                );

        /*
         * When a partially visible table item is selected, sometimes the top index
         * or the origin is changed to ensure the selected item is fully visible.
         * This leaves a blank space at the bottom of the virtual table and hides
         * the first row. The solution is to ensure that the top index is set to 0.
         */
        fTable.addPaintListener(new PaintListener() {
            @Override
            public void paintControl(PaintEvent e) {
                fTable.setTopIndex(0);
            }
        });
    }

