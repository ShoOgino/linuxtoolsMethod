        /**
         * Process overview appear
         */
        protected void overviewAppear(int mx, int my) {
            if (fOverview == null) {
                fOverview = new Shell(getShell(), SWT.ON_TOP | SWT.NO_BACKGROUND);
                fOverview.addPaintListener(new PaintListener() {
                    @Override
                    public void paintControl(PaintEvent e) {
                        drawOverview(e.gc, fOverview.getClientArea());
                    }
                });
            }
            // always the same..
            // overview.setBackground( viewcontrol_.getBackground() );
            fOverview.setForeground(fViewControl.getForeground());

            // get location of shell (in screeen coordinates)
            Point p = toGlobalCoordinates(fCornerControl, 0, 0);
            int x = p.x;
            int y = p.y;
            int w, h;
            w = h = fOverviewSize;
            Rectangle scr = getDisplay().getBounds();
            Point ccs = fCornerControl.getSize();
            try {
                if (fContentsWidth > fContentsHeight) {
                    float ratio = fContentsHeight / (float) fContentsWidth;
                    h = (int) (w * ratio);
                    if (h < ccs.y) {
                        h = ccs.y;
                    } else if (h >= scr.height / 2) {
                        h = scr.height / 2;
                    }
                } else {
                    float ratio = fContentsWidth / (float) fContentsHeight;
                    w = (int) (h * ratio);
                    if (w < ccs.x) {
                        w = ccs.x;
                    } else if (w >= scr.width / 2) {
                        w = scr.width / 2;
                    }
                }
                fOverviewFactorX = fContentsWidth / (float) w;
                fOverviewFactorY = fContentsHeight / (float) h;
            }
            // no contents size set ?
            catch (java.lang.ArithmeticException e) {
            }

            // try pop-up on button, extending to bottom right,
            // if outside screen, extend pop-up to top left
            // if( x+w > scr.width ) x = scr.width-w; //x += corner_control_.getSize().x-w;
            // if( y+h > scr.height ) y = scr.height-h;//y += corner_control_.getSize().y-h;
            if (x <= 0) {
                x = 1;
            }
            if (y <= 0) {
                y = 1;
            }
            x = x - w + ccs.x;
            y = y - h + ccs.y;
            fOverview.setBounds(x, y, w, h);
            fOverview.setVisible(true);
            fOverview.redraw();
            // mouse cursor disappear, so set invisible mouse cursor ...
            if (fOverviewCursor == null) {
                RGB rgb[] = { new RGB(0, 0, 0), new RGB(255, 0, 0) };
                PaletteData palette = new PaletteData(rgb);
                int s = 1;
                byte src[] = new byte[s * s];
                byte msk[] = new byte[s * s];
                for (int i = 0; i < s * s; ++i) {
                    src[i] = (byte) 0xFF;
                }
                ImageData i_src = new ImageData(s, s, 1, palette, 1, src);
                ImageData i_msk = new ImageData(s, s, 1, palette, 1, msk);
                fOverviewCursor = new Cursor(null, i_src, i_msk, 0, 0);
            }
            fCornerControl.setCursor(fOverviewCursor);
            // convert to global coordinates
            p = toGlobalCoordinates(fCornerControl, mx, my);
            fSaveCursorX = p.x;
            fSaveCursorY = p.y;

            Rectangle r = fOverview.getClientArea();
            int cx = (int) (r.width * fContentsX / (float) fContentsWidth);
            int cy = (int) (r.height * fContentsY / (float) fContentsHeight);

            // cx,cy to display's global coordinates
            p = toGlobalCoordinates(fOverview.getParent(), cx, cy);
        }

