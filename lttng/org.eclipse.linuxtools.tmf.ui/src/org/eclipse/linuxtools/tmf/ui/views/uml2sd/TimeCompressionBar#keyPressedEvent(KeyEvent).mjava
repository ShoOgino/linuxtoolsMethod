    /*
     * (non-Javadoc)
     * @see org.eclipse.linuxtools.tmf.ui.views.uml2sd.ScrollView#keyPressedEvent(org.eclipse.swt.events.KeyEvent)
     */
    @Override
    protected void keyPressedEvent(KeyEvent event) {
        if (fTooltip != null) {
            fTooltip.hideToolTip();
        }
        if (!isFocusControl() || getViewControl().isFocusControl()) {
            Control[] child = getParent().getChildren();
            for (int i = 0; i < child.length; i++) {
                if (child[i].isFocusControl()) {
                    // getViewControl().setFocus();
                    break;
                }
            }
        }
        setFocus(-1);

        boolean top = false;
        if (fNextNodeY == 0) {
            top = true;
        }
        if ((fFrame != null) && (fNextNodeY == 0)) {
            for (int i = 0; i < fNodeList.size() - 1 && i < 1; i++) {
                SDTimeEvent m1 = fNodeList.get(i);
                SDTimeEvent m2 = fNodeList.get(i + 1);
                if ((SDViewPref.getInstance().excludeExternalTime()) && ((m1.getGraphNode() instanceof BaseMessage) && (m2.getGraphNode() instanceof BaseMessage))) {
                    BaseMessage mes1 = (BaseMessage) m1.getGraphNode();
                    BaseMessage mes2 = (BaseMessage) m2.getGraphNode();
                    if ((mes2.getStartLifeline() == null) || (mes1.getEndLifeline() == null)) {
                        continue;
                    }
                }

                int y1 = ((GraphNode) m1.getGraphNode()).getY();
                int y2 = ((GraphNode) m2.getGraphNode()).getY();
                if (m1.getGraphNode() instanceof AsyncMessage) {
                    AsyncMessage as = (AsyncMessage) m1.getGraphNode();
                    if (as.getEndTime() == m1.getTime()) {
                        y1 += as.getHeight();
                    }
                }
                if (m2.getGraphNode() instanceof AsyncMessage) {
                    AsyncMessage as = (AsyncMessage) m2.getGraphNode();
                    if (as.getEndTime() == m2.getTime()) {
                        y2 += as.getHeight();
                    }
                }
                if (m1.getGraphNode() instanceof ExecutionOccurrence) {
                    ExecutionOccurrence eo = (ExecutionOccurrence) m1.getGraphNode();
                    if (m1.getEvent() == eo.getEndOccurrence()) {
                        y1 += eo.getHeight();
                    }

                    if (m2.getGraphNode() instanceof ExecutionOccurrence) {

                        ExecutionOccurrence eo2 = (ExecutionOccurrence) m2.getGraphNode();
                        if (m2.getEvent() == eo2.getEndOccurrence()) {
                            y2 += eo2.getHeight();
                        }
                    }
                }
                fPrevNodeY = Math.round(y1 * fZoomValue);
                fNextNodeY = Math.round(y2 * fZoomValue);
            }
        }

        if (fLifeline != null) {
            for (int j = 0; j < fListenerList.size(); j++) {
                ITimeCompressionListener list = fListenerList.get(j);
                list.deltaSelected(fLifeline, fLifelineStart, fLifelineNumEvents, fLifelineColor);
            }
        }

        if (event.keyCode == SWT.ARROW_DOWN) {
            if (!top) {
                selectTimeDelta(fNextNodeY + 1, 1);
            } else {
                selectTimeDelta(fPrevNodeY + 1, 1);
            }
            setFocus(1);
        } else if (event.keyCode == SWT.ARROW_UP) {
            selectTimeDelta(fPrevNodeY - 1, 2);
            setFocus(1);
        } else if (event.keyCode == SWT.ARROW_RIGHT) {
            selectTimeDelta(fPrevNodeY, 1);
            setFocus(1);
        }
        super.keyPressedEvent(event);
    }

