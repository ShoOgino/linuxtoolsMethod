    /**
     * Delete the trace resource, remove it from experiments and delete its
     * supplementary files
     *
     * @param progressMonitor
     *            a progress monitor, or null if progress reporting is not
     *            desired
     *
     * @throws CoreException
     *             thrown when IResource.delete fails
     * @since 2.2
     */
    public void delete(IProgressMonitor progressMonitor) throws CoreException {
        // Close editors in UI Thread
        Display.getDefault().syncExec(new Runnable() {
            @Override
            public void run() {
                closeEditors();
            }
        });

        IPath path = fResource.getLocation();
        if (path != null) {
            if (getParent() instanceof TmfTraceFolder) {
                TmfExperimentFolder experimentFolder = getProject().getExperimentsFolder();

                // Propagate the removal to traces
                for (TmfExperimentElement experiment : experimentFolder.getExperiments()) {
                    List<TmfTraceElement> toRemove = new LinkedList<>();
                    for (TmfTraceElement trace : experiment.getTraces()) {
                        if (trace.getElementPath().equals(getElementPath())) {
                            toRemove.add(trace);
                        }
                    }
                    for (TmfTraceElement child : toRemove) {
                        experiment.removeTrace(child);
                    }
                }

                // Delete supplementary files
                deleteSupplementaryFolder();

            } else if (getParent() instanceof TmfExperimentElement) {
                TmfExperimentElement experimentElement = (TmfExperimentElement) getParent();
                experimentElement.removeTrace(this);
            }
        }

        // Finally, delete the trace
        fResource.delete(true, progressMonitor);
    }

