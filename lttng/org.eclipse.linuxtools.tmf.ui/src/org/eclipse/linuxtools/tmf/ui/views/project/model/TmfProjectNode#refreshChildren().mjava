	@Override
	public void refreshChildren() {

		if (!(fIsOpen && fIsTmfProject))
			return;

		try {
			IResource[] resources = fProject.members();
			for (IResource resource : resources) {
				if (resource.getType() == IResource.FOLDER) {
					String name = resource.getName();
					if (name.equals(TRACE_FOLDER_NAME) && !isIncluded(true, name, fChildren)) {
						fTracesFolder = new TmfTraceFolderNode(this, (IFolder) resource);
						fChildren.add(fTracesFolder);
					} else
					if (name.equals(EXPER_FOLDER_NAME) && !isIncluded(false, name, fChildren)) {
						fExperimentsFolder = new TmfExperimentFolderNode(this, (IFolder) resource);
						fChildren.add(fExperimentsFolder);
					}
				}
			}
        	List<ITmfProjectTreeNode> toRemove = new ArrayList<ITmfProjectTreeNode>();
	        for (ITmfProjectTreeNode node : fChildren) {
	        	if (exists(node.getName(), resources)) {
	        		node.refreshChildren();
	        	}
	        	else {
	        		toRemove.add(node);
	        	}
	        }
    		for (ITmfProjectTreeNode node : toRemove) {
    			fChildren.remove(node);
    		}
	        
		} catch (CoreException e) {
		}
	}

