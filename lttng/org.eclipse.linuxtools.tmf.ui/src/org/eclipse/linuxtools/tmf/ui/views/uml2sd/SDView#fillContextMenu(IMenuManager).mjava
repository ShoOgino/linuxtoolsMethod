    /**
     * Fills the basic sequence diagram menu and define the dynamic menu item insertion point
     *
     * @param manager the menu manager
     */
    protected void fillContextMenu(IMenuManager manager) {
        manager.add(new Separator("Additions")); //$NON-NLS-1$
        if (getSDWidget() != null && getSDWidget().fCurrentGraphNode != null) {
            ISelectionProvider selProvider = fSdWidget.getSelectionProvider();
            ISelection sel = selProvider.getSelection();
            int nbMessage = 0;
            Iterator<?> it = ((StructuredSelection) sel).iterator();
            while (it.hasNext()) {
                Object node = it.next();
                if (node instanceof BaseMessage) {
                    nbMessage++;
                }
            }
            if (nbMessage != 1) {
                return;
            }
            GraphNode node = getSDWidget().fCurrentGraphNode;
            if ((node instanceof SyncMessageReturn) && (((SyncMessageReturn) node).getMessage() != null)) {
                Action goToMessage = new MoveToMessage(this);
                goToMessage.setText(Messages.SequenceDiagram_GoToMessage);
                manager.add(goToMessage);
            }
            if ((node instanceof SyncMessage) && (((SyncMessage) node).getMessageReturn() != null)) {
                Action goToMessage = new MoveToMessage(this);
                goToMessage.setText(Messages.SequenceDiagram_GoToMessageReturn);
                manager.add(goToMessage);
            }
        }
        manager.add(new Separator("MultiSelectAdditions")); //$NON-NLS-1$
    }

