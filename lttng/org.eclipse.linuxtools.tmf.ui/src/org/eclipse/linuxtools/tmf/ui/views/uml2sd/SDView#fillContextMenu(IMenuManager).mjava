    /**
     * Fills the basic sequence diagram menu and define the dynamic menu item insertion point
     * 
     * @param manager the menu manager
     */
    protected void fillContextMenu(IMenuManager manager) {
        manager.add(new Separator("Additions")); //$NON-NLS-1$
        if (getSDWidget() != null && getSDWidget().currentGraphNode != null) {
            ISelectionProvider selProvider = sdWidget.getSelectionProvider();
            ISelection sel = selProvider.getSelection();
            int nbMessage = 0;
            Iterator<?> it = ((StructuredSelection) sel).iterator();
            while (it.hasNext()) {
                Object node = it.next();
                if (node instanceof BaseMessage) {
                    nbMessage++;
                }
            }
            if (nbMessage != 1) {
                return;
            }
            GraphNode node = getSDWidget().currentGraphNode;
            if (node instanceof SyncMessageReturn) {
                if (((SyncMessageReturn) node).getMessage() != null) {
                    Action goToMessage = new MoveToMessage(this);
                    goToMessage.setText(SDMessages._39);
                    manager.add(goToMessage);
                }
            }
            if (node instanceof SyncMessage) {
                if (((SyncMessage) node).getMessageReturn() != null) {
                    Action goToMessage = new MoveToMessage(this);
                    goToMessage.setText(SDMessages._40);
                    manager.add(goToMessage);
                }
            }
        }
        manager.add(new Separator("MultiSelectAdditions")); //$NON-NLS-1$
    }

