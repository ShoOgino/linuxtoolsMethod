    @Override
    protected void keyPressedEvent(KeyEvent event) {
        if (!(isFocusControl() || getViewControl().isFocusControl())) {
            Control[] child = getParent().getChildren();
            for (int i = 0; i < child.length; i++) {
                if ((child[i].isFocusControl())&& (!(child[i] instanceof ScrollView))) {
                    getViewControl().setFocus();
                    break;
                }
            }
        }
        setFocus(-1);

        if (event.keyCode == SWT.CTRL) {
            fCtrlSelection = true;
        }
        if (event.keyCode == SWT.SHIFT) {
            fShiftSelection = true;
            fPrevList = new ArrayList<>();
            fPrevList.addAll(getSelection());
        }

        GraphNode prevNode = getFocusNode();

        if (event.keyCode == SWT.ARROW_RIGHT) {
            traverseRight();
        }

        if (event.keyCode == SWT.ARROW_LEFT) {
            traverseLeft();
        }

        if (event.keyCode == SWT.ARROW_DOWN) {
            traverseDown();
        }

        if (event.keyCode == SWT.ARROW_UP) {
            traverseUp();
        }

        if (event.keyCode == SWT.HOME) {
            traverseHome();
        }

        if (event.keyCode == SWT.END) {
            traverseEnd();
        }

        if ((!fShiftSelection) && (!fCtrlSelection)) {
            fListStart = fCurrentGraphNode;
        }

        if (event.character == ' ') {
            performSelection(fCurrentGraphNode);
            if (!fShiftSelection) {
                fListStart = fCurrentGraphNode;
            }
        }

        if ((fShiftSelection) && (prevNode != getFocusNode())) {
            clearSelection();
            addSelection(fPrevList);
            addSelection(fFrame.getNodeList(fListStart, getFocusNode()));
            if (getFocusNode() instanceof Lifeline) {
                ensureVisible(getFocusNode().getX(), getFocusNode().getY(), getFocusNode().getWidth(), getFocusNode().getHeight(), SWT.CENTER | SWT.VERTICAL, true);
            } else {
                ensureVisible(getFocusNode());
            }
        } else if ((!fCtrlSelection) && (!fShiftSelection)) {

            clearSelection();
            if (getFocusNode() != null) {
                addSelection(getFocusNode());

                if (getFocusNode() instanceof Lifeline) {
                    ensureVisible(getFocusNode().getX(), getFocusNode().getY(), getFocusNode().getWidth(), getFocusNode().getHeight(), SWT.CENTER | SWT.VERTICAL, true);
                } else {
                    ensureVisible(getFocusNode());
                }
            }
        }

        if (fCurrentGraphNode != null) {
            fCurrentGraphNode.setFocused(true);
        }
        redraw();

        if ((event.character == ' ') && ((fZoomInMode) || (fZoomOutMode))) {
            int cx = Math.round((getContentsX() + getVisibleWidth() / 2) / fZoomValue);
            int cy = Math.round((getContentsY() + getVisibleHeight() / 2) / fZoomValue);
            if (fZoomInMode) {
                if (fZoomValue < 64) {
                    fZoomValue = fZoomValue * (float) 1.25;
                }
            } else {
                fZoomValue = fZoomValue / (float) 1.25;
            }
            int x = Math.round(cx * fZoomValue - getVisibleWidth() / (float) 2);
            int y = Math.round(cy * fZoomValue - getVisibleHeight() / (float) 2);
            setContentsPos(x, y);
            if (fTimeBar != null) {
                fTimeBar.setZoom(fZoomValue);
            }
            // redraw also resize the scrollView content
            redraw();
        }
    }

