    public void drawTraceInteractions(Rectangle bound, GC gc) {
        // int nameWidth = _timeProvider.getNameSpace();
        // Object[] items = _data._items;
        //
        // double time0 = _timeProvider.getTime0();
        // double time1 = _timeProvider.getTime1();
        //
        // if (time0 == time1)
        // return;
        //
        // int xr = bound.x + nameWidth;
        // double K = (double) (bound.width - xr) / (time1 - time0);

        // for (int i = 0; i < items.length; i++) {
        // Item item = (Item) items[i];
        // if (!(item instanceof TraceItem))
        // continue;
        //
        // TsfTmTrace trace = ((TraceItem) item)._trace;
        // if (trace == null)
        // continue;
        //
        // List<TsfTmEvent> list = trace.getTraceEvents();
        // Iterator<TsfTmEvent> it = list.iterator();
        // while (it.hasNext()) {
        // TsfTmEvent te = (TsfTmEvent) it.next();
        // TODO: CC: Thread Interactions,
        // This needs to be accessed externally via a specific
        // implementation.
        // if (te instanceof TsfTmTraceStartThreadEventImpl) {
        // TsfTmTrace child = ((TsfTmTraceStartThreadEventImpl) te)
        // .getStartedThread();
        // drawThreadThreadEvent(bound, te, child, i,
        // TraceColorScheme.TI_START_THREAD, gc);
        // } else if (te instanceof TsfTmTraceHandoffLockEventImpl) {
        // if (drawThreadReleases)
        // drawExecEvent(bound, (TsfTmTraceExecEventImpl) te, i,
        // TraceColorScheme.TI_HANDOFF_LOCK, gc);
        // } else if (te instanceof TsfTmTraceNotifyAllEventImpl) {
        // if (drawThreadWaits)
        // drawExecEvent(bound, (TsfTmTraceExecEventImpl) te, i,
        // TraceColorScheme.TI_NOTIFY_ALL, gc);
        // } else if (te instanceof TsfTmTraceNotifyEventImpl) {
        // if (drawThreadWaits)
        // drawExecEvent(bound, (TsfTmTraceExecEventImpl) te, i,
        // TraceColorScheme.TI_NOTIFY, gc);
        // } else if (te instanceof
        // TsfTmTraceDeadAndNotifyJoinedEventImpl) {
        // if (drawThreadJoins)
        // drawExecEvent(bound, (TsfTmTraceExecEventImpl) te, i,
        // TraceColorScheme.TI_NOTIFY_JOINED, gc);
        // } else if (te instanceof TsfTmTraceInterruptThreadEventImpl)
        // {
        // if (drawThreadWaits)
        // drawExecEvent(bound, (TsfTmTraceExecEventImpl) te, i,
        // TraceColorScheme.TI_INTERRUPT, gc);
        // } else if (te instanceof
        // TsfTmTraceWaitTimeoutExceedEventImpl) {
        // drawThreadEvent(bound, te, i,
        // TraceColorScheme.TI_WAIT_EXCEEDED, gc);
        // }
        // }
        // }
    }

