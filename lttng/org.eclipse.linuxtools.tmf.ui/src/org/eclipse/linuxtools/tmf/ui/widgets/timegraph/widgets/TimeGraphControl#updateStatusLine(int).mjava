    private void updateStatusLine(int x) {
        // use the time provider of the time graph scale for the status line
        ITimeDataProvider tdp = fTimeGraphScale.getTimeProvider();
        if (fStatusLineManager == null || null == tdp ||
                tdp.getTime0() == tdp.getTime1()) {
            return;
        }
        TimeFormat tf = tdp.getTimeFormat();
        Resolution res = Resolution.NANOSEC;
        StringBuilder message = new StringBuilder();
        if (x >= 0 && fDragState == DRAG_NONE) {
            long time = getTimeAtX(x);
            if (time >= 0) {
                if (tdp instanceof ITimeDataProviderConverter) {
                    time = ((ITimeDataProviderConverter) tdp).convertTime(time);
                }
                long selectionBegin = tdp.getSelectionBegin();
                long selectionEnd = tdp.getSelectionEnd();
                message.append(NLS.bind("T: {0}{1}     T1: {2}{3}", //$NON-NLS-1$
                        new Object[] {
                                tf == TimeFormat.CALENDAR ? Utils.formatDate(time) + ' ' : "", //$NON-NLS-1$
                                Utils.formatTime(time, tf, res),
                                tf == TimeFormat.CALENDAR ? Utils.formatDate(Math.min(selectionBegin, selectionEnd)) + ' ' : "", //$NON-NLS-1$
                                Utils.formatTime(Math.min(selectionBegin, selectionEnd), tf, res)
                        }));
                if (selectionBegin != selectionEnd) {
                    message.append(NLS.bind("     T2: {0}{1}     \u0394: {2}", //$NON-NLS-1$
                            new Object[] {
                                    tf == TimeFormat.CALENDAR ? Utils.formatDate(Math.max(selectionBegin, selectionEnd)) + ' ' : "", //$NON-NLS-1$
                                    Utils.formatTime(Math.max(selectionBegin, selectionEnd), tf, res),
                                    Utils.formatDelta(Math.abs(selectionBegin - selectionEnd), tf, res)
                            }));
                }
            }
        } else if (fDragState == DRAG_SELECTION || fDragState == DRAG_ZOOM) {
            long time0 = fDragTime0;
            long time = getTimeAtX(fDragX);
            if (tdp instanceof ITimeDataProviderConverter) {
                time0 = ((ITimeDataProviderConverter) tdp).convertTime(time0);
                time = ((ITimeDataProviderConverter) tdp).convertTime(time);
            }
            message.append(NLS.bind("T1: {0}{1}     T2: {2}{3}     \u0394: {4}", //$NON-NLS-1$
                    new Object[] {
                            tf == TimeFormat.CALENDAR ? Utils.formatDate(Math.min(time, time0)) + ' ' : "", //$NON-NLS-1$
                            Utils.formatTime(Math.min(time, time0), tf, res),
                            tf == TimeFormat.CALENDAR ? Utils.formatDate(Math.max(time, time0)) + ' ' : "", //$NON-NLS-1$
                            Utils.formatTime(Math.max(time, time0), tf, res),
                            Utils.formatDelta(Math.abs(time - time0), tf, res)
                    }));
        }
        fStatusLineManager.setMessage(message.toString());
    }

