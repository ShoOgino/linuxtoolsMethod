    /**
     * Loads the Sequence diagram default preference settings
     */
    @Override
    protected void performDefaults() {
        link.loadDefault();
        tooltip.loadDefault();
        noExternalTime.loadDefault();
        useGrad.loadDefault();
        lifelineWidth.loadDefault();

        // and all the fonts and colors
        // fonts and colors are stored for each time because
        // we are using only one FontFieldEditor
        Set<String> keySet = SDViewPref.getInstance().fontPref.keySet();
        Iterator<String> it = keySet.iterator();
        while (it.hasNext()) {
            Object prefName = it.next();
            if (prefName instanceof String) {
                font.setPreferenceName((String) prefName);
                font.loadDefault();
                font.setPreferenceName((String) prefName + TEMP_TAG);
                font.store();
            }
        }

        keySet = SDViewPref.getInstance().backColorPref.keySet();
        it = keySet.iterator();
        while (it.hasNext()) {
            Object prefName = it.next();
            if (prefName instanceof String) {
                backGroundColor.setPreferenceName((String) prefName);
                backGroundColor.loadDefault();
                backGroundColor.setPreferenceName((String) prefName + TEMP_TAG);
                backGroundColor.store();
            }

        }

        backGroundColor.setPreferenceName(SDViewPref.fontList[classItemList.getSelectionIndex()] + SDViewPref.BACK_COLOR_POSTFIX + TEMP_TAG);
        backGroundColor.load();

        keySet = SDViewPref.getInstance().foreColorPref.keySet();
        it = keySet.iterator();
        while (it.hasNext()) {
            Object prefName = it.next();
            if (prefName instanceof String) {
                lineColor.setPreferenceName((String) prefName);
                lineColor.loadDefault();
                lineColor.setPreferenceName((String) prefName + TEMP_TAG);
                lineColor.store();
            }
        }

        lineColor.setPreferenceName(SDViewPref.fontList[classItemList.getSelectionIndex()] + SDViewPref.FORE_COLOR_POSTFIX + TEMP_TAG);
        lineColor.load();

        keySet = SDViewPref.getInstance().textColorPref.keySet();
        it = keySet.iterator();
        while (it.hasNext()) {
            Object prefName = it.next();
            if (prefName instanceof String) {
                textColor.setPreferenceName((String) prefName);
                textColor.loadDefault();
                textColor.setPreferenceName((String) prefName + TEMP_TAG);
                textColor.store();
            }
        }
        textColor.setPreferenceName(SDViewPref.fontList[classItemList.getSelectionIndex()] + SDViewPref.TEXT_COLOR_POSTFIX + TEMP_TAG);
        textColor.load();
    }

