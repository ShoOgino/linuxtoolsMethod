    /**
     * Constructor
     * 
     * @param shello The shell reference
     * @param sdWidget The sequence diagram widget reference
     * @param showPrintBtn Flag for showing print buttons
     */
    public SDPrintDialogUI(Shell shell, SDWidget sdWidget, boolean showPrintBtn) {
        fShell = shell;
        fSdView = sdWidget;
        fShowPrintButton = showPrintBtn;

        fPrinterData = Printer.getDefaultPrinterData();
        if (fPrinterData != null) {
            fPrinterData.scope = PrinterData.SELECTION;
        }

        fPagesList = new int[0];

        fSelectionListener = new SelectionListener() {

            @Override
            public void widgetSelected(SelectionEvent e) {
                if (fUseCurrentZoom.getSelection()) {
                    fHorPagesNum.setEnabled(false);
                    fVertPagesNum.setEnabled(false);
                }
                if (fSetHPagesNumber.getSelection()) {
                    fHorPagesNum.setEnabled(true);
                    fVertPagesNum.setEnabled(false);
                    if (fCurrentPage.getSelection()) {
                        fCurrentPage.setSelection(false);
                        fAllPages.setSelection(true);
                    }
                    if ("".equals(fHorPagesNum.getText())) { //$NON-NLS-1$ 
                        fHorPagesNum.setText("1"); //$NON-NLS-1$
                    }
                }
                if (fSetVPagesNumber.getSelection()) {
                    fHorPagesNum.setEnabled(false);
                    fVertPagesNum.setEnabled(true);
                    if (fCurrentPage.getSelection()) {
                        fCurrentPage.setSelection(false);
                        fAllPages.setSelection(true);
                    }
                    if ("".equals(fVertPagesNum.getText())) { //$NON-NLS-1$
                        fVertPagesNum.setText("1"); //$NON-NLS-1$
                    }
                }
                if (fCurrentPage.getSelection() || fAllPages.getSelection() || fPageList.getSelection()) {
                    fFromPage.setEnabled(false);
                    fToPage.setEnabled(false);
                } else {
                    fFromPage.setEnabled(true);
                    fToPage.setEnabled(true);
                }

                fCurrentPage.setEnabled(fUseCurrentZoom.getSelection());
                fOverviewCanvas.setEnabled(fPageList.getSelection());
                if (fOverviewCanvas.isEnabled() && (e.widget == fUseCurrentZoom || e.widget == fSetHPagesNumber || e.widget == fSetVPagesNumber)) {
                    fPagesList = new int[1];
                    fPagesList[0] = 1;
                    fPageNum = 1;
                    fFirstPage = 1;
                } else if ((fOverviewCanvas.isEnabled() && (e.widget == fPageList)) && 
                           (fPagesList == null || fPagesList.length <= 0)) {

                    fPagesList = new int[1];
                    fPagesList[0] = 1;
                    fPageNum = 1;
                    fFirstPage = 1;
                }
                computeStepXY();
                fTotalPages.setText(Integer.valueOf(maxNumOfPages()).toString());
                fOverviewCanvas.redraw();
                fOverviewCanvas.update();
            }

            /*
             * (non-Javadoc)
             * @see org.eclipse.swt.events.SelectionListener#widgetDefaultSelected(org.eclipse.swt.events.SelectionEvent)
             */
            @Override
            public void widgetDefaultSelected(SelectionEvent e) {
                fPagesList = new int[0];
                computeStepXY();
                fOverviewCanvas.redraw();
            }

        };

        fModifyListener = new ModifyListener() {
            /*
             * (non-Javadoc)
             * @see org.eclipse.swt.events.ModifyListener#modifyText(org.eclipse.swt.events.ModifyEvent)
             */
            @Override
            public void modifyText(ModifyEvent e) {
                fPagesList = new int[0];
                computeStepXY();
                fTotalPages.setText(Integer.valueOf(maxNumOfPages()).toString());
                fOverviewCanvas.redraw();
            }

        };
    }

