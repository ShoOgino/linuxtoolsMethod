    /**
     * A post action for a tooltip (before displaying).
     *
     * @param accessible true if accessible else false
     * @return the tooltip text.
     */
    protected String getPostfixForTooltip(boolean accessible) {
        StringBuffer postfix = new StringBuffer();
//        String postfix = "";//$NON-NLS-1$
        // Determine if the tooltip must show the time difference between the current mouse position and
        // the last selected graphNode
        if ((fCurrentGraphNode != null) &&
                (fCurrentGraphNode instanceof ITimeRange) &&
                (fToolTipNode instanceof ITimeRange) &&
                (fCurrentGraphNode != fToolTipNode) &&
                ((ITimeRange) fToolTipNode).hasTimeInfo() &&
                ((ITimeRange) fCurrentGraphNode).hasTimeInfo()) {
            postfix.append(" -> "); //$NON-NLS-1$
            postfix.append(fCurrentGraphNode.getName());
            postfix.append("\n"); //$NON-NLS-1$
            postfix.append(SDMessages._138);
            postfix.append(" "); //$NON-NLS-1$

//            postfix = " -> " + fCurrentGraphNode.getName() + "\n" + SDMessages._138 + " "; //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$

            //double delta = ((ITimeRange)toolTipNode).getLastTime()-((ITimeRange)currentGraphNode).getLastTime();
            ITmfTimestamp firstTime = ((ITimeRange) fCurrentGraphNode).getEndTime();
            ITmfTimestamp lastTime = ((ITimeRange) fToolTipNode).getEndTime();
            TmfTimestamp delta = (TmfTimestamp) lastTime.getDelta(firstTime);
            postfix.append(delta.toString());

//            postfix += delta.toString();
        } else {
            if ((fToolTipNode instanceof ITimeRange) && ((ITimeRange) fToolTipNode).hasTimeInfo()) {
                postfix.append("\n"); //$NON-NLS-1$
//                postfix = "\n";//$NON-NLS-1$
                ITmfTimestamp firstTime = ((ITimeRange) fToolTipNode).getStartTime();
                ITmfTimestamp lastTime = ((ITimeRange) fToolTipNode).getEndTime();

                if (firstTime != null) {
                    if (lastTime != null && firstTime.compareTo(lastTime, true) != 0) {
                        postfix.append("start: "); //$NON-NLS-1$
                        postfix.append(firstTime.toString());
                        postfix.append("\n"); //$NON-NLS-1$
                        postfix.append("end: "); //$NON-NLS-1$
                        postfix.append(lastTime.toString());
                        postfix.append("\n"); //$NON-NLS-1$
//                            postfix += "start: " + firstTime + "\n"; //$NON-NLS-1$ //$NON-NLS-2$
//                            postfix += "end: " + lastTime + "\n"; //$NON-NLS-1$ //$NON-NLS-2$
                        } else {
                            postfix.append(firstTime.toString());
//                            postfix += firstTime.toString();
                        }
                    }
                else if (lastTime != null) {
                    postfix.append(lastTime.toString());
//                    postfix += lastTime.toString();
                }
            }
        }
        return postfix.toString();
    }

