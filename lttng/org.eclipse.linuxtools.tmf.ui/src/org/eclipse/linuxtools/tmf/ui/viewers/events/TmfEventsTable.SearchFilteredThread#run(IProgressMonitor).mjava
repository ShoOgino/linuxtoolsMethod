		@Override
		protected IStatus run(final IProgressMonitor monitor) {
			final Display display = Display.getDefault();
			if (fFilteredEventCache.size() == 0) {
				return Status.OK_STATUS;
			}
			if (startRank < 0) {
				startRank = fFilteredEventCache.size() - 1;
			}
			int index = (int) startRank;
			if (direction == Direction.FORWARD) {
    			if (index >= fFilteredEventCache.size()) {
    				index = 0;
    			}
			} else {
				if (index < 0) {
					index = fFilteredEventCache.size() - 1;
				}
			}
			TmfEvent event = null;
			while (!monitor.isCanceled()) {
				event = fFilteredEventCache.get(index).event;
				if (filter.matches(event)) {
					break;
				}
				if (direction == Direction.FORWARD) {
    				index++;
    				if (index == startRank) {
    					return Status.OK_STATUS;
    				}
    				if (index >= fFilteredEventCache.size()) {
    					index = 0;
    				}
				} else {
    				index--;
    				if (index == startRank) {
    					return Status.OK_STATUS;
    				}
    				if (index < 0) {
    					index = fFilteredEventCache.size() - 1;
    				}
				}
			}
			final int selection = (int) index + 2; // +1 for header row, +1 for top filter status row
			
			display.asyncExec(new Runnable() {
				@Override
                public void run() {
					if (monitor.isCanceled()) return;
					if (fTable.isDisposed()) return;
					fTable.setSelection(selection);
					synchronized (fSearchSyncObj) {
						fSearchThread = null;
					}
				}
			});
			return Status.OK_STATUS;
		}

