		FilterCompareNodeComposite(Composite parent, TmfFilterCompareNode node) {
			super(parent);
			fNode = node;
			
			Label label = new Label(this, SWT.NONE);
			label.setBackground(Display.getCurrent().getSystemColor(SWT.COLOR_WHITE));
			label.setText(Messages.FilterViewer_NotLabel);
			
			fNotButton = new Button(this, SWT.CHECK);
			fNotButton.setSelection(fNode.isNot());
			fNotButton.addSelectionListener(new SelectionAdapter() {
				@Override
				public void widgetSelected(SelectionEvent e) {
					fNode.setNot(fNotButton.getSelection());
					fViewer.refresh(fNode);
				}
			});
			
			label = new Label(this, SWT.NONE);
			label.setBackground(Display.getCurrent().getSystemColor(SWT.COLOR_WHITE));
			label.setText(Messages.FilterViewer_FieldLabel);
			
			fFieldCombo = new Combo(this, SWT.DROP_DOWN);
			fFieldCombo.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false));
			fFieldCombo.setItems(getFieldsList(fNode));
			if (fNode.getField() != null) {
				fFieldCombo.setText(fNode.getField());
			}
			fFieldCombo.addModifyListener(new ModifyListener() {
				@Override
                public void modifyText(ModifyEvent e) {
					fNode.setField(fFieldCombo.getText());
					fViewer.refresh(fNode);
				}
			});
			
			label = new Label(this, SWT.NONE);
			label.setBackground(Display.getCurrent().getSystemColor(SWT.COLOR_WHITE));
			label.setText(Messages.FilterViewer_ResultLabel);
			
	        Composite resultGroup = new Composite(this, SWT.NONE);
	        GridLayout rggl = new GridLayout(3, true);
	        rggl.marginHeight = 0;
	        rggl.marginWidth = 0;
	        resultGroup.setLayout(rggl);
			resultGroup.setBackground(Display.getCurrent().getSystemColor(SWT.COLOR_WHITE));
	        
			fLTButton = new Button(resultGroup, SWT.RADIO);
			fLTButton.setSelection(fNode.getResult() < 0);
			fLTButton.setText("<"); //$NON-NLS-1$
			fLTButton.setBackground(Display.getCurrent().getSystemColor(SWT.COLOR_WHITE));
			fLTButton.addSelectionListener(new SelectionAdapter() {
				@Override
				public void widgetSelected(SelectionEvent e) {
					if (fLTButton.getSelection()) {
						fNode.setResult(-1);
					}
					fViewer.refresh(fNode);
				}
			});
			
			fEQButton = new Button(resultGroup, SWT.RADIO);
			fEQButton.setSelection(fNode.getResult() == 0);
			fEQButton.setText("="); //$NON-NLS-1$
			fEQButton.setBackground(Display.getCurrent().getSystemColor(SWT.COLOR_WHITE));
			fEQButton.addSelectionListener(new SelectionAdapter() {
				@Override
				public void widgetSelected(SelectionEvent e) {
					if (fEQButton.getSelection()) {
						fNode.setResult(0);
					}
					fViewer.refresh(fNode);
				}
			});
			
			fGTButton = new Button(resultGroup, SWT.RADIO);
			fGTButton.setSelection(fNode.getResult() > 0);
			fGTButton.setText(">"); //$NON-NLS-1$
			fGTButton.setBackground(Display.getCurrent().getSystemColor(SWT.COLOR_WHITE));
			fGTButton.addSelectionListener(new SelectionAdapter() {
				@Override
				public void widgetSelected(SelectionEvent e) {
					if (fGTButton.getSelection()) {
						fNode.setResult(1);
					}
					fViewer.refresh(fNode);
				}
			});
			
			label = new Label(this, SWT.NONE);
			label.setBackground(Display.getCurrent().getSystemColor(SWT.COLOR_WHITE));
			label.setText(Messages.FilterViewer_TypeLabel);
			
	        Composite typeGroup = new Composite(this, SWT.NONE);
	        GridLayout tggl = new GridLayout(3, false);
	        tggl.marginHeight = 0;
	        tggl.marginWidth = 0;
	        typeGroup.setLayout(tggl);
			typeGroup.setBackground(Display.getCurrent().getSystemColor(SWT.COLOR_WHITE));
	        
			fNumButton = new Button(typeGroup, SWT.RADIO);
			fNumButton.setSelection(fNode.getType() == Type.NUM);
			fNumButton.setText(Messages.FilterViewer_NumButtonText);
			fNumButton.setBackground(Display.getCurrent().getSystemColor(SWT.COLOR_WHITE));
			fNumButton.addSelectionListener(new SelectionAdapter() {
				@Override
				public void widgetSelected(SelectionEvent e) {
					if (fNumButton.getSelection()) {
						fNode.setType(Type.NUM);
					}
					fViewer.refresh(fNode);
				}
			});
			
			fAlphaButton = new Button(typeGroup, SWT.RADIO);
			fAlphaButton.setSelection(fNode.getType() == Type.ALPHA);
			fAlphaButton.setText(Messages.FilterViewer_AlphaButtonText);
			fAlphaButton.setBackground(Display.getCurrent().getSystemColor(SWT.COLOR_WHITE));
			fAlphaButton.addSelectionListener(new SelectionAdapter() {
				@Override
				public void widgetSelected(SelectionEvent e) {
					if (fAlphaButton.getSelection()) {
						fNode.setType(Type.ALPHA);
					}
					fViewer.refresh(fNode);
				}
			});
			
			fTimestampButton = new Button(typeGroup, SWT.RADIO);
			fTimestampButton.setSelection(fNode.getType() == Type.TIMESTAMP);
			fTimestampButton.setText(Messages.FilterViewer_TimestampButtonText);
			fTimestampButton.setBackground(Display.getCurrent().getSystemColor(SWT.COLOR_WHITE));
			fTimestampButton.addSelectionListener(new SelectionAdapter() {
				@Override
				public void widgetSelected(SelectionEvent e) {
					if (fTimestampButton.getSelection()) {
						fNode.setType(Type.TIMESTAMP);
					}
					fViewer.refresh(fNode);
				}
			});
			
			label = new Label(this, SWT.NONE);
			label.setBackground(Display.getCurrent().getSystemColor(SWT.COLOR_WHITE));
			label.setText(Messages.FilterViewer_ValueLabel);
			
			fValueText = new Text(this, SWT.BORDER);
			fValueText.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false));
			if (node.getValue() != null && node.getValue().length() > 0) {
				fValueText.setText(node.getValue());
			} else {
				fValueText.setForeground(Display.getCurrent().getSystemColor(SWT.COLOR_GRAY));
				fValueText.setText(Messages.FilterViewer_ValueHint);
			}
			fValueText.addFocusListener(new FocusListener() {
				@Override
                public void focusLost(FocusEvent e) {
					if (fNode.getValue() == null || fNode.getValue().length() == 0) {
						fValueText.setForeground(Display.getCurrent().getSystemColor(SWT.COLOR_GRAY));
						fValueText.setText(Messages.FilterViewer_ValueHint);
					}
				}
				@Override
                public void focusGained(FocusEvent e) {
					if (fValueText.getForeground().equals(Display.getCurrent().getSystemColor(SWT.COLOR_GRAY))) {
						fValueText.setText(""); //$NON-NLS-1$
					}
					fValueText.setForeground(Display.getCurrent().getSystemColor(SWT.COLOR_BLACK));
				}
			});
			fValueText.addModifyListener(new ModifyListener() {
				@Override
                public void modifyText(ModifyEvent e) {
					if (! fValueText.getForeground().equals(Display.getCurrent().getSystemColor(SWT.COLOR_GRAY))) {
						fNode.setValue(fValueText.getText());
						fViewer.refresh(fNode);
					}
				}
			});
		}

