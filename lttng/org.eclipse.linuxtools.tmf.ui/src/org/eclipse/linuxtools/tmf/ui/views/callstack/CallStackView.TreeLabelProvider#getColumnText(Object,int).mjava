        @Override
        public String getColumnText(Object element, int columnIndex) {
            if (element instanceof ThreadEntry) {
                if (columnIndex == 0) {
                    return ((ThreadEntry) element).getName();
                }
            } else if (element instanceof CallStackEntry) {
                CallStackEntry entry = (CallStackEntry) element;
                if (columnIndex == 0) {
                    return entry.getFunctionName();
                } else if (columnIndex == 1) {
                    if (entry.getFunctionName().length() > 0) {
                        int depth = entry.getStackLevel();
                        return Integer.toString(depth);
                    }
                } else if (columnIndex == 2) {
                    if (entry.getFunctionName().length() > 0) {
                        ITmfTimestamp ts = new TmfTimestamp(entry.getStartTime(), ITmfTimestamp.NANOSECOND_SCALE);
                        return ts.toString();
                    }
                } else if (columnIndex == 3) {
                    if (entry.getFunctionName().length() > 0) {
                        ITmfTimestamp ts = new TmfTimestamp(entry.getEndTime(), ITmfTimestamp.NANOSECOND_SCALE);
                        return ts.toString();
                    }
                } else if (columnIndex == 4) {
                    if (entry.getFunctionName().length() > 0) {
                        ITmfTimestamp ts = new TmfTimestampDelta(entry.getEndTime() - entry.getStartTime(), ITmfTimestamp.NANOSECOND_SCALE);
                        return ts.toString();
                    }
                }
            }
            return ""; //$NON-NLS-1$
        }

