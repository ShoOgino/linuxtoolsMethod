    /**
     * Returns visible part of rectangle, or null if rectangle is not visible. Rectangle is expressed in contents
     *         coordinates.
     * @return visible part of rectangle, or null if rectangle is not visible. 
     */
    public Rectangle getVisiblePart(int _x, int _y, int _w, int _h) {
        if (_x + _w < getContentsX()) {
            return null;
        }
        if (_y + _h < getContentsY()) {
            return null;
        }
        int vr = getContentsX() + getVisibleWidth();
        int vb = getContentsY() + getVisibleHeight();
        if (_x > vr) {
            return null;
        }
        if (_y > vb) {
            return null;
        }
        int rr = _x + _w, rb = _y + _h;
        int nl = Math.max(_x, getContentsX()), nt = Math.max(_y, getContentsY()), nr = Math.min(rr, vr), nb = Math.min(rb, vb);
        Rectangle c = new Rectangle(nl, nt, nr - nl, nb - nt);
        return c;
    }

