    /**
     * Returns visible part of rectangle, or null if rectangle is not visible. Rectangle is expressed in contents
     *         coordinates.
     *
     * @param xValue x contents coordinates of rectangle.
     * @param yValue y contents coordinates of rectangle.
     * @param width width of rectangle.
     * @param height height of rectangle.
     * @return visible part of rectangle, or null if rectangle is not visible. 
     */
    public Rectangle getVisiblePart(int xValue, int yYalue, int width, int height) {
        if (xValue + width < getContentsX()) {
            return null;
        }
        if (yYalue + height < getContentsY()) {
            return null;
        }
        int vr = getContentsX() + getVisibleWidth();
        int vb = getContentsY() + getVisibleHeight();
        if (xValue > vr) {
            return null;
        }
        if (yYalue > vb) {
            return null;
        }
        int rr = xValue + width, rb = yYalue + height;
        int nl = Math.max(xValue, getContentsX()), nt = Math.max(yYalue, getContentsY()), nr = Math.min(rr, vr), nb = Math.min(rb, vb);
        return new Rectangle(nl, nt, nr - nl, nb - nt);
    }

