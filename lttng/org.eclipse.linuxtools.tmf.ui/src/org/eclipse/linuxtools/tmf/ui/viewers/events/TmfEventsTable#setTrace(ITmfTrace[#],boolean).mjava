    /**
     * @param trace
     * @param disposeOnClose
     *            true if the trace should be disposed when the table is disposed
     */
    public void setTrace(final ITmfTrace<?> trace, final boolean disposeOnClose) {
        if ((fTrace != null) && fDisposeOnClose)
            fTrace.dispose();
        fTrace = trace;
        fPackDone = false;
        fSelectedRank = 0;
        fDisposeOnClose = disposeOnClose;

        // Perform the updates on the UI thread
        fTable.getDisplay().syncExec(new Runnable() {
            @Override
            public void run() {
                fTable.removeAll();
                fCache.setTrace(fTrace); // Clear the cache
                if (fTrace != null) {
                    if (!fTable.isDisposed() && (fTrace != null))
                        if (fTable.getData(Key.FILTER_OBJ) == null)
                            fTable.setItemCount((int) fTrace.getNbEvents() + 1); // +1 for header row
                        else {
                            stopFilterThread();
                            fFilterMatchCount = 0;
                            fFilterCheckCount = 0;
                            fTable.setItemCount(3); // +1 for header row, +2 for top and bottom filter status rows
                            startFilterThread();
                        }
                    fRawViewer.setTrace(fTrace);
                }
            }
        });
    }

