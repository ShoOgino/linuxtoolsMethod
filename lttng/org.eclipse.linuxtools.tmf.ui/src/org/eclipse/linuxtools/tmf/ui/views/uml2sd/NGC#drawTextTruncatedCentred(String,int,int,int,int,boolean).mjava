    /*
     * (non-Javadoc)
     * @see org.eclipse.linuxtools.tmf.ui.views.uml2sd.drawings.IGC#drawTextTruncatedCentred(java.lang.String, int, int, int, int, boolean)
     */
    @Override
    public void drawTextTruncatedCentred(String name, int xValue, int yValue, int width, int height, boolean trans) {
        Point tx = fContext.textExtent(name);
        xValue = Math.round(xValue * fView.fZoomValue);
        int y = 0;
        // Workaround to avoid round problems for some special cases (not very nice)
        if (yValue != getContentsY()) {
            yValue = Math.round(yValue * fView.fZoomValue);
            y = fView.contentsToViewY(yValue);
        }
        width = Math.round(width * fView.fZoomValue);
        height = Math.round(height * fView.fZoomValue);
        int x = fView.contentsToViewX(xValue);
        if (tx.y > height) {
            return;
        }
        
        // Adjust height and y
        if (y < -fVisibleScreenBounds) {
            height = height + y + fVisibleScreenBounds;
            y = -fVisibleScreenBounds;
        }
        if ((height < -fVisibleScreenBounds) && (y + height < -fVisibleScreenBounds)) {
            height = -fVisibleScreenBounds;
        } else if (height + y > fView.getVisibleHeight() + fVisibleScreenBounds) {
            height = fView.getVisibleHeight() + fVisibleScreenBounds - y;
        }
        
        if (tx.x <= width) {
            localDrawText(name, x + 1 + (width - tx.x) / 2, y + 1 + (height - tx.y) / 2, trans);
        } else {
            String nameToDisplay = name;
            for (int i = name.length() - 1; i >= 0 && fContext.textExtent(nameToDisplay).x >= width; i--) {
                nameToDisplay = name.substring(0, i);
            }
            int dotCount = 0;
            for (int i = 1; i <= 3 && nameToDisplay.length() - i > 0; i++) {
                dotCount++;
            }
            nameToDisplay = nameToDisplay.substring(0, nameToDisplay.length() - dotCount);
            StringBuffer buf = new StringBuffer(nameToDisplay);
            for (int i = 0; i < dotCount; i++) {
                buf.append("."); //$NON-NLS-1$
            }
            nameToDisplay = buf.toString();
            localDrawText(nameToDisplay, x + 1 + (width - fContext.textExtent(nameToDisplay).x) / 2, y + 1 + (height - fContext.textExtent(nameToDisplay).y) / 2, trans);
        }
    }

