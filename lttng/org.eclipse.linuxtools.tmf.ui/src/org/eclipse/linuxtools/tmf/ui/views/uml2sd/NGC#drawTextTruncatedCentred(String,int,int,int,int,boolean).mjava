    @Override
    public void drawTextTruncatedCentred(String name, int _x, int _y, int width, int height, boolean trans) {
        Point tx = context.textExtent(name);
        _x = Math.round(_x * view.zoomValue);
        int y = 0;
        // Workaround to avoid round problems for some special cases (not very nice)
        if (_y != getContentsY()) {
            _y = Math.round(_y * view.zoomValue);
            y = view.contentsToViewY(_y);
        }
        width = Math.round(width * view.zoomValue);
        height = Math.round(height * view.zoomValue);
        int x = view.contentsToViewX(_x);
        if (tx.y > height)
            return;
        
        // Adjust height and y
        if (y < -vscreen_bounds) {
            height = height + y + vscreen_bounds;
            y = -vscreen_bounds;
        }
        if ((height < -vscreen_bounds) && (y + height < -vscreen_bounds))
            height = -vscreen_bounds;
        else if (height + y > view.getVisibleHeight() + vscreen_bounds)
            height = view.getVisibleHeight() + vscreen_bounds - y;
        
        if (tx.x <= width) {
            localDrawText(name, x + 1 + (width - tx.x) / 2, y + 1 + (height - tx.y) / 2, trans);
        } else {
            String nameToDisplay = name;
            for (int i = name.length() - 1; i >= 0 && context.textExtent(nameToDisplay).x >= width; i--)
                nameToDisplay = name.substring(0, i);
            int dotCount = 0;
            for (int i = 1; i <= 3 && nameToDisplay.length() - i > 0; i++)
                dotCount++;
            nameToDisplay = nameToDisplay.substring(0, nameToDisplay.length() - dotCount);
            StringBuffer buf = new StringBuffer(nameToDisplay);
            for (int i = 0; i < dotCount; i++) {
                buf.append("."); //$NON-NLS-1$
                //				nameToDisplay = nameToDisplay + "."; //$NON-NLS-1$
            }
            nameToDisplay = buf.toString();
            localDrawText(nameToDisplay, x + 1 + (width - context.textExtent(nameToDisplay).x) / 2, y + 1 + (height - context.textExtent(nameToDisplay).y) / 2, trans);
        }
    }

