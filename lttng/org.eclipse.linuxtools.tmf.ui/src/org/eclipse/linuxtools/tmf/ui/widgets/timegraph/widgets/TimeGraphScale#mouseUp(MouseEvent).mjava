    @Override
    public void mouseUp(MouseEvent e) {
        if (e.button == 1 && _dragState == 1) {
            setCapture(false);
            _dragState = 0;

            // Notify time provider to check the need for listener notification
            if (_dragX != _dragX0 && _timeProvider.getTime0() != _timeProvider.getTime1()) {
                _timeProvider.setStartFinishTimeNotify(_timeProvider.getTime0(), _timeProvider.getTime1());
            }
        } else if (e.button == 3 && _dragState == 3 && null != _timeProvider) {
            _dragState = 0;
            if (_dragX0 == _dragX || _timeProvider.getTime0() == _timeProvider.getTime1()) {
                return;
            }
            int timeSpace = _timeProvider.getTimeSpace();
            int leftSpace = _timeProvider.getNameSpace();
            int x = Math.max(0, e.x - leftSpace);
            if (timeSpace > 0) {
                _dragX = x;
                if (_dragX0 > _dragX) { // drag right to left
                    _dragX = _dragX0;
                    _dragX0 = x;
                }
                long time0 = _time0bak + (long) ((_time1bak - _time0bak) * ((double) _dragX0 / timeSpace));
                long time1 = _time0bak + (long) ((_time1bak - _time0bak) * ((double) _dragX / timeSpace));

                _timeProvider.setStartFinishTimeNotify(time0, time1);
                _time0bak = _timeProvider.getTime0();
                _time1bak = _timeProvider.getTime1();
            }
        }
    }

