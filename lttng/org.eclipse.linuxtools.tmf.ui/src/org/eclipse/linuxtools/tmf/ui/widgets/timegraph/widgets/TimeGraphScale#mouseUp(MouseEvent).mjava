    @Override
    public void mouseUp(MouseEvent e) {
        if (e.button == LEFT_BUTTON && fDragState == LEFT_BUTTON) {
            setCapture(false);
            fDragState = NO_BUTTON;

            // Notify time provider to check the need for listener notification
            if (fDragX != fDragX0 && fTimeProvider.getTime0() != fTimeProvider.getTime1()) {
                fTimeProvider.setStartFinishTimeNotify(fTimeProvider.getTime0(), fTimeProvider.getTime1());
            }
        } else if (e.button == RIGHT_BUTTON && fDragState == RIGHT_BUTTON && null != fTimeProvider) {
            fDragState = NO_BUTTON;
            if (fDragX0 == fDragX || fTimeProvider.getTime0() == fTimeProvider.getTime1()) {
                redraw();
                return;
            }
            int timeSpace = fTimeProvider.getTimeSpace();
            int leftSpace = fTimeProvider.getNameSpace();
            int x = Math.max(0, e.x - leftSpace);
            if (timeSpace > 0) {
                fDragX = x;
                if (fDragX0 > fDragX) { // drag right to left
                    fDragX = fDragX0;
                    fDragX0 = x;
                }
                long time0 = fTime0bak + (long) ((fTime1bak - fTime0bak) * ((double) fDragX0 / timeSpace));
                long time1 = fTime0bak + (long) ((fTime1bak - fTime0bak) * ((double) fDragX / timeSpace));

                fTimeProvider.setStartFinishTimeNotify(time0, time1);
                fTime0bak = fTimeProvider.getTime0();
                fTime1bak = fTimeProvider.getTime1();
            }
        }
    }

