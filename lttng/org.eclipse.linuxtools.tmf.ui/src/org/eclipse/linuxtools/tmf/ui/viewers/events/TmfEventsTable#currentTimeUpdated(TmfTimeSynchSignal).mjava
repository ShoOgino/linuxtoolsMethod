    @TmfSignalHandler
    public void currentTimeUpdated(final TmfTimeSynchSignal signal) {
        if (signal.getSource() != fTable && fTrace != null) {
            Job job = new Job("seeking...") {
                @Override
                protected IStatus run(IProgressMonitor monitor) {
                    final int index = (int) fTrace.getRank(signal.getCurrentTime());
                    // Perform the updates on the UI thread
                    fTable.getDisplay().asyncExec(new Runnable() {
                        public void run() {
                            fTable.setSelection(index);
                            // The timestamp might not correspond to an actual event
                            // and the selection will point to the next experiment event.
                            // But we would like to display both the event before and
                            // after the selected timestamp.
                            // This works fine by default except when the selected event
                            // is the top displayed event. The following ensures that we
                            // always see both events.
                            if ((index > 0) && (index == fTable.getTopIndex())) {
                                fTable.setTopIndex(index - 1);
                            }
                        }
                    });
                    return Status.OK_STATUS;
                }};
            job.schedule();
        }
    }

