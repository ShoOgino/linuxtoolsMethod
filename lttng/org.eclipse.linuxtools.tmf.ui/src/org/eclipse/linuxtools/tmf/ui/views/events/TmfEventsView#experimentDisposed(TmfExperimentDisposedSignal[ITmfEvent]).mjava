	/**
	 * Experiment disposed, a callback called when the TmfSignal "TmfExperimentDisposedSignal" is sent.
	 * @param signal the signal that triggered the callback
     */
	@SuppressWarnings("unchecked")
	@TmfSignalHandler
	public void experimentDisposed(TmfExperimentDisposedSignal<ITmfEvent> signal) {
		// Clear the trace reference
		TmfExperiment<ITmfEvent> experiment = (TmfExperiment<ITmfEvent>) signal.getExperiment();
		if (experiment.equals(fExperiment)) {
			fEventsTable.setTrace(null, false);

            Activator.getDefault().getWorkbench().getWorkbenchWindows()[0].getShell().getDisplay().syncExec(new Runnable() {
                @Override
                public void run() {
                    setPartName(fTitlePrefix);
                }
            });

            if ((fExperiment != null) && (fExperiment.getBookmarksFile() != null)) {
                ResourcesPlugin.getWorkspace().removeResourceChangeListener(this);
            }

		}
	}

