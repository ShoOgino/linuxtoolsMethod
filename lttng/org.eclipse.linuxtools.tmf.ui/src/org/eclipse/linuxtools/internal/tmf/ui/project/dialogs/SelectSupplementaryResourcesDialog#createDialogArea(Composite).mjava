    @Override
    protected Control createDialogArea(Composite parent) {
        Composite composite = (Composite) super.createDialogArea(parent);
        composite.setLayout(new GridLayout());
        composite.setLayoutData(new GridData(GridData.FILL_BOTH));

        Group contextGroup = new Group(composite, SWT.SHADOW_NONE);
        contextGroup.setText(Messages.SelectSpplementaryResources_ResourcesGroupTitle);
        contextGroup.setLayout(new GridLayout());
        contextGroup.setLayoutData(new GridData(GridData.FILL_BOTH));
        
        fTreeViewer = new CheckboxTreeViewer(contextGroup, SWT.MULTI | SWT.H_SCROLL | SWT.V_SCROLL);
        GridData data = new GridData(GridData.FILL_BOTH);
        Tree tree = fTreeViewer.getTree();
        tree.setLayoutData(data);
        fTreeViewer.setContentProvider(new ITreeContentProvider() {

            @Override
            public void inputChanged(Viewer viewer, Object oldInput, Object newInput) {
            }

            @Override
            public void dispose() {
            }

            @Override
            public boolean hasChildren(Object element) {
                if (element instanceof IResource[]) {
                    return true;
                }
                return false;
            }

            @Override
            public Object getParent(Object element) {
                return null;
            }

            @Override
            public Object[] getElements(Object inputElement) {
                return getChildren(inputElement);
            }

            @Override
            public Object[] getChildren(Object parentElement) {
                if (parentElement instanceof IResource[]) {
                    return (Object[]) parentElement;
                }
                return null;            
            }
        });

//        fTreeViewer.setLabelProvider(new WorkbenchLabelProvider());
        
      fTreeViewer.setLabelProvider(new LabelProvider() {
          @Override
          public String getText(Object element) {
              if (element instanceof IResource) {
                  IResource resource = (IResource) element;
                  // show also trace name 
                  return resource.getParent().getName() + File.separator + resource.getName();
              }
              return super.getText(element);
          } 
      });
        fTreeViewer.setInput(fAvailableResources);

        getShell().setMinimumSize(new Point(300, 150));

        return composite;
    }

