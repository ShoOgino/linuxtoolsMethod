    /* (non-Javadoc)
     * @see org.eclipse.core.expressions.IPropertyTester#test(java.lang.Object, java.lang.String, java.lang.Object[], java.lang.Object)
     */
    @Override
    public boolean test(Object receiver, String property, Object[] args, Object expectedValue) {

        // Check if the selected elements are in the trace folder
        if (isInTraceFolder.equals(property)) {
            if (receiver != null && receiver instanceof IStructuredSelection) {
                Iterator<?> iter = ((IStructuredSelection) receiver).iterator();
                while (iter.hasNext()) {
                    Object item = iter.next();
                    if (item instanceof TmfTraceElement) {
                        TmfTraceElement trace = (TmfTraceElement) item;
                        if (!(trace.getParent() instanceof TmfTraceFolder)) {
                            return false;
                        }
                    } else {
                        return false;
                    }
                }
                return true;
            }
        }

        // Check if the parent of a trace element is an experiment
        if (isExperimentTrace.equals(property)) {
            if (receiver != null && receiver instanceof TmfTraceElement) {
            TmfTraceElement trace = (TmfTraceElement) receiver;
                return trace.getParent() instanceof TmfExperimentElement;
            }
            return false;
        }

        if (hasHistoryFile.equals(property)) {
            if (receiver == null) {
                return false;
            }

            if (receiver instanceof TmfTraceElement) {
                TmfTraceElement trace = (TmfTraceElement) receiver;
                // If trace is under an experiment, use the original trace from the traces folder
                trace = trace.getElementUnderTraceFolder();
                return trace.hasSupplementaryFiles();
            } else if (receiver instanceof TmfExperimentElement) {
                TmfExperimentElement trace = (TmfExperimentElement) receiver;
                for (TmfTraceElement aTrace : trace.getTraces()) {
                    // Since trace is under an experiment, use the original trace from the traces folder
                    aTrace = aTrace.getElementUnderTraceFolder();
                    return aTrace.hasSupplementaryFiles();
                }
            }
            return false;
        }

        return false;
    }

