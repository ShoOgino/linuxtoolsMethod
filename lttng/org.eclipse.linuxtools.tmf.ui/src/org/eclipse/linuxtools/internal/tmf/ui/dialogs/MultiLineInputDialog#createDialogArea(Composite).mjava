    @Override
    protected Control createDialogArea(Composite parent) {
        Composite composite = (Composite) super.createDialogArea(parent);
        final Text text = getText();

        /* create dialog message label here instead because default implementation uses GRAB_VERTICAL */
        if (dialogMessage != null) {
            Label label = new Label(composite, SWT.WRAP);
            label.setText(dialogMessage);
            GridData data = new GridData(GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL
                    | GridData.VERTICAL_ALIGN_CENTER);
            data.widthHint = convertHorizontalDLUsToPixels(IDialogConstants.MINIMUM_MESSAGE_AREA_WIDTH);
            label.setLayoutData(data);
            label.setFont(parent.getFont());
            label.moveAbove(text);
        }

        /* modify text layout data here because default implementation doesn't fill vertically */
        GridData gridData = new GridData(GridData.FILL_BOTH);
        gridData.widthHint = convertHorizontalDLUsToPixels(250);
        gridData.heightHint = convertHeightInCharsToPixels(3);
        text.setLayoutData(gridData);

        text.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.character == SWT.CR) {
                    if (submitOnCR) {
                        /* submit the dialog */
                        e.doit = false;
                        okPressed();
                        return;
                    }
                } else if (e.character == SWT.TAB) {
                    /* don't insert a tab character in the text */
                    e.doit = false;
                    text.traverse(SWT.TRAVERSE_TAB_NEXT);
                }
                /* don't allow CR to submit anymore */
                submitOnCR = false;
            }
        });

        text.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseDown(MouseEvent e) {
                /* don't allow CR to submit anymore */
                submitOnCR = false;
            }
        });

        return composite;
    }

