    @Override
    public Object execute(ExecutionEvent event) {

        ISelection currentSelection = HandlerUtil.getCurrentSelection(event);
        // Menu Selection is not null for context-sensitive menu
        ISelection menuSelection  = HandlerUtil.getActiveMenuSelection(event);

        // Get trace path
        final Shell shell = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getShell();
        FileDialog fd = new FileDialog(shell);
        fd.setText(Messages.OpenFileHandler_SelectTraceFile);
        String filePath = fd.open();
        if (filePath == null) {
            return null;
        }

        try {

            TmfTraceFolder destinationFolder;

            if ((menuSelection != null) && (currentSelection instanceof IStructuredSelection)) {
                // If handler is called from the context sensitive menu of a tracing project import to
                // the traces folder from this project
                destinationFolder = TmfHandlerUtil.getTraceFolderFromSelection(currentSelection);
            } else {
                // If handler is called from file menu import into default tracing project
                IProject project = TmfProjectRegistry.createProject(
                        TmfCommonConstants.DEFAULT_TRACE_PROJECT_NAME, null, new NullProgressMonitor());
                TmfProjectElement projectElement = TmfProjectRegistry.getProject(project, true);
                destinationFolder = projectElement.getTracesFolder();
            }

            TmfOpenTraceHelper.openTraceFromPath(destinationFolder, filePath, shell);
        } catch (CoreException e) {
            Activator.getDefault().logError(e.getMessage(), e);
        }
        return null;
    }

