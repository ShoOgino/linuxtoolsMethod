    /**
     * Drop a trace by copying a resource in a target experiment
     * 
     * @param sourceResource the source resource
     * @param targetExperiment the target experiment
     * @return true if successful
     */
    private boolean drop(IResource sourceResource, TmfExperimentElement targetExperiment) {
        boolean doit = true;

        //Use local variable to avoid parameter assignment
        IResource sourceResourceToUse = sourceResource;

        TmfProjectElement projectElement = TmfProjectRegistry.getProject(sourceResourceToUse.getProject());
        for (TmfTraceElement trace : targetExperiment.getTraces()) {
            if (trace.getName().equals(sourceResourceToUse.getName())) {
                doit = false;
                break;
            }
        }
        if (doit && !targetExperiment.getProject().equals(projectElement)) {
            for (TmfTraceElement trace : targetExperiment.getProject().getTracesFolder().getTraces()) {
                if (trace.getName().equals(sourceResourceToUse.getName())) {
                    doit = false;
                    break;
                }
            }
            if (doit) {
                try {
                    IPath destination = targetExperiment.getProject().getTracesFolder().getResource().getFullPath().addTrailingSeparator().append(sourceResourceToUse.getName());
                    sourceResourceToUse.copy(destination, false, null);
                    cleanupBookmarks(destination);
                    // use the copied resource for the experiment
                    if (sourceResourceToUse.getType() == IResource.FILE) {
                        sourceResourceToUse = targetExperiment.getProject().getTracesFolder().getResource().getFile(sourceResourceToUse.getName());
                    } else if (sourceResourceToUse.getType() == IResource.FOLDER) {
                        sourceResourceToUse = targetExperiment.getProject().getTracesFolder().getResource().getFolder(sourceResourceToUse.getName());
                    }
                } catch (CoreException e) {
                    doit = false;
                    displayException(e);
                }
            }
        }
        if (doit) {
            if (sourceResourceToUse != null && sourceResourceToUse.exists()) {
                createLink(targetExperiment.getResource(), sourceResourceToUse);
                return true;
            }
        }
        return false;
    }

