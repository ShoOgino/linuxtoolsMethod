    private void updatePreviewTable() {
        final int CACHE_SIZE = 50;
        definition.outputs = extractOutputs();
        tmpFile = Activator.getDefault().getStateLocation().addTrailingSeparator().append("customwizard.tmp").toFile(); //$NON-NLS-1$

        try (final FileWriter writer = new FileWriter(tmpFile);) {
            writer.write(wizard.inputPage.getInputText());
        } catch (final IOException e) {
            Activator.getDefault().logError("Error creating CustomTxtTrace. File:" + tmpFile.getAbsolutePath(), e); //$NON-NLS-1$
        }

        try {
            final CustomTxtTrace trace = new CustomTxtTrace(null, definition, tmpFile.getAbsolutePath(), CACHE_SIZE) {
                @Override
                protected ITmfTraceIndexer createIndexer(int interval) {
                    return new TmfCheckpointIndexer(this, interval);
                }
            };
            trace.getIndexer().buildIndex(0, TmfTimeRange.ETERNITY, false);
            previewTable.dispose();
            previewTable = new CustomEventsTable(definition, tableContainer, CACHE_SIZE);
            previewTable.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true));
            previewTable.setTrace(trace, true);
        } catch (final TmfTraceException e) {
            Activator.getDefault().logError("Error creating CustomTxtTrace. File:" + tmpFile.getAbsolutePath(), e); //$NON-NLS-1$
        }

        tableContainer.layout();
        container.layout();
    }

