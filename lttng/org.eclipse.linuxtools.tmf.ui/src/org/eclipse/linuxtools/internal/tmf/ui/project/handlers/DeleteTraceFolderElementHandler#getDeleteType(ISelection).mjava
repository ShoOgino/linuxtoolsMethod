    private static DeleteType getDeleteType(ISelection selection) {
        int numTracesFolder = 0;
        int numTraceFolder = 0;
        int numTraces = 0;
        int numTracesUnderExperiment = 0;

        @SuppressWarnings("rawtypes")
        Iterator iterator = ((IStructuredSelection) selection).iterator();
        while (iterator.hasNext()) {
            Object next = iterator.next();
            if ((next instanceof TmfTracesFolder)) {
                numTracesFolder++;
            } else if (next instanceof TmfTraceFolder) {
                numTraceFolder++;
            } else if (next instanceof TmfTraceElement) {
                TmfTraceElement traceElement = (TmfTraceElement) next;
                if (traceElement.getParent() instanceof TmfExperimentElement) {
                    numTracesUnderExperiment++;
                } else {
                    numTraces++;
                }
            }
        }

        int total = numTraceFolder + numTracesFolder + numTracesUnderExperiment + numTraces;

        if (numTracesFolder == total) {
            return DeleteType.CLEAR_TRACES_FOLDER;
        }

        if (numTraceFolder == total) {
            return DeleteType.DELETE_TRACE_FOLDERS;
        }

        if (numTraces == total) {
            return DeleteType.DELETE_TRACES;
        }

        if (numTracesUnderExperiment == total) {
            return DeleteType.REMOVE_TRACES_FROM_EXPERIMENT;
        }

        return DeleteType.DELETE_GENERIC;
    }

