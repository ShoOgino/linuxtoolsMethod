        @Override
        public synchronized final void run(IProgressMonitor monitor)
                throws InvocationTargetException, InterruptedException {
            final InvocationTargetException[] iteHolder = new InvocationTargetException[1];
            try {
                IWorkspaceRunnable workspaceRunnable = new IWorkspaceRunnable() {
                    @Override
                    public void run(IProgressMonitor pm) throws CoreException {
                        try {
                            execute(pm);
                        } catch (InvocationTargetException e) {
                            // Pass it outside the workspace runnable
                            iteHolder[0] = e;
                        } catch (InterruptedException e) {
                            // Re-throw as OperationCanceledException, which will be
                            // caught and re-thrown as InterruptedException below.
                            throw new OperationCanceledException(e.getMessage());
                        }
                        // CoreException and OperationCanceledException are propagated
                    }
                };

                IWorkspace workspace = ResourcesPlugin.getWorkspace();
                workspace.run(workspaceRunnable, workspace.getRoot(), IWorkspace.AVOID_UPDATE, monitor);
            } catch (CoreException e) {
                throw new InvocationTargetException(e);
            } catch (OperationCanceledException e) {
                throw new InterruptedException(e.getMessage());
            }
            // Re-throw the InvocationTargetException, if any occurred
            if (iteHolder[0] != null) {
                throw iteHolder[0];
            }
        }

