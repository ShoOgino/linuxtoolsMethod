    /**
     * Create a link and replace what was already there.
     *
     * @param parentFolder
     *            the resource to import to, does not contain the element name
     * @param location
     *            where the resource (file/directory) is located
     * @param targetName
     *            the name to display
     * @return the resource created. Should not be null
     * @throws CoreException
     *             an exception made by createLink.
     */
    public static IResource createLink(IFolder parentFolder, IPath location, String targetName) throws CoreException {
        File source = new File(location.toString());
        IResource res = null;
        IWorkspace workspace = ResourcesPlugin.getWorkspace();
        if (source.isDirectory()) {
            IFolder folder = parentFolder.getFolder(targetName);
            IStatus result = workspace.validateLinkLocation(folder, location);
            if (result.isOK()) {
                folder.createLink(location, IResource.REPLACE, new NullProgressMonitor());
            } else {
                Activator.getDefault().logError(result.getMessage());
            }
        } else {
            IFile file = parentFolder.getFile(targetName);
            IStatus result = workspace.validateLinkLocation(file, location);
            if (result.isOK()) {
                file.createLink(location, IResource.REPLACE,
                        new NullProgressMonitor());
            } else {
                Activator.getDefault().logError(result.getMessage());
            }
        }
        forceFolderRefresh(parentFolder);
        res = parentFolder.findMember(targetName);
        return res;
    }

