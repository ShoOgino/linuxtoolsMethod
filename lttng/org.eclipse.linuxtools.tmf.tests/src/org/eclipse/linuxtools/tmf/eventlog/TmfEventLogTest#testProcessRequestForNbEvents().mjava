    @Test
    public void testProcessRequestForNbEvents() throws Exception {

        TmfTrace eventLog = new TmfTrace("MyEventLog", fStream);

        final int NB_EVENTS  = 10 * 1000;
        final int BLOCK_SIZE = 100;
        final Vector<TmfEvent> requestedEvents = new Vector<TmfEvent>();

        TmfTimeWindow range = new TmfTimeWindow(TmfTimestamp.BigBang, TmfTimestamp.BigCrunch);
        final TmfEventRequest request = new TmfEventRequest(range, 0, NB_EVENTS, BLOCK_SIZE) {
            @Override
            public void newEvents(Vector<TmfEvent> events) {
                for (TmfEvent e : events) {
                    requestedEvents.add(e);
                }
            }
        };
        eventLog.process(request, true);

        assertEquals("nbEvents", NB_EVENTS, requestedEvents.size());
        assertTrue("isCompleted",  request.isCompleted());
        assertFalse("isCancelled", request.isCancelled());

        // Ensure that we have distinct events.
        // Don't go overboard: we are not validating the stub! 
        for (int i = 0; i < NB_EVENTS; i++) {
            assertEquals("Distinct events", i, requestedEvents.get(i).getTimestamp().getValue());
        }
    }

