    /**
     * Test that verify if the protocol getter methods are working properly.
     */
    @Test
    public void TestgetProtocols() {
        List<PcapProtocol> list = new ArrayList<>();
        List<PcapProtocol> manualListLayer = new ArrayList<>();
        for (int i = PcapProtocolValues.LAYER_0; i <= PcapProtocolValues.LAYER_7; i++) {
            List<PcapProtocol> listLayer = PcapProtocol.getProtocolsOnLayer(i);
            list.addAll(listLayer);

            manualListLayer.clear();
            switch (i) {
            case PcapProtocolValues.LAYER_0:
                manualListLayer.add(PcapProtocol.PCAP);
                break;
            case PcapProtocolValues.LAYER_1:
                break;
            case PcapProtocolValues.LAYER_2:
                manualListLayer.add(PcapProtocol.ETHERNET_II);
                break;
            case PcapProtocolValues.LAYER_3:
                manualListLayer.add(PcapProtocol.IPV4);
                break;
            case PcapProtocolValues.LAYER_4:
                manualListLayer.add(PcapProtocol.TCP);
                manualListLayer.add(PcapProtocol.UDP);
                break;
            case PcapProtocolValues.LAYER_5:
                break;
            case PcapProtocolValues.LAYER_6:
                break;
            case PcapProtocolValues.LAYER_7:
                manualListLayer.add(PcapProtocol.UNKNOWN);
                break;
            default:
                fail("Illegal layer value!");
            }
            assertEquals(manualListLayer, listLayer);
        }
        assertEquals(PcapProtocol.getAllProtocols(), list);

    }

