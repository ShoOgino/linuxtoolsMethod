	// $ANTLR start "storageClassSpecifier"
	// org/eclipse/linuxtools/ctf/parser/CTFParser.g:279:1: storageClassSpecifier : TYPEDEFTOK ;
	public final CTFParser.storageClassSpecifier_return storageClassSpecifier() throws RecognitionException {
		CTFParser.storageClassSpecifier_return retval = new CTFParser.storageClassSpecifier_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token TYPEDEFTOK39=null;

		CommonTree TYPEDEFTOK39_tree=null;

		try {
			// org/eclipse/linuxtools/ctf/parser/CTFParser.g:280:3: ( TYPEDEFTOK )
			// org/eclipse/linuxtools/ctf/parser/CTFParser.g:280:5: TYPEDEFTOK
			{
			root_0 = (CommonTree)adaptor.nil();


			TYPEDEFTOK39=(Token)match(input,TYPEDEFTOK,FOLLOW_TYPEDEFTOK_in_storageClassSpecifier1049); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			TYPEDEFTOK39_tree = (CommonTree)adaptor.create(TYPEDEFTOK39);
			adaptor.addChild(root_0, TYPEDEFTOK39_tree);
			}

			if ( state.backtracking==0 ) { typedefOn(); }
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}

		    catch (RecognitionException e) {
		        throw e;
		    }

		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "storageClassSpecifier"

