	// $ANTLR start "CHARACTER_LITERAL"
	public final void mCHARACTER_LITERAL() throws RecognitionException {
		try {
			int _type = CHARACTER_LITERAL;
			int _channel = DEFAULT_TOKEN_CHANNEL;
			// org/eclipse/linuxtools/ctf/parser/CTFLexer.g:162:19: ( ( STRINGPREFIX )? SINGLEQUOTE ( CHAR_CONTENT )+ SINGLEQUOTE )
			// org/eclipse/linuxtools/ctf/parser/CTFLexer.g:162:21: ( STRINGPREFIX )? SINGLEQUOTE ( CHAR_CONTENT )+ SINGLEQUOTE
			{
			// org/eclipse/linuxtools/ctf/parser/CTFLexer.g:162:21: ( STRINGPREFIX )?
			int alt21=2;
			int LA21_0 = input.LA(1);
			if ( (LA21_0=='L') ) {
				alt21=1;
			}
			switch (alt21) {
				case 1 :
					// org/eclipse/linuxtools/ctf/parser/CTFLexer.g:
					{
					if ( input.LA(1)=='L' ) {
						input.consume();
					}
					else {
						MismatchedSetException mse = new MismatchedSetException(null,input);
						recover(mse);
						throw mse;
					}
					}
					break;

			}

			mSINGLEQUOTE(); 

			// org/eclipse/linuxtools/ctf/parser/CTFLexer.g:162:47: ( CHAR_CONTENT )+
			int cnt22=0;
			loop22:
			while (true) {
				int alt22=2;
				int LA22_0 = input.LA(1);
				if ( ((LA22_0 >= '\u0000' && LA22_0 <= '&')||(LA22_0 >= '(' && LA22_0 <= '\uFFFF')) ) {
					alt22=1;
				}

				switch (alt22) {
				case 1 :
					// org/eclipse/linuxtools/ctf/parser/CTFLexer.g:162:47: CHAR_CONTENT
					{
					mCHAR_CONTENT(); 

					}
					break;

				default :
					if ( cnt22 >= 1 ) break loop22;
					EarlyExitException eee = new EarlyExitException(22, input);
					throw eee;
				}
				cnt22++;
			}

			mSINGLEQUOTE(); 

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally {
			// do for sure before leaving
		}
	}
	// $ANTLR end "CHARACTER_LITERAL"

