	// $ANTLR start "enumerator"
	// org/eclipse/linuxtools/ctf/parser/CTFParser.g:480:1: enumerator : enumConstant ( enumeratorValue )? ;
	public final CTFParser.enumerator_return enumerator() throws RecognitionException {
		CTFParser.enumerator_return retval = new CTFParser.enumerator_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		ParserRuleReturnScope enumConstant120 =null;
		ParserRuleReturnScope enumeratorValue121 =null;


		try {
			// org/eclipse/linuxtools/ctf/parser/CTFParser.g:481:3: ( enumConstant ( enumeratorValue )? )
			// org/eclipse/linuxtools/ctf/parser/CTFParser.g:481:5: enumConstant ( enumeratorValue )?
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_enumConstant_in_enumerator2567);
			enumConstant120=enumConstant();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, enumConstant120.getTree());

			// org/eclipse/linuxtools/ctf/parser/CTFParser.g:481:18: ( enumeratorValue )?
			int alt36=2;
			int LA36_0 = input.LA(1);
			if ( (LA36_0==ASSIGNMENT) ) {
				alt36=1;
			}
			switch (alt36) {
				case 1 :
					// org/eclipse/linuxtools/ctf/parser/CTFParser.g:481:18: enumeratorValue
					{
					pushFollow(FOLLOW_enumeratorValue_in_enumerator2569);
					enumeratorValue121=enumeratorValue();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, enumeratorValue121.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}

		    catch (RecognitionException e) {
		        throw e;
		    }

		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "enumerator"

