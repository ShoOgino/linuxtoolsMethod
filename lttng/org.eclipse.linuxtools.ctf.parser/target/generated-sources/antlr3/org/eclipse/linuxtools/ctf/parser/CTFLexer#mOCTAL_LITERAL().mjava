	// $ANTLR start "OCTAL_LITERAL"
	public final void mOCTAL_LITERAL() throws RecognitionException {
		try {
			int _type = OCTAL_LITERAL;
			int _channel = DEFAULT_TOKEN_CHANNEL;
			// org/eclipse/linuxtools/ctf/parser/CTFLexer.g:107:15: ( OCT_PREFIX ( OCT_DIGIT )+ ( INTEGER_TYPES_SUFFIX )? )
			// org/eclipse/linuxtools/ctf/parser/CTFLexer.g:107:17: OCT_PREFIX ( OCT_DIGIT )+ ( INTEGER_TYPES_SUFFIX )?
			{
			mOCT_PREFIX(); 

			// org/eclipse/linuxtools/ctf/parser/CTFLexer.g:107:28: ( OCT_DIGIT )+
			int cnt1=0;
			loop1:
			while (true) {
				int alt1=2;
				int LA1_0 = input.LA(1);
				if ( ((LA1_0 >= '0' && LA1_0 <= '7')) ) {
					alt1=1;
				}

				switch (alt1) {
				case 1 :
					// org/eclipse/linuxtools/ctf/parser/CTFLexer.g:
					{
					if ( (input.LA(1) >= '0' && input.LA(1) <= '7') ) {
						input.consume();
					}
					else {
						MismatchedSetException mse = new MismatchedSetException(null,input);
						recover(mse);
						throw mse;
					}
					}
					break;

				default :
					if ( cnt1 >= 1 ) break loop1;
					EarlyExitException eee = new EarlyExitException(1, input);
					throw eee;
				}
				cnt1++;
			}

			// org/eclipse/linuxtools/ctf/parser/CTFLexer.g:107:41: ( INTEGER_TYPES_SUFFIX )?
			int alt2=2;
			int LA2_0 = input.LA(1);
			if ( (LA2_0=='L'||LA2_0=='U'||LA2_0=='l'||LA2_0=='u') ) {
				alt2=1;
			}
			switch (alt2) {
				case 1 :
					// org/eclipse/linuxtools/ctf/parser/CTFLexer.g:107:41: INTEGER_TYPES_SUFFIX
					{
					mINTEGER_TYPES_SUFFIX(); 

					}
					break;

			}

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally {
			// do for sure before leaving
		}
	}
	// $ANTLR end "OCTAL_LITERAL"

