	// $ANTLR start "STRING_LITERAL"
	public final void mSTRING_LITERAL() throws RecognitionException {
		try {
			int _type = STRING_LITERAL;
			int _channel = DEFAULT_TOKEN_CHANNEL;
			// org/eclipse/linuxtools/ctf/parser/CTFLexer.g:169:16: ( ( STRINGPREFIX )? DOUBLEQUOTE ( STRING_CONTENT )* DOUBLEQUOTE )
			// org/eclipse/linuxtools/ctf/parser/CTFLexer.g:169:18: ( STRINGPREFIX )? DOUBLEQUOTE ( STRING_CONTENT )* DOUBLEQUOTE
			{
			// org/eclipse/linuxtools/ctf/parser/CTFLexer.g:169:18: ( STRINGPREFIX )?
			int alt24=2;
			int LA24_0 = input.LA(1);
			if ( (LA24_0=='L') ) {
				alt24=1;
			}
			switch (alt24) {
				case 1 :
					// org/eclipse/linuxtools/ctf/parser/CTFLexer.g:
					{
					if ( input.LA(1)=='L' ) {
						input.consume();
					}
					else {
						MismatchedSetException mse = new MismatchedSetException(null,input);
						recover(mse);
						throw mse;
					}
					}
					break;

			}

			mDOUBLEQUOTE(); 

			// org/eclipse/linuxtools/ctf/parser/CTFLexer.g:169:44: ( STRING_CONTENT )*
			loop25:
			while (true) {
				int alt25=2;
				int LA25_0 = input.LA(1);
				if ( ((LA25_0 >= '\u0000' && LA25_0 <= '!')||(LA25_0 >= '#' && LA25_0 <= '\uFFFF')) ) {
					alt25=1;
				}

				switch (alt25) {
				case 1 :
					// org/eclipse/linuxtools/ctf/parser/CTFLexer.g:169:44: STRING_CONTENT
					{
					mSTRING_CONTENT(); 

					}
					break;

				default :
					break loop25;
				}
			}

			mDOUBLEQUOTE(); 

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally {
			// do for sure before leaving
		}
	}
	// $ANTLR end "STRING_LITERAL"

