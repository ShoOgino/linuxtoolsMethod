	// $ANTLR start "pointer"
	// org/eclipse/linuxtools/ctf/parser/CTFParser.g:538:1: pointer : POINTER ( typeQualifierList )? -> ^( POINTER ( typeQualifierList )? ) ;
	public final CTFParser.pointer_return pointer() throws RecognitionException {
		CTFParser.pointer_return retval = new CTFParser.pointer_return();
		retval.start = input.LT(1);

		CommonTree root_0 = null;

		Token POINTER142=null;
		ParserRuleReturnScope typeQualifierList143 =null;

		CommonTree POINTER142_tree=null;
		RewriteRuleTokenStream stream_POINTER=new RewriteRuleTokenStream(adaptor,"token POINTER");
		RewriteRuleSubtreeStream stream_typeQualifierList=new RewriteRuleSubtreeStream(adaptor,"rule typeQualifierList");

		try {
			// org/eclipse/linuxtools/ctf/parser/CTFParser.g:539:3: ( POINTER ( typeQualifierList )? -> ^( POINTER ( typeQualifierList )? ) )
			// org/eclipse/linuxtools/ctf/parser/CTFParser.g:539:5: POINTER ( typeQualifierList )?
			{
			POINTER142=(Token)match(input,POINTER,FOLLOW_POINTER_in_pointer2931); if (state.failed) return retval; 
			if ( state.backtracking==0 ) stream_POINTER.add(POINTER142);

			// org/eclipse/linuxtools/ctf/parser/CTFParser.g:539:13: ( typeQualifierList )?
			int alt46=2;
			int LA46_0 = input.LA(1);
			if ( (LA46_0==CONSTTOK) ) {
				alt46=1;
			}
			switch (alt46) {
				case 1 :
					// org/eclipse/linuxtools/ctf/parser/CTFParser.g:539:13: typeQualifierList
					{
					pushFollow(FOLLOW_typeQualifierList_in_pointer2933);
					typeQualifierList143=typeQualifierList();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) stream_typeQualifierList.add(typeQualifierList143.getTree());
					}
					break;

			}

			// AST REWRITE
			// elements: typeQualifierList, POINTER
			// token labels: 
			// rule labels: retval
			// token list labels: 
			// rule list labels: 
			// wildcard labels: 
			if ( state.backtracking==0 ) {
			retval.tree = root_0;
			RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.getTree():null);

			root_0 = (CommonTree)adaptor.nil();
			// 539:32: -> ^( POINTER ( typeQualifierList )? )
			{
				// org/eclipse/linuxtools/ctf/parser/CTFParser.g:539:35: ^( POINTER ( typeQualifierList )? )
				{
				CommonTree root_1 = (CommonTree)adaptor.nil();
				root_1 = (CommonTree)adaptor.becomeRoot(stream_POINTER.nextNode(), root_1);
				// org/eclipse/linuxtools/ctf/parser/CTFParser.g:539:45: ( typeQualifierList )?
				if ( stream_typeQualifierList.hasNext() ) {
					adaptor.addChild(root_1, stream_typeQualifierList.nextTree());
				}
				stream_typeQualifierList.reset();

				adaptor.addChild(root_0, root_1);
				}

			}


			retval.tree = root_0;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}

		    catch (RecognitionException e) {
		        throw e;
		    }

		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "pointer"

