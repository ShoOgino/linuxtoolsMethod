    // $ANTLR start "ctfKeyword"
    // CTFParser.g:898:1: ctfKeyword : ( ALIGNTOK | EVENTTOK | SIGNEDTOK | STRINGTOK );
    public final CTFParser.ctfKeyword_return ctfKeyword() throws RecognitionException {
        CTFParser.ctfKeyword_return retval = new CTFParser.ctfKeyword_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token set158=null;

        CommonTree set158_tree=null;


          enter("ctfKeyword");

        try {
            // CTFParser.g:906:1: ( ALIGNTOK | EVENTTOK | SIGNEDTOK | STRINGTOK )
            // CTFParser.g:
            {
            root_0 = (CommonTree)adaptor.nil();

            set158=(Token)input.LT(1);
            if ( input.LA(1)==ALIGNTOK||input.LA(1)==EVENTTOK||input.LA(1)==SIGNEDTOK||input.LA(1)==STRINGTOK ) {
                input.consume();
                if ( state.backtracking==0 ) {
                    adaptor.addChild(root_0, (CommonTree)adaptor.create(set158));
                }
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {

                debug_print(input.toString(retval.start,input.LT(-1)));
                exit("ctfKeyword");

            }
        }

        	catch (RecognitionException e)
        	{
        	  throw e;
        	}
        finally {
        }
        return retval;
    }
    // $ANTLR end "ctfKeyword"

