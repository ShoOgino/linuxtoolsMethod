    // $ANTLR start "directDeclaratorSuffix"
    // CTFParser.g:772:1: directDeclaratorSuffix : OPENBRAC directDeclaratorLength CLOSEBRAC -> ^( LENGTH directDeclaratorLength ) ;
    public final CTFParser.directDeclaratorSuffix_return directDeclaratorSuffix() throws RecognitionException {
        CTFParser.directDeclaratorSuffix_return retval = new CTFParser.directDeclaratorSuffix_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token OPENBRAC131=null;
        Token CLOSEBRAC133=null;
        CTFParser.directDeclaratorLength_return directDeclaratorLength132 = null;


        CommonTree OPENBRAC131_tree=null;
        CommonTree CLOSEBRAC133_tree=null;
        RewriteRuleTokenStream stream_OPENBRAC=new RewriteRuleTokenStream(adaptor,"token OPENBRAC");
        RewriteRuleTokenStream stream_CLOSEBRAC=new RewriteRuleTokenStream(adaptor,"token CLOSEBRAC");
        RewriteRuleSubtreeStream stream_directDeclaratorLength=new RewriteRuleSubtreeStream(adaptor,"rule directDeclaratorLength");
        try {
            // CTFParser.g:772:23: ( OPENBRAC directDeclaratorLength CLOSEBRAC -> ^( LENGTH directDeclaratorLength ) )
            // CTFParser.g:773:3: OPENBRAC directDeclaratorLength CLOSEBRAC
            {
            OPENBRAC131=(Token)match(input,OPENBRAC,FOLLOW_OPENBRAC_in_directDeclaratorSuffix2690); if (state.failed) {
                return retval;
            }
            if ( state.backtracking==0 ) {
                stream_OPENBRAC.add(OPENBRAC131);
            }

            pushFollow(FOLLOW_directDeclaratorLength_in_directDeclaratorSuffix2692);
            directDeclaratorLength132=directDeclaratorLength();

            state._fsp--;
            if (state.failed) {
                return retval;
            }
            if ( state.backtracking==0 ) {
                stream_directDeclaratorLength.add(directDeclaratorLength132.getTree());
            }
            CLOSEBRAC133=(Token)match(input,CLOSEBRAC,FOLLOW_CLOSEBRAC_in_directDeclaratorSuffix2694); if (state.failed) {
                return retval;
            }
            if ( state.backtracking==0 ) {
                stream_CLOSEBRAC.add(CLOSEBRAC133);
            }



            // AST REWRITE
            // elements: directDeclaratorLength
            // token labels:
            // rule labels: retval
            // token list labels:
            // rule list labels:
            // wildcard labels:
            if ( state.backtracking==0 ) {
            retval.tree = root_0;
            RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.tree:null);

            root_0 = (CommonTree)adaptor.nil();
            // 773:45: -> ^( LENGTH directDeclaratorLength )
            {
                // CTFParser.g:773:48: ^( LENGTH directDeclaratorLength )
                {
                CommonTree root_1 = (CommonTree)adaptor.nil();
                root_1 = (CommonTree)adaptor.becomeRoot((CommonTree)adaptor.create(LENGTH, "LENGTH"), root_1);

                adaptor.addChild(root_1, stream_directDeclaratorLength.nextTree());

                adaptor.addChild(root_0, root_1);
                }

            }

            retval.tree = root_0;}
            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }

        	catch (RecognitionException e)
        	{
        	  throw e;
        	}
        finally {
        }
        return retval;
    }
    // $ANTLR end "directDeclaratorSuffix"

