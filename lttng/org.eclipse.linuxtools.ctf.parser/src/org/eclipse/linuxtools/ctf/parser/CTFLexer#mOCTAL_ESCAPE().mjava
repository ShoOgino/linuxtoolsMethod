    // $ANTLR start "OCTAL_ESCAPE"
    public final void mOCTAL_ESCAPE() throws RecognitionException {
        try {
            // Grammar/CTFLexer.g:127:23: ( BACKSLASH ( '0' .. '3' ) ( '0' .. '7' ) ( '0' .. '7' ) | BACKSLASH ( '0' .. '7' ) ( '0' .. '7' ) | BACKSLASH ( '0' .. '7' ) )
            int alt19=3;
            int LA19_0 = input.LA(1);

            if ( (LA19_0=='\\') ) {
                int LA19_1 = input.LA(2);

                if ( ((LA19_1>='0' && LA19_1<='3')) ) {
                    int LA19_2 = input.LA(3);

                    if ( ((LA19_2>='0' && LA19_2<='7')) ) {
                        int LA19_5 = input.LA(4);

                        if ( ((LA19_5>='0' && LA19_5<='7')) ) {
                            alt19=1;
                        }
                        else {
                            alt19=2;}
                    }
                    else {
                        alt19=3;}
                }
                else if ( ((LA19_1>='4' && LA19_1<='7')) ) {
                    int LA19_3 = input.LA(3);

                    if ( ((LA19_3>='0' && LA19_3<='7')) ) {
                        alt19=2;
                    }
                    else {
                        alt19=3;}
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 19, 1, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // Grammar/CTFLexer.g:128:5: BACKSLASH ( '0' .. '3' ) ( '0' .. '7' ) ( '0' .. '7' )
                    {
                    mBACKSLASH(); 
                    // Grammar/CTFLexer.g:128:15: ( '0' .. '3' )
                    // Grammar/CTFLexer.g:128:16: '0' .. '3'
                    {
                    matchRange('0','3'); 

                    }

                    // Grammar/CTFLexer.g:128:26: ( '0' .. '7' )
                    // Grammar/CTFLexer.g:128:27: '0' .. '7'
                    {
                    matchRange('0','7'); 

                    }

                    // Grammar/CTFLexer.g:128:37: ( '0' .. '7' )
                    // Grammar/CTFLexer.g:128:38: '0' .. '7'
                    {
                    matchRange('0','7'); 

                    }


                    }
                    break;
                case 2 :
                    // Grammar/CTFLexer.g:129:5: BACKSLASH ( '0' .. '7' ) ( '0' .. '7' )
                    {
                    mBACKSLASH(); 
                    // Grammar/CTFLexer.g:129:15: ( '0' .. '7' )
                    // Grammar/CTFLexer.g:129:16: '0' .. '7'
                    {
                    matchRange('0','7'); 

                    }

                    // Grammar/CTFLexer.g:129:26: ( '0' .. '7' )
                    // Grammar/CTFLexer.g:129:27: '0' .. '7'
                    {
                    matchRange('0','7'); 

                    }


                    }
                    break;
                case 3 :
                    // Grammar/CTFLexer.g:130:5: BACKSLASH ( '0' .. '7' )
                    {
                    mBACKSLASH(); 
                    // Grammar/CTFLexer.g:130:15: ( '0' .. '7' )
                    // Grammar/CTFLexer.g:130:16: '0' .. '7'
                    {
                    matchRange('0','7'); 

                    }


                    }
                    break;

            }
        }
        finally {
        }
    }
    // $ANTLR end "OCTAL_ESCAPE"

