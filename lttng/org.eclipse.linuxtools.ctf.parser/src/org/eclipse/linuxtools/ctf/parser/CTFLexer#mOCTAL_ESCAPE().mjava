    // $ANTLR start "OCTAL_ESCAPE"
    public final void mOCTAL_ESCAPE() throws RecognitionException {
        try {
            // CTFLexer.g:132:23: ( BACKSLASH ( '0' .. '3' ) ( '0' .. '7' ) (
            // '0' .. '7' ) | BACKSLASH ( '0' .. '7' ) ( '0' .. '7' ) |
            // BACKSLASH ( '0' .. '7' ) )
            int alt19 = 3;
            int LA19_0 = input.LA(1);

            if ((LA19_0 == '\\')) {
                int LA19_1 = input.LA(2);

                if (((LA19_1 >= '0' && LA19_1 <= '3'))) {
                    int LA19_2 = input.LA(3);

                    if (((LA19_2 >= '0' && LA19_2 <= '7'))) {
                        int LA19_4 = input.LA(4);

                        if (((LA19_4 >= '0' && LA19_4 <= '7'))) {
                            alt19 = 1;
                        } else {
                            alt19 = 2;
                        }
                    } else {
                        alt19 = 3;
                    }
                } else if (((LA19_1 >= '4' && LA19_1 <= '7'))) {
                    int LA19_3 = input.LA(3);

                    if (((LA19_3 >= '0' && LA19_3 <= '7'))) {
                        alt19 = 2;
                    } else {
                        alt19 = 3;
                    }
                } else {
                    NoViableAltException nvae = new NoViableAltException("",
                            19, 1, input);

                    throw nvae;
                }
            } else {
                NoViableAltException nvae = new NoViableAltException("", 19, 0,
                        input);

                throw nvae;
            }
            switch (alt19) {
            case 1:
            // CTFLexer.g:133:5: BACKSLASH ( '0' .. '3' ) ( '0' .. '7' ) ( '0'
            // .. '7' )
            {
                mBACKSLASH();
                // CTFLexer.g:133:15: ( '0' .. '3' )
                // CTFLexer.g:133:16: '0' .. '3'
                {
                    matchRange('0', '3');

                }

                // CTFLexer.g:133:26: ( '0' .. '7' )
                // CTFLexer.g:133:27: '0' .. '7'
                {
                    matchRange('0', '7');

                }

                // CTFLexer.g:133:37: ( '0' .. '7' )
                // CTFLexer.g:133:38: '0' .. '7'
                {
                    matchRange('0', '7');

                }

            }
                break;
            case 2:
            // CTFLexer.g:134:5: BACKSLASH ( '0' .. '7' ) ( '0' .. '7' )
            {
                mBACKSLASH();
                // CTFLexer.g:134:15: ( '0' .. '7' )
                // CTFLexer.g:134:16: '0' .. '7'
                {
                    matchRange('0', '7');

                }

                // CTFLexer.g:134:26: ( '0' .. '7' )
                // CTFLexer.g:134:27: '0' .. '7'
                {
                    matchRange('0', '7');

                }

            }
                break;
            case 3:
            // CTFLexer.g:135:5: BACKSLASH ( '0' .. '7' )
            {
                mBACKSLASH();
                // CTFLexer.g:135:15: ( '0' .. '7' )
                // CTFLexer.g:135:16: '0' .. '7'
                {
                    matchRange('0', '7');

                }

            }
                break;

            }
        } finally {
        }
    }

