    @Override
    public void mTokens() throws RecognitionException {
        // Grammar/CTFLexer.g:1:8: ( ALIGNTOK | CONSTTOK | CHARTOK | DOUBLETOK |
        // ENUMTOK | EVENTTOK | FLOATINGPOINTTOK | FLOATTOK | INTEGERTOK |
        // INTTOK | LONGTOK | SHORTTOK | SIGNEDTOK | STREAMTOK | STRINGTOK |
        // STRUCTTOK | TRACETOK | TYPEALIASTOK | TYPEDEFTOK | UNSIGNEDTOK |
        // VARIANTTOK | VOIDTOK | BOOLTOK | COMPLEXTOK | IMAGINARYTOK | ENVTOK |
        // CLOCKTOK | NANNUMBERTOK | INFINITYTOK | NINFINITYTOK | SEPARATOR |
        // COLON | ELIPSES | ASSIGNMENT | TYPE_ASSIGNMENT | LT | GT | OPENBRAC |
        // CLOSEBRAC | LPAREN | RPAREN | LCURL | RCURL | TERM | POINTER | SIGN |
        // ARROW | DOT | OCTAL_LITERAL | DECIMAL_LITERAL | HEX_LITERAL |
        // CHARACTER_LITERAL | STRING_LITERAL | WS | COMMENT | LINE_COMMENT |
        // IDENTIFIER )
        int alt33 = 57;
        alt33 = dfa33.predict(input);
        switch (alt33) {
        case 1:
        // Grammar/CTFLexer.g:1:10: ALIGNTOK
        {
            mALIGNTOK();

        }
            break;
        case 2:
        // Grammar/CTFLexer.g:1:19: CONSTTOK
        {
            mCONSTTOK();

        }
            break;
        case 3:
        // Grammar/CTFLexer.g:1:28: CHARTOK
        {
            mCHARTOK();

        }
            break;
        case 4:
        // Grammar/CTFLexer.g:1:36: DOUBLETOK
        {
            mDOUBLETOK();

        }
            break;
        case 5:
        // Grammar/CTFLexer.g:1:46: ENUMTOK
        {
            mENUMTOK();

        }
            break;
        case 6:
        // Grammar/CTFLexer.g:1:54: EVENTTOK
        {
            mEVENTTOK();

        }
            break;
        case 7:
        // Grammar/CTFLexer.g:1:63: FLOATINGPOINTTOK
        {
            mFLOATINGPOINTTOK();

        }
            break;
        case 8:
        // Grammar/CTFLexer.g:1:80: FLOATTOK
        {
            mFLOATTOK();

        }
            break;
        case 9:
        // Grammar/CTFLexer.g:1:89: INTEGERTOK
        {
            mINTEGERTOK();

        }
            break;
        case 10:
        // Grammar/CTFLexer.g:1:100: INTTOK
        {
            mINTTOK();

        }
            break;
        case 11:
        // Grammar/CTFLexer.g:1:107: LONGTOK
        {
            mLONGTOK();

        }
            break;
        case 12:
        // Grammar/CTFLexer.g:1:115: SHORTTOK
        {
            mSHORTTOK();

        }
            break;
        case 13:
        // Grammar/CTFLexer.g:1:124: SIGNEDTOK
        {
            mSIGNEDTOK();

        }
            break;
        case 14:
        // Grammar/CTFLexer.g:1:134: STREAMTOK
        {
            mSTREAMTOK();

        }
            break;
        case 15:
        // Grammar/CTFLexer.g:1:144: STRINGTOK
        {
            mSTRINGTOK();

        }
            break;
        case 16:
        // Grammar/CTFLexer.g:1:154: STRUCTTOK
        {
            mSTRUCTTOK();

        }
            break;
        case 17:
        // Grammar/CTFLexer.g:1:164: TRACETOK
        {
            mTRACETOK();

        }
            break;
        case 18:
        // Grammar/CTFLexer.g:1:173: TYPEALIASTOK
        {
            mTYPEALIASTOK();

        }
            break;
        case 19:
        // Grammar/CTFLexer.g:1:186: TYPEDEFTOK
        {
            mTYPEDEFTOK();

        }
            break;
        case 20:
        // Grammar/CTFLexer.g:1:197: UNSIGNEDTOK
        {
            mUNSIGNEDTOK();

        }
            break;
        case 21:
        // Grammar/CTFLexer.g:1:209: VARIANTTOK
        {
            mVARIANTTOK();

        }
            break;
        case 22:
        // Grammar/CTFLexer.g:1:220: VOIDTOK
        {
            mVOIDTOK();

        }
            break;
        case 23:
        // Grammar/CTFLexer.g:1:228: BOOLTOK
        {
            mBOOLTOK();

        }
            break;
        case 24:
        // Grammar/CTFLexer.g:1:236: COMPLEXTOK
        {
            mCOMPLEXTOK();

        }
            break;
        case 25:
        // Grammar/CTFLexer.g:1:247: IMAGINARYTOK
        {
            mIMAGINARYTOK();

        }
            break;
        case 26:
        // Grammar/CTFLexer.g:1:260: ENVTOK
        {
            mENVTOK();

        }
            break;
        case 27:
        // Grammar/CTFLexer.g:1:267: CLOCKTOK
        {
            mCLOCKTOK();

        }
            break;
        case 28:
        // Grammar/CTFLexer.g:1:276: NANNUMBERTOK
        {
            mNANNUMBERTOK();

        }
            break;
        case 29:
        // Grammar/CTFLexer.g:1:289: INFINITYTOK
        {
            mINFINITYTOK();

        }
            break;
        case 30:
        // Grammar/CTFLexer.g:1:301: NINFINITYTOK
        {
            mNINFINITYTOK();

        }
            break;
        case 31:
        // Grammar/CTFLexer.g:1:314: SEPARATOR
        {
            mSEPARATOR();

        }
            break;
        case 32:
        // Grammar/CTFLexer.g:1:324: COLON
        {
            mCOLON();

        }
            break;
        case 33:
        // Grammar/CTFLexer.g:1:330: ELIPSES
        {
            mELIPSES();

        }
            break;
        case 34:
        // Grammar/CTFLexer.g:1:338: ASSIGNMENT
        {
            mASSIGNMENT();

        }
            break;
        case 35:
        // Grammar/CTFLexer.g:1:349: TYPE_ASSIGNMENT
        {
            mTYPE_ASSIGNMENT();

        }
            break;
        case 36:
        // Grammar/CTFLexer.g:1:365: LT
        {
            mLT();

        }
            break;
        case 37:
        // Grammar/CTFLexer.g:1:368: GT
        {
            mGT();

        }
            break;
        case 38:
        // Grammar/CTFLexer.g:1:371: OPENBRAC
        {
            mOPENBRAC();

        }
            break;
        case 39:
        // Grammar/CTFLexer.g:1:380: CLOSEBRAC
        {
            mCLOSEBRAC();

        }
            break;
        case 40:
        // Grammar/CTFLexer.g:1:390: LPAREN
        {
            mLPAREN();

        }
            break;
        case 41:
        // Grammar/CTFLexer.g:1:397: RPAREN
        {
            mRPAREN();

        }
            break;
        case 42:
        // Grammar/CTFLexer.g:1:404: LCURL
        {
            mLCURL();

        }
            break;
        case 43:
        // Grammar/CTFLexer.g:1:410: RCURL
        {
            mRCURL();

        }
            break;
        case 44:
        // Grammar/CTFLexer.g:1:416: TERM
        {
            mTERM();

        }
            break;
        case 45:
        // Grammar/CTFLexer.g:1:421: POINTER
        {
            mPOINTER();

        }
            break;
        case 46:
        // Grammar/CTFLexer.g:1:429: SIGN
        {
            mSIGN();

        }
            break;
        case 47:
        // Grammar/CTFLexer.g:1:434: ARROW
        {
            mARROW();

        }
            break;
        case 48:
        // Grammar/CTFLexer.g:1:440: DOT
        {
            mDOT();

        }
            break;
        case 49:
        // Grammar/CTFLexer.g:1:444: OCTAL_LITERAL
        {
            mOCTAL_LITERAL();

        }
            break;
        case 50:
        // Grammar/CTFLexer.g:1:458: DECIMAL_LITERAL
        {
            mDECIMAL_LITERAL();

        }
            break;
        case 51:
        // Grammar/CTFLexer.g:1:474: HEX_LITERAL
        {
            mHEX_LITERAL();

        }
            break;
        case 52:
        // Grammar/CTFLexer.g:1:486: CHARACTER_LITERAL
        {
            mCHARACTER_LITERAL();

        }
            break;
        case 53:
        // Grammar/CTFLexer.g:1:504: STRING_LITERAL
        {
            mSTRING_LITERAL();

        }
            break;
        case 54:
        // Grammar/CTFLexer.g:1:519: WS
        {
            mWS();

        }
            break;
        case 55:
        // Grammar/CTFLexer.g:1:522: COMMENT
        {
            mCOMMENT();

        }
            break;
        case 56:
        // Grammar/CTFLexer.g:1:530: LINE_COMMENT
        {
            mLINE_COMMENT();

        }
            break;
        case 57:
        // Grammar/CTFLexer.g:1:543: IDENTIFIER
        {
            mIDENTIFIER();

        }
            break;

        }

    }

