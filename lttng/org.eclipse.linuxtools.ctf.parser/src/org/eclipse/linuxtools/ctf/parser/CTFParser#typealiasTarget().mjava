    // $ANTLR start "typealiasTarget"
    // Grammar/CTFParser.g:842:1: typealiasTarget : declarationSpecifiers (
    // abstractDeclaratorList )? ;
    public final CTFParser.typealiasTarget_return typealiasTarget()
            throws RecognitionException {
        CTFParser.typealiasTarget_return retval = new CTFParser.typealiasTarget_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        CTFParser.declarationSpecifiers_return declarationSpecifiers149 = null;

        CTFParser.abstractDeclaratorList_return abstractDeclaratorList150 = null;

        enter("typealiasTarget");

        try {
            // Grammar/CTFParser.g:855:1: ( declarationSpecifiers (
            // abstractDeclaratorList )? )
            // Grammar/CTFParser.g:856:3: declarationSpecifiers (
            // abstractDeclaratorList )?
            {
                root_0 = (CommonTree) adaptor.nil();

                pushFollow(FOLLOW_declarationSpecifiers_in_typealiasTarget2945);
                declarationSpecifiers149 = declarationSpecifiers();

                state._fsp--;
                if (state.failed) {
                    return retval;
                }
                if (state.backtracking == 0) {
                    adaptor.addChild(root_0, declarationSpecifiers149.getTree());
                }
                // Grammar/CTFParser.g:856:25: ( abstractDeclaratorList )?
                int alt49 = 2;
                int LA49_0 = input.LA(1);

                if (((LA49_0 == LPAREN) || (LA49_0 == POINTER) || (LA49_0 == IDENTIFIER))) {
                    alt49 = 1;
                }
                switch (alt49) {
                case 1:
                // Grammar/CTFParser.g:856:25: abstractDeclaratorList
                {
                    pushFollow(FOLLOW_abstractDeclaratorList_in_typealiasTarget2947);
                    abstractDeclaratorList150 = abstractDeclaratorList();

                    state._fsp--;
                    if (state.failed) {
                        return retval;
                    }
                    if (state.backtracking == 0) {
                        adaptor.addChild(root_0,
                                abstractDeclaratorList150.getTree());
                    }

                }
                    break;

                }

            }

            retval.stop = input.LT(-1);

            if (state.backtracking == 0) {

                retval.tree = (CommonTree) adaptor.rulePostProcessing(root_0);
                adaptor.setTokenBoundaries(retval.tree, retval.start,
                        retval.stop);
            }
            if (state.backtracking == 0) {

                exit("typealiasTarget");

            }
        }

        catch (RecognitionException e) {
            throw e;

        }
        return retval;
    }

