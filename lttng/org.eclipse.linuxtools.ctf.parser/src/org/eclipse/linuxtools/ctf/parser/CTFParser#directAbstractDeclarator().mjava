    // $ANTLR start "directAbstractDeclarator"
    // Grammar/CTFParser.g:796:1: directAbstractDeclarator : ( IDENTIFIER | ( LPAREN abstractDeclarator RPAREN ) ) ( OPENBRAC ( unaryExpression )? CLOSEBRAC )? ;
    public final CTFParser.directAbstractDeclarator_return directAbstractDeclarator() throws RecognitionException {
        CTFParser.directAbstractDeclarator_return retval = new CTFParser.directAbstractDeclarator_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token IDENTIFIER138=null;
        Token LPAREN139=null;
        Token RPAREN141=null;
        Token OPENBRAC142=null;
        Token CLOSEBRAC144=null;
        CTFParser.abstractDeclarator_return abstractDeclarator140 = null;

        CTFParser.unaryExpression_return unaryExpression143 = null;


        CommonTree IDENTIFIER138_tree=null;
        CommonTree LPAREN139_tree=null;
        CommonTree RPAREN141_tree=null;
        CommonTree OPENBRAC142_tree=null;
        CommonTree CLOSEBRAC144_tree=null;


          enter("directAbstractDeclarator");

        try {
            // Grammar/CTFParser.g:804:1: ( ( IDENTIFIER | ( LPAREN abstractDeclarator RPAREN ) ) ( OPENBRAC ( unaryExpression )? CLOSEBRAC )? )
            // Grammar/CTFParser.g:805:3: ( IDENTIFIER | ( LPAREN abstractDeclarator RPAREN ) ) ( OPENBRAC ( unaryExpression )? CLOSEBRAC )?
            {
            root_0 = (CommonTree)adaptor.nil();

            // Grammar/CTFParser.g:805:3: ( IDENTIFIER | ( LPAREN abstractDeclarator RPAREN ) )
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==IDENTIFIER) ) {
                alt44=1;
            }
            else if ( (LA44_0==LPAREN) ) {
                alt44=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }
            switch (alt44) {
                case 1 :
                    // Grammar/CTFParser.g:806:6: IDENTIFIER
                    {
                    IDENTIFIER138=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_directAbstractDeclarator2805); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    IDENTIFIER138_tree = (CommonTree)adaptor.create(IDENTIFIER138);
                    adaptor.addChild(root_0, IDENTIFIER138_tree);
                    }

                    }
                    break;
                case 2 :
                    // Grammar/CTFParser.g:807:7: ( LPAREN abstractDeclarator RPAREN )
                    {
                    // Grammar/CTFParser.g:807:7: ( LPAREN abstractDeclarator RPAREN )
                    // Grammar/CTFParser.g:807:8: LPAREN abstractDeclarator RPAREN
                    {
                    LPAREN139=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_directAbstractDeclarator2814); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    LPAREN139_tree = (CommonTree)adaptor.create(LPAREN139);
                    adaptor.addChild(root_0, LPAREN139_tree);
                    }
                    pushFollow(FOLLOW_abstractDeclarator_in_directAbstractDeclarator2816);
                    abstractDeclarator140=abstractDeclarator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, abstractDeclarator140.getTree());
                    RPAREN141=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_directAbstractDeclarator2818); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    RPAREN141_tree = (CommonTree)adaptor.create(RPAREN141);
                    adaptor.addChild(root_0, RPAREN141_tree);
                    }

                    }


                    }
                    break;

            }

            // Grammar/CTFParser.g:809:3: ( OPENBRAC ( unaryExpression )? CLOSEBRAC )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==OPENBRAC) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // Grammar/CTFParser.g:810:5: OPENBRAC ( unaryExpression )? CLOSEBRAC
                    {
                    OPENBRAC142=(Token)match(input,OPENBRAC,FOLLOW_OPENBRAC_in_directAbstractDeclarator2833); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    OPENBRAC142_tree = (CommonTree)adaptor.create(OPENBRAC142);
                    adaptor.addChild(root_0, OPENBRAC142_tree);
                    }
                    // Grammar/CTFParser.g:810:14: ( unaryExpression )?
                    int alt45=2;
                    int LA45_0 = input.LA(1);

                    if ( (LA45_0==ALIGNTOK||LA45_0==EVENTTOK||(LA45_0>=SIGNEDTOK && LA45_0<=STRINGTOK)||LA45_0==TRACETOK||(LA45_0>=ENVTOK && LA45_0<=CLOCKTOK)||LA45_0==SIGN||LA45_0==OCTAL_LITERAL||LA45_0==DECIMAL_LITERAL||LA45_0==HEX_LITERAL||LA45_0==CHARACTER_LITERAL||LA45_0==STRING_LITERAL||LA45_0==IDENTIFIER) ) {
                        alt45=1;
                    }
                    switch (alt45) {
                        case 1 :
                            // Grammar/CTFParser.g:810:14: unaryExpression
                            {
                            pushFollow(FOLLOW_unaryExpression_in_directAbstractDeclarator2835);
                            unaryExpression143=unaryExpression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, unaryExpression143.getTree());

                            }
                            break;

                    }

                    CLOSEBRAC144=(Token)match(input,CLOSEBRAC,FOLLOW_CLOSEBRAC_in_directAbstractDeclarator2838); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    CLOSEBRAC144_tree = (CommonTree)adaptor.create(CLOSEBRAC144);
                    adaptor.addChild(root_0, CLOSEBRAC144_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {

                debug_print(input.toString(retval.start,input.LT(-1)));
                exit("directAbstractDeclarator");

            }
        }

        	catch (RecognitionException e)
        	{
        	  throw e;
        	}
        finally {
        }
        return retval;
    }
    // $ANTLR end "directAbstractDeclarator"

