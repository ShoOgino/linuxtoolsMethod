    // $ANTLR start "CHAR_CONTENT"
    public final void mCHAR_CONTENT() throws RecognitionException {
        try {
            // CTFLexer.g:159:23: ( ( ESCAPE_SEQUENCE | ~ ( BACKSLASH |
            // SINGLEQUOTE ) ) )
            // CTFLexer.g:159:25: ( ESCAPE_SEQUENCE | ~ ( BACKSLASH |
            // SINGLEQUOTE ) )
            {
                // CTFLexer.g:159:25: ( ESCAPE_SEQUENCE | ~ ( BACKSLASH |
                // SINGLEQUOTE ) )
                int alt24 = 2;
                int LA24_0 = input.LA(1);

                if ((LA24_0 == '\\')) {
                    alt24 = 1;
                } else if (((LA24_0 >= '\u0000' && LA24_0 <= '&')
                        || (LA24_0 >= '(' && LA24_0 <= '[') || (LA24_0 >= ']' && LA24_0 <= '\uFFFF'))) {
                    alt24 = 2;
                } else {
                    NoViableAltException nvae = new NoViableAltException("",
                            24, 0, input);

                    throw nvae;
                }
                switch (alt24) {
                case 1:
                // CTFLexer.g:159:26: ESCAPE_SEQUENCE
                {
                    mESCAPE_SEQUENCE();

                }
                    break;
                case 2:
                // CTFLexer.g:159:44: ~ ( BACKSLASH | SINGLEQUOTE )
                {
                    if ((input.LA(1) >= '\u0000' && input.LA(1) <= '&')
                            || (input.LA(1) >= '(' && input.LA(1) <= '[')
                            || (input.LA(1) >= ']' && input.LA(1) <= '\uFFFF')) {
                        input.consume();

                    } else {
                        MismatchedSetException mse = new MismatchedSetException(
                                null, input);
                        recover(mse);
                        throw mse;
                    }

                }
                    break;

                }

            }

        } finally {
        }
    }

