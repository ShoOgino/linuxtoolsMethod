    // $ANTLR start "LINE_COMMENT"
    public final void mLINE_COMMENT() throws RecognitionException {
        int _type = LINE_COMMENT;
        int _channel = DEFAULT_TOKEN_CHANNEL;
        // Grammar/CTFLexer.g:181:14: ( '//' (~ ( '\\n' | '\\r' ) )* ( '\\r'
        // )? '\\n' )
        // Grammar/CTFLexer.g:181:16: '//' (~ ( '\\n' | '\\r' ) )* ( '\\r'
        // )? '\\n'
        {
            match("//");

            // Grammar/CTFLexer.g:181:21: (~ ( '\\n' | '\\r' ) )*
            loop29: do {
                int alt29 = 2;
                int LA29_0 = input.LA(1);

                if ((((LA29_0 >= '\u0000') && (LA29_0 <= '\t'))
                        || ((LA29_0 >= '\u000B') && (LA29_0 <= '\f')) || ((LA29_0 >= '\u000E') && (LA29_0 <= '\uFFFF')))) {
                    alt29 = 1;
                }

                switch (alt29) {
                case 1:
                // Grammar/CTFLexer.g:181:21: ~ ( '\\n' | '\\r' )
                {
                    if (((input.LA(1) >= '\u0000') && (input.LA(1) <= '\t'))
                            || ((input.LA(1) >= '\u000B') && (input.LA(1) <= '\f'))
                            || ((input.LA(1) >= '\u000E') && (input.LA(1) <= '\uFFFF'))) {
                        input.consume();

                    } else {
                        MismatchedSetException mse = new MismatchedSetException(
                                null, input);
                        recover(mse);
                        throw mse;
                    }

                }
                    break;

                default:
                    break loop29;
                }
            } while (true);

            // Grammar/CTFLexer.g:181:35: ( '\\r' )?
            int alt30 = 2;
            int LA30_0 = input.LA(1);

            if ((LA30_0 == '\r')) {
                alt30 = 1;
            }
            switch (alt30) {
            case 1:
            // Grammar/CTFLexer.g:181:35: '\\r'
            {
                match('\r');

            }
                break;

            }

            match('\n');
            _channel = HIDDEN;

        }

        setState(_type, _channel);
    }

