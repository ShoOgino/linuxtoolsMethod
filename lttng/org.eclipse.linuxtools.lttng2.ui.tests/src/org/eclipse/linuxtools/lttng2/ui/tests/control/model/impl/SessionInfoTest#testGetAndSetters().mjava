    /**
     * Run the long getNumberOfSubBuffers() method test.
     *
     */
    public void testGetAndSetters() {
        
        // Note that addDomain() has been executed in setUp()
        // check get method here
        assertEquals(1, fSessionInfo1.getDomains().length);
        assertNotNull(fSessionInfo1.getDomains()[0]);
        assertEquals(fDomainInfo1, fSessionInfo1.getDomains()[0]);
        
        ISessionInfo session = new SessionInfo("session");
        List<IDomainInfo> list = new LinkedList<IDomainInfo>();
        list.add(fDomainInfo1);
        list.add(fDomainInfo2);
        session.setDomains(list);
        
        IDomainInfo[] result = session.getDomains();
        assertEquals(2, result.length);
        assertEquals(fDomainInfo1, result[0]);
        assertEquals(fDomainInfo2, result[1]);
        
        session.setSessionPath("/home/user");
        assertEquals("/home/user", session.getSessionPath());
        
        session.setSessionState("active");
        TraceSessionState state = session.getSessionState();
        state = session.getSessionState();
        assertEquals("active", state.getInName());
        assertEquals("ACTIVE", state.name());
        assertEquals("ACTIVE", state.toString());
        assertEquals(1, state.ordinal());
        
        session.setSessionState("inactive");
        state = session.getSessionState();
        assertEquals("inactive", state.getInName());
        assertEquals("INACTIVE", state.name());
        assertEquals("INACTIVE", state.toString());
        assertEquals(0, state.ordinal());

        session.setSessionState("test");
        state = session.getSessionState();
        assertEquals("inactive", state.getInName());
        assertEquals("INACTIVE", state.name());
        assertEquals("INACTIVE", state.toString());
        assertEquals(0, state.ordinal());
        
        session.setSessionState(TraceSessionState.ACTIVE);
        state = session.getSessionState();
        assertEquals("active", state.getInName());
        assertEquals("ACTIVE", state.name());
        assertEquals("ACTIVE", state.toString());
        assertEquals(1, state.ordinal());

        session.setSessionState(TraceSessionState.INACTIVE);
        state = session.getSessionState();
        assertEquals("inactive", state.getInName());
        assertEquals("INACTIVE", state.name());
        assertEquals("INACTIVE", state.toString());
        assertEquals(0, state.ordinal());
    }

