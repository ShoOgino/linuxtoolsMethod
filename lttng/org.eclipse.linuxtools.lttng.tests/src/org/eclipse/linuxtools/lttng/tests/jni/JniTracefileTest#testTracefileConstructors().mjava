        public void testTracefileConstructors() {
                JniTrace testTrace = null;
                @SuppressWarnings("unused")
				JniTracefile testTracefile1 = null;
                @SuppressWarnings("unused")
				JniTracefile testTracefile2 = null;
                
                // This trace should be valid and will be used in test
                try {
                        testTrace = JniTraceFactory.getJniTrace(tracepath1, printLttDebug);
                }
                catch( JniException e) { }
                
                
                // Test constructor with pointer on a wrong pointer
                try {
                        testTracefile1 = testTrace.allocateNewJniTracefile( new Jni_C_Pointer(0), testTrace );
                        fail("Construction with wrong pointer should fail!");
                }
                catch( JniException e) { 
                }
                
                // Test constructor with pointer on a correct pointer
                try {
                        testTracefile1 = testTrace.allocateNewJniTracefile( testTrace.requestEventByName(tracefileName1).getTracefilePtr(), testTrace );
                }
                catch( JniException e) {
                        fail("Construction with correct pointer failed!");
                }
                
                /*
                // Test copy constructor
                try {
                        testTracefile1 = new JniTracefile( testTrace.requestEventByName(tracefileName1).getTracefilePtr(), testTrace );
                        testTracefile2 = new JniTracefile( testTracefile1);
                }
                catch( JniException e) {
                        fail("Copy constructor failed!");
                }
                assertSame("JniTracefile name not same after using copy constructor", testTracefile1.getTracefileName() , testTracefile2.getTracefileName());
                */
                
        }

