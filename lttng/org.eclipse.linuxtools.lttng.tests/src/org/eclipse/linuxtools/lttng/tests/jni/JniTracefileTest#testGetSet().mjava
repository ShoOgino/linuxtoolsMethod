        public void testGetSet() {
                
                JniTracefile testTracefile = prepareTracefileToTest();
                
                // Test that all Get/Set return data
                //boolean getIsCpuOnline will always be sane...
                assertNotSame("getIsCpuOnline() failed",null, testTracefile.getIsCpuOnline() );
                assertNotSame("getTracefilePath is empty","",testTracefile.getTracefilePath() );
                assertNotSame("getTracefileName is empty","",testTracefile.getTracefileName() );
                assertNotSame("getCpuNumber is 0",0,testTracefile.getCpuNumber() );
                assertNotSame("getTid is 0",0,testTracefile.getTid() );
                assertNotSame("getPgid is 0",0,testTracefile.getPgid() );
                assertNotSame("getCreation is 0",0,testTracefile.getCreation() );
                assertNotSame("getTracePtr is 0",0,testTracefile.getTracePtr() );
                assertNotSame("getMarkerDataPtr is 0",0,testTracefile.getMarkerDataPtr() );
                assertNotSame("getCFileDescriptor is 0",0,testTracefile.getCFileDescriptor() );
                assertNotSame("getFileSize is 0",0,testTracefile.getFileSize() );
                assertNotSame("getBlocksNumber is 0",0,testTracefile.getBlocksNumber() );
                //boolean getIsBytesOrderReversed will always be sane...
                assertNotSame("getIsBytesOrderReversed() failed",null, testTracefile.getIsBytesOrderReversed() );
                //boolean getIsFloatWordOrdered will always be sane...
                assertNotSame("getIsFloatWordOrdered() failed",null, testTracefile.getIsFloatWordOrdered() );
                assertNotSame("getAlignement is 0",0,testTracefile.getAlignement() );
                assertNotSame("getBufferHeaderSize is 0",0,testTracefile.getBufferHeaderSize() );
                assertNotSame("getBitsOfCurrentTimestampCounter is 0",0,testTracefile.getBitsOfCurrentTimestampCounter() );
                assertNotSame("getBitsOfEvent is 0",0,testTracefile.getBitsOfEvent() );
                assertNotSame("getCurrentTimestampCounterMask is 0",0,testTracefile.getCurrentTimestampCounterMask() );
                assertNotSame("getCurrentTimestampCounterMaskNextBit is 0",0,testTracefile.getCurrentTimestampCounterMaskNextBit() );
                assertNotSame("getEventsLost is 0",0,testTracefile.getEventsLost() );
                assertNotSame("getSubBufferCorrupt is 0",0,testTracefile.getSubBufferCorrupt() );
                // There should be at least 1 event, so it shouldn't be null
                assertNotNull("getCurrentEvent returned null", testTracefile.getCurrentEvent() );
                
                assertNotSame("getBufferPtr is 0",0,testTracefile.getBufferPtr() );
                assertNotSame("getBufferSize is 0",0,testTracefile.getBufferSize() );
                
                assertNotSame("getTracefileMarkersMap is null",null,testTracefile.getTracefileMarkersMap() );
                // Also check that the map contain a certains number of data
                assertSame("getTracefileMarkersMap returned an unexpected number of markers",numberOfMarkersInTracefile,testTracefile.getTracefileMarkersMap().size() );
                
                assertNotSame("getParentTrace is null",null,testTracefile.getParentTrace() );
                
                assertNotSame("getTracefilePtr is 0",0,testTracefile.getTracefilePtr() );
                
        }

