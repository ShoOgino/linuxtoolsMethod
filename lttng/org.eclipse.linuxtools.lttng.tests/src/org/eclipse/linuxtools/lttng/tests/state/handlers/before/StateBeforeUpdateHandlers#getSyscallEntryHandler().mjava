	final ILttngEventProcessor getSyscallEntryHandler() {
		AbsStateUpdate handler = new AbsStateUpdate() {

			// @Override
			@Override
			public boolean process(LttngEvent trcEvent, LttngTraceState traceSt) {
				// TraceDebug.debug("Before event called");
				//
				Long cpu = trcEvent.getCpuId();

				// No syscall_entry update for initialization process
				LttngProcessState process = traceSt.getRunning_process().get(
						cpu);

				pid = process.getPid();
				if (pid == 0L) {
					return true;
				}

				// Get the expected event field
				Long syscall = getAFieldLong(trcEvent, traceSt,
						Fields.LTT_FIELD_SYSCALL_ID);
				if (syscall == null) {
					TraceDebug.debug("Syscall Field not found in Event: "
							+ trcEvent.getMarkerName());
					return true;
				}

				String submode = traceSt.getSyscall_names().get(syscall);

				if (submode == null) {
					TraceDebug.debug("Submode not found in Event");
					submode = ExecutionSubMode.LTTV_STATE_SUBMODE_UNKNOWN
							.getInName();
				}
				
				exState = new LttngExecutionState();
				exState.setExec_mode(ExecutionMode.LTTV_STATE_SYSCALL);
				exState.setExec_submode(submode);
				exState.setEntry_Time(trcEvent.getTimestamp().getValue());
				exState.setChange_Time(trcEvent.getTimestamp().getValue());
				exState.setCum_cpu_time(0L);

				return false;
			}
		};
		return handler;
	}

