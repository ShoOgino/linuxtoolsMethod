        @Test
        public void testTraceConstructors() {
                JniTrace testTrace1 = null;
                @SuppressWarnings("unused")
                JniTrace testTrace2 = null;
                
                // Test constructor with argument on a wrong tracepath
                try {
                		System.out.println("TEST1");
                		
                        testTrace1 = new JniTrace(wrongTracePath);
                        fail("Construction with wrong tracepath should fail!");
                }
                catch( JniException e) { 
                }
                
                // Test constructor with argument on a correct tracepath
                try {
                		System.out.println("TEST2");
                		
                        testTrace1 = new JniTrace(tracepath1);
                }
                catch( JniException e) {
                        fail("Construction with correct tracepath failed!");
                }
                
                // Test copy constructor that take a pointer with a good pointer
                try {
                		System.out.println("TEST3");
                		
                        testTrace1 = new JniTrace( new C_Pointer(0) );
                        fail("Construction with wrong pointer should fail!");
                }
                catch( JniException e) { 
                }
                
                // Test copy constructor that take a pointer with a good pointer
                try {
                		System.out.println("TEST4");
                		
                        testTrace1 = new JniTrace(tracepath1); // This trace should be valid
                        testTrace2 = new JniTrace( testTrace1.getTracePtr() );
                }
                catch( JniException e) { 
                        fail("Construction with correct pointer failed!");
                }
                
        }

