        @Test
        public void testEventConstructors() {
                
                JniMarker tmpMarker = null;
                
                JniMarkerField tmpMarkerField1 = null;
                JniMarkerField tmpMarkerField2 = null;
                
                // This event should be valid and will be used in test
                try {
                        tmpMarker = new JniTrace(tracepath).requestEventByName(eventName).requestEventMarker();
                }
                catch( JniException e) { }
                
                // Test constructor with pointer on a wrong pointer
                try {
                        tmpMarkerField1 = new JniMarkerField( new Jni_C_Pointer(0) );
                        fail("Construction with wrong pointer should fail!");
                }
                catch( JniException e) {
                }
                
                // Test constructor with pointer on a correct pointer
                try {
                        tmpMarkerField1 = new JniMarkerField( tmpMarker.getMarkerFieldsArrayList().get(0).getMarkerFieldPtr() );
                }
                catch( JniException e) {
                        fail("Construction with correct pointer failed!");
                }
                
                
                // Test copy constructor
                try {
                        tmpMarkerField1 = new JniMarkerField( tmpMarker.getMarkerFieldsArrayList().get(0) );
                        tmpMarkerField2 = new JniMarkerField( tmpMarkerField1);
                }
                catch( Exception e) {
                        fail("Copy constructor failed!");
                }
                
                assertSame("JniMarker name not same after using copy constructor", tmpMarkerField1.getField() , tmpMarkerField2.getField());
                
        }

