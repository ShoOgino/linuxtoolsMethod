    /**
     * @return
     */
    protected TmfExperiment<LttngEvent> prepareExperimentToTest() {
        if (fTestExperiment == null) {
            final String expId = "testExperiment";
            final int nbTraces = 1;

            // Define traces in experiment
            @SuppressWarnings("unchecked")
            final
            ITmfTrace<LttngEvent>[] traces = new ITmfTrace[nbTraces];
            final ITmfTrace<LttngEvent> trace = prepareStreamToTest();
            traces[0] = trace;

            // create experiment and associate traces
            fTestExperiment = new TmfExperiment<LttngEvent>(LttngEvent.class,
                    expId, traces, TmfTimestamp.ZERO, TmfExperiment.DEFAULT_BLOCK_SIZE, true);
            // fTestExperiment.indexExperiment(waitForCompletion);

            // Set the current selected experiment as the test experiment
            final TmfExperimentSelectedSignal<LttngEvent> signal = new TmfExperimentSelectedSignal<LttngEvent>(
                    this, fTestExperiment);
            fTestExperiment.experimentSelected(signal);
        }

        return fTestExperiment;
    }

