    public void testLocationOperations() {
        TmfEvent tmpEvent = null;
        ITmfContext tmpContext = new TmfContext(null, 0);
        final LTTngTrace testStream1 = prepareStreamToTest();

        // Test LttngLocation after a seek
        tmpContext = testStream1.seekEvent(new LttngLocation(seekTimestamp));
        LttngLocation location = (LttngLocation) tmpContext.getLocation().clone();
        assertTrue("location has wrong flag", location.isLastOperationSeek());
        assertEquals("location has wrong operation time", seekTimestamp, location.getOperationTimeValue());
        tmpContext = testStream1.seekEvent(location);
        tmpEvent = testStream1.getNext(tmpContext);
        assertTrue("tmpContext is null after getNextEvent()", tmpEvent != null);
        assertEquals("tmpEvent has wrong timestamp", seekTimestamp, tmpEvent.getTimestamp().getValue());

        // Test LttngLocation after a parse
        tmpContext = testStream1.seekEvent(new LttngLocation(seekTimestamp));
        tmpEvent = testStream.parseEvent(tmpContext);
        assertEquals("tmpEvent has wrong timestamp", seekTimestamp, tmpEvent.getTimestamp().getValue());
        location = (LttngLocation) tmpContext.getLocation().clone();
        assertTrue("location has wrong flag", location.isLastOperationParse());
        assertEquals("location has wrong operation time", seekTimestamp, location.getOperationTimeValue());
        tmpContext = testStream1.seekEvent(location);
        tmpEvent = testStream1.getNext(tmpContext);
        assertTrue("tmpContext is null after getNextEvent()", tmpEvent != null);
        assertEquals("tmpEvent has wrong timestamp", seekTimestamp, tmpEvent.getTimestamp().getValue());

        // Test LttngLocation after a getNext
        tmpContext = testStream1.seekEvent(new LttngLocation(seekTimestamp));
        tmpEvent = testStream.getNext(tmpContext);
        assertEquals("tmpEvent has wrong timestamp", seekTimestamp, tmpEvent.getTimestamp().getValue());
        location = (LttngLocation) tmpContext.getLocation().clone();
        assertTrue("location has wrong flag", location.isLastOperationReadNext());
        assertEquals("location has wrong operation time", seekTimestamp, location.getOperationTimeValue());
        tmpContext = testStream1.seekEvent(location);
        tmpEvent = testStream1.getNext(tmpContext);
        assertTrue("tmpContext is null after getNextEvent()", tmpEvent != null);
        assertEquals("tmpEvent has wrong timestamp", nextEventTimestamp, tmpEvent.getTimestamp().getValue());

        // Test LttngLocation after a parse and parse
        tmpContext = testStream1.seekEvent(new LttngLocation(seekTimestamp));
        tmpEvent = testStream.parseEvent(tmpContext);
        assertEquals("tmpEvent has wrong timestamp", seekTimestamp, tmpEvent.getTimestamp().getValue());
        tmpEvent = testStream.parseEvent(tmpContext);
        assertEquals("tmpEvent has wrong timestamp", seekTimestamp, tmpEvent.getTimestamp().getValue());
        location = (LttngLocation) tmpContext.getLocation().clone();
        assertTrue("location has wrong flag", location.isLastOperationParse());
        assertEquals("location has wrong operation time", seekTimestamp, location.getOperationTimeValue());
        tmpContext = testStream1.seekEvent(location);
        tmpEvent = testStream1.getNext(tmpContext);
        assertTrue("tmpContext is null after getNextEvent()", tmpEvent != null);
        assertEquals("tmpEvent has wrong timestamp", seekTimestamp, tmpEvent.getTimestamp().getValue());

        // Test LttngLocation after a getNext and getNext
        tmpContext = testStream1.seekEvent(new LttngLocation(seekTimestamp));
        tmpEvent = testStream.getNext(tmpContext);
        assertEquals("tmpEvent has wrong timestamp", seekTimestamp, tmpEvent.getTimestamp().getValue());
        tmpEvent = testStream.getNext(tmpContext);
        assertEquals("tmpEvent has wrong timestamp", nextEventTimestamp, tmpEvent.getTimestamp().getValue());
        location = (LttngLocation) tmpContext.getLocation().clone();
        assertTrue("location has wrong flag", location.isLastOperationReadNext());
        assertEquals("location has wrong operation time", nextEventTimestamp, location.getOperationTimeValue());
        tmpContext = testStream1.seekEvent(location);
        tmpEvent = testStream1.getNext(tmpContext);
        assertTrue("tmpContext is null after getNextEvent()", tmpEvent != null);
        assertEquals("tmpEvent has wrong timestamp", nextnextEventTimestamp, tmpEvent.getTimestamp().getValue());

        // Test LttngLocation after a getNext and parse
        tmpContext = testStream1.seekEvent(new LttngLocation(seekTimestamp));
        tmpEvent = testStream.getNext(tmpContext);
        assertEquals("tmpEvent has wrong timestamp", seekTimestamp, tmpEvent.getTimestamp().getValue());
        tmpEvent = testStream.parseEvent(tmpContext);
        assertEquals("tmpEvent has wrong timestamp", nextEventTimestamp, tmpEvent.getTimestamp().getValue());
        location = (LttngLocation) tmpContext.getLocation().clone();
        assertTrue("location has wrong flag", location.isLastOperationParse());
        assertEquals("location has wrong operation time", nextEventTimestamp, location.getOperationTimeValue());
        tmpContext = testStream1.seekEvent(location);
        tmpEvent = testStream1.getNext(tmpContext);
        assertTrue("tmpContext is null after getNextEvent()", tmpEvent != null);
        assertEquals("tmpEvent has wrong timestamp", nextEventTimestamp, tmpEvent.getTimestamp().getValue());

        // Test LttngLocation after a parse and getNext
        tmpContext = testStream1.seekEvent(new LttngLocation(seekTimestamp));
        tmpEvent = testStream.parseEvent(tmpContext);
        assertEquals("tmpEvent has wrong timestamp", seekTimestamp, tmpEvent.getTimestamp().getValue());
        tmpEvent = testStream.getNext(tmpContext);
        assertEquals("tmpEvent has wrong timestamp", seekTimestamp, tmpEvent.getTimestamp().getValue());
        location = (LttngLocation) tmpContext.getLocation().clone();
        assertTrue("location has wrong flag", location.isLastOperationReadNext());
        assertEquals("location has wrong operation time", seekTimestamp, location.getOperationTimeValue());
        tmpContext = testStream1.seekEvent(location);
        tmpEvent = testStream1.getNext(tmpContext);
        assertTrue("tmpContext is null after getNextEvent()", tmpEvent != null);
        assertEquals("tmpEvent has wrong timestamp", nextEventTimestamp, tmpEvent.getTimestamp().getValue());

        // Test LttngLocation after a parse, getNext and parse
        tmpContext = testStream1.seekEvent(new LttngLocation(seekTimestamp));
        tmpEvent = testStream.parseEvent(tmpContext);
        assertEquals("tmpEvent has wrong timestamp", seekTimestamp, tmpEvent.getTimestamp().getValue());
        tmpEvent = testStream.getNext(tmpContext);
        assertEquals("tmpEvent has wrong timestamp", seekTimestamp, tmpEvent.getTimestamp().getValue());
        tmpEvent = testStream.parseEvent(tmpContext);
        assertEquals("tmpEvent has wrong timestamp", nextEventTimestamp, tmpEvent.getTimestamp().getValue());
        location = (LttngLocation) tmpContext.getLocation().clone();
        assertTrue("location has wrong flag", location.isLastOperationParse());
        assertEquals("location has wrong operation time", nextEventTimestamp, location.getOperationTimeValue());
        tmpContext = testStream1.seekEvent(location);
        tmpEvent = testStream1.getNext(tmpContext);
        assertTrue("tmpContext is null after getNextEvent()", tmpEvent != null);
        assertEquals("tmpEvent has wrong timestamp", nextEventTimestamp, tmpEvent.getTimestamp().getValue());

        // Test LttngLocation after a parse, getNext and getNext
        tmpContext = testStream1.seekEvent(new LttngLocation(seekTimestamp));
        tmpEvent = testStream.parseEvent(tmpContext);
        assertEquals("tmpEvent has wrong timestamp", seekTimestamp, tmpEvent.getTimestamp().getValue());
        tmpEvent = testStream.getNext(tmpContext);
        assertEquals("tmpEvent has wrong timestamp", seekTimestamp, tmpEvent.getTimestamp().getValue());
        tmpEvent = testStream.getNext(tmpContext);
        assertEquals("tmpEvent has wrong timestamp", nextEventTimestamp, tmpEvent.getTimestamp().getValue());
        location = (LttngLocation) tmpContext.getLocation().clone();
        assertTrue("location has wrong flag", location.isLastOperationReadNext());
        assertEquals("location has wrong operation time", nextEventTimestamp, location.getOperationTimeValue());
        tmpContext = testStream1.seekEvent(location);
        tmpEvent = testStream1.getNext(tmpContext);
        assertTrue("tmpContext is null after getNextEvent()", tmpEvent != null);
        assertEquals("tmpEvent has wrong timestamp", nextnextEventTimestamp, tmpEvent.getTimestamp().getValue());

        // Test LttngLocation after a getNext, parse and parse
        tmpContext = testStream1.seekEvent(new LttngLocation(seekTimestamp));
        tmpEvent = testStream.getNext(tmpContext);
        assertEquals("tmpEvent has wrong timestamp", seekTimestamp, tmpEvent.getTimestamp().getValue());
        tmpEvent = testStream.parseEvent(tmpContext);
        assertEquals("tmpEvent has wrong timestamp", nextEventTimestamp, tmpEvent.getTimestamp().getValue());
        tmpEvent = testStream.parseEvent(tmpContext);
        assertEquals("tmpEvent has wrong timestamp", nextEventTimestamp, tmpEvent.getTimestamp().getValue());
        location = (LttngLocation) tmpContext.getLocation().clone();
        assertTrue("location has wrong flag", location.isLastOperationParse());
        assertEquals("location has wrong operation time", nextEventTimestamp, location.getOperationTimeValue());
        tmpContext = testStream1.seekEvent(location);
        tmpEvent = testStream1.getNext(tmpContext);
        assertTrue("tmpContext is null after getNextEvent()", tmpEvent != null);
        assertEquals("tmpEvent has wrong timestamp", nextEventTimestamp, tmpEvent.getTimestamp().getValue());

        // Test LttngLocation after a getNext, parse and getNext
        tmpContext = testStream1.seekEvent(new LttngLocation(seekTimestamp));
        tmpEvent = testStream.getNext(tmpContext);
        assertEquals("tmpEvent has wrong timestamp", seekTimestamp, tmpEvent.getTimestamp().getValue());
        tmpEvent = testStream.parseEvent(tmpContext);
        assertEquals("tmpEvent has wrong timestamp", nextEventTimestamp, tmpEvent.getTimestamp().getValue());
        tmpEvent = testStream.getNext(tmpContext);
        assertEquals("tmpEvent has wrong timestamp", nextEventTimestamp, tmpEvent.getTimestamp().getValue());
        location = (LttngLocation) tmpContext.getLocation().clone();
        assertTrue("location has wrong flag", location.isLastOperationReadNext());
        assertEquals("location has wrong operation time", nextEventTimestamp, location.getOperationTimeValue());
        tmpContext = testStream1.seekEvent(location);
        tmpEvent = testStream1.getNext(tmpContext);
        assertTrue("tmpContext is null after getNextEvent()", tmpEvent != null);
        assertEquals("tmpEvent has wrong timestamp", nextnextEventTimestamp, tmpEvent.getTimestamp().getValue());

        // Test LttngLocation after a getNext, getNext and parse
        tmpContext = testStream1.seekEvent(new LttngLocation(seekTimestamp));
        tmpEvent = testStream.getNext(tmpContext);
        assertEquals("tmpEvent has wrong timestamp", seekTimestamp, tmpEvent.getTimestamp().getValue());
        tmpEvent = testStream.getNext(tmpContext);
        assertEquals("tmpEvent has wrong timestamp", nextEventTimestamp, tmpEvent.getTimestamp().getValue());
        tmpEvent = testStream.parseEvent(tmpContext);
        assertEquals("tmpEvent has wrong timestamp", nextnextEventTimestamp, tmpEvent.getTimestamp().getValue());
        location = (LttngLocation) tmpContext.getLocation().clone();
        assertTrue("location has wrong flag", location.isLastOperationParse());
        assertEquals("location has wrong operation time", nextnextEventTimestamp, location.getOperationTimeValue());
        tmpContext = testStream1.seekEvent(location);
        tmpEvent = testStream1.getNext(tmpContext);
        assertTrue("tmpContext is null after getNextEvent()", tmpEvent != null);
        assertEquals("tmpEvent has wrong timestamp", nextnextEventTimestamp, tmpEvent.getTimestamp().getValue());
    }

