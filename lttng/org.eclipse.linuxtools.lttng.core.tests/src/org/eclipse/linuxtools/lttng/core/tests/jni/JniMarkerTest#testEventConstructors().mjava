        public void testEventConstructors() {
                
                JniEvent tmpEvent = null;
                
                @SuppressWarnings("unused")
				JniMarker testMarker1 = null;
                @SuppressWarnings("unused")
				JniMarker testMarker2 = null;
                
                // This event should be valid and will be used in test
                try {
                        tmpEvent = JniTraceFactory.getJniTrace(tracepath, null, printLttDebug).requestEventByName(eventName);
                }
                catch( JniException e) { }
                
                // Test constructor with pointer on a correct pointer
                try {
                        testMarker1 = tmpEvent.getParentTracefile().allocateNewJniMarker( tmpEvent.requestEventMarker().getMarkerPtr() );
                }
                catch( JniException e) {
                        fail("Construction with correct pointer failed!");
                }
                
                /*
                // Test copy constructor
                try {
                        testMarker1 = new JniMarker( tmpEvent.requestEventMarker().getMarkerPtr() );
                        testMarker2 = new JniMarker( testMarker1);
                }
                catch( JniException e) {
                        fail("Copy constructor failed!");
                }
                assertSame("JniMarker name not same after using copy constructor", testMarker1.getName() , testMarker2.getName());
                */
                
        }

