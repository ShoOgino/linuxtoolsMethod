    public static void main(final String[] args) {

        try {
            // OUr experiment will contains ONE trace
            @SuppressWarnings("unchecked")
            final
            ITmfTrace<LttngEvent>[] traces = new ITmfTrace[1];
            traces[0] = new LTTngTrace(null, TRACE_PATH);
            // Create our new experiment
            fExperiment = new TmfExperiment<LttngEvent>(LttngEvent.class, "Headless", traces);


            // Create a new time range from -infinity to +infinity
            //	That way, we will get "everything" in the trace
            final LttngTimestamp ts1 = new LttngTimestamp(Long.MIN_VALUE);
            final LttngTimestamp ts2 = new LttngTimestamp(Long.MAX_VALUE);
            final TmfTimeRange tmpRange = new TmfTimeRange(ts1, ts2);


            // We will issue a request for each "pass".
            // TMF will then process them synchonously
            TmfTraceTest request = null;
            for ( int x=0; x<NB_OF_PASS; x++ ) {
                request = new TmfTraceTest(LttngEvent.class, tmpRange, Integer.MAX_VALUE );
                fExperiment.sendRequest(request);
                nbPassDone++;
            }
        }
        catch (final NullPointerException e) {
            // Silently dismiss Null pointer exception
            // The only way to "finish" the threads in TMF is by crashing them with null
        }
        catch (final Exception e) {
            e.printStackTrace();
        }

    }

