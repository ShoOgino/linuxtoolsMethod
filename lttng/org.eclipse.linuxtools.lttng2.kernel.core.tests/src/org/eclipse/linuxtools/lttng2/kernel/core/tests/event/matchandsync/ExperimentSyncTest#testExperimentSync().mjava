    /**
     * Testing experiment synchronization
     */
    @Test
    public void testExperimentSync() {
        assumeTrue(CtfTmfTestTrace.SYNC_SRC.exists());
        assumeTrue(CtfTmfTestTrace.SYNC_DEST.exists());
        try (CtfTmfTrace trace1 = CtfTmfTestTrace.SYNC_SRC.getTrace();
                CtfTmfTrace trace2 = CtfTmfTestTrace.SYNC_DEST.getTrace();) {

            ITmfTrace[] traces = { trace1, trace2 };
            TmfExperiment experiment = new TmfExperiment(traces[0].getEventType(), EXPERIMENT, traces, BLOCK_SIZE);

            SynchronizationAlgorithm syncAlgo = experiment.synchronizeTraces(true);

            ITmfTimestampTransform tt1 = syncAlgo.getTimestampTransform(trace1);
            ITmfTimestampTransform tt2 = syncAlgo.getTimestampTransform(trace2);

            trace1.setTimestampTransform(tt1);
            trace2.setTimestampTransform(tt2);

            assertEquals("TmfTimestampLinear [ slope = 0.9999413783703139011056845831168394, offset = 79796507913179.33347660124688298171 ]", tt1.toString());
            assertEquals(TimestampTransformFactory.getDefaultTransform(), tt2);

            assertEquals(syncAlgo.getTimestampTransform(trace1.getHostId()), trace1.getTimestampTransform());
            assertEquals(syncAlgo.getTimestampTransform(trace2.getHostId()), trace2.getTimestampTransform());

        } catch (TmfTraceException e) {
            fail("Exception thrown in experiment synchronization " + e.getMessage());
        }
    }

