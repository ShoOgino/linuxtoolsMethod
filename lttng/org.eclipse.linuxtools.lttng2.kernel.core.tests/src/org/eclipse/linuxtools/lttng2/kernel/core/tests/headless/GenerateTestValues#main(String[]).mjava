    /**
     * Run the program
     *
     * @param args
     *            Command-line arguments, unused.
     * @throws Exception
     *             I'm messing with Exception. Come at me bro!
     */
    public static void main(String[] args) throws Exception {
        if (!CtfTmfTestTraces.tracesExist()) {
            System.err.println("Trace files not present.");
            return;
        }

        /* Prepare the files */
        File stateFile = File.createTempFile("test-values", ".ht");
        stateFile.deleteOnExit();
        File logFile = File.createTempFile("TestValues", ".java");
        PrintWriter writer = new PrintWriter(new FileWriter(logFile), true);

        /* Build and query the state system */
        ITmfStateProvider input = new CtfKernelStateProvider(CtfTmfTestTraces.getTestTrace(TRACE_INDEX));
        ITmfStateSystem ssq = StateSystemManager.loadStateHistory(stateFile, input, true);
        List<ITmfStateInterval> fullState = ssq.queryFullState(targetTimestamp);

        /* Start printing the java file's contents */
        writer.println("interface TestValues {");
        writer.println();
        writer.println(INDENT + "static final int size = " + fullState.size() +";");
        writer.println();

        /* Print the array contents */
        writer.println(INDENT + "static final long[] startTimes = {");
        for (ITmfStateInterval interval : fullState) {
            writer.println(INDENT + INDENT + String.valueOf(interval.getStartTime()) + "L,");
        }
        writer.println(INDENT + "};");
        writer.println();

        writer.println(INDENT + "static final long[] endTimes = {");
        for (ITmfStateInterval interval : fullState) {
            writer.println(INDENT + INDENT + String.valueOf(interval.getEndTime())+ "L,");
        }
        writer.println(INDENT + "};");
        writer.println();

        writer.println(INDENT + "static final ITmfStateValue[] values = {");
        for (ITmfStateInterval interval : fullState) {
            ITmfStateValue val = interval.getStateValue();
            writer.print(INDENT + INDENT);

            switch (val.getType()) {
            case NULL:
                writer.println("TmfStateValue.nullValue(),");
                break;
            case INTEGER:
                writer.println("TmfStateValue.newValueInt(" + val.unboxInt() + "),");
                break;
            case LONG:
                writer.println("TmfStateValue.newValueLong(" + val.unboxLong() +"),");
                break;
            case STRING:
                writer.println("TmfStateValue.newValueString(\"" + val.unboxStr() + "\"),");
                break;
            default:
                writer.println(val.toString());
                break;
            }
        }
        writer.println(INDENT + "};");

        writer.println("}");
        writer.println();

        writer.close();
        System.exit(0);
    }

