    /**
     * Constructor
     *
     * @param parent
     *            parent composite
     * @param treeViewer
     *            The tree viewer containing the list of threads with CPU usage.
     *            A listener will be added to that viewer so it can synchronize
     *            with the selection from the viewer.
     */
    public CpuUsageXYViewer(Composite parent, CpuUsageComposite treeViewer) {
        super(parent, Messages.CpuUsageXYViewer_Title, Messages.CpuUsageXYViewer_TimeXAxis, Messages.CpuUsageXYViewer_CpuYAxis);
        setResolution(RESOLUTION);

        /* Add selection listener to tree viewer */
        treeViewer.addSelectionChangeListener(new ISelectionChangedListener() {
            @Override
            public void selectionChanged(SelectionChangedEvent event) {
                if (event.getSelection() instanceof IStructuredSelection) {
                    Object selection = ((IStructuredSelection) event.getSelection()).getFirstElement();
                    if (selection instanceof CpuUsageEntry) {
                        CpuUsageEntry entry = (CpuUsageEntry) selection;
                        setSelectedThread(Long.valueOf(entry.getTid()));
                    }
                }
            }
        });
    }

