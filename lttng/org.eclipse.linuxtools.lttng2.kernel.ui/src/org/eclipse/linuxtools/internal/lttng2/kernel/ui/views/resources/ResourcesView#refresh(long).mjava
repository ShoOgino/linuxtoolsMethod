    private void refresh(final long windowRange) {
        Display.getDefault().asyncExec(new Runnable() {
            @Override
            public void run() {
                if (fTimeGraphViewer.getControl().isDisposed()) {
                    return;
                }
                ITimeGraphEntry[] entries = null;
                synchronized (fEntryListSyncObj) {
                    if (fEntryList != null) {
                        entries = fEntryList.toArray(new ITimeGraphEntry[0]);
                    }
                }
                if (entries != null) {
                    Arrays.sort(entries, new TraceEntryComparator());
                    fTimeGraphViewer.setInput(entries);
                    fTimeGraphViewer.setTimeBounds(fStartTime, fEndTime);

                    long endTime = fStartTime + windowRange;

                    if (fEndTime < endTime) {
                        endTime = fEndTime;
                    }
                    fTimeGraphViewer.setStartFinishTime(fStartTime, endTime);

                    startZoomThread(fStartTime, endTime);
                }
            }
        });
    }

