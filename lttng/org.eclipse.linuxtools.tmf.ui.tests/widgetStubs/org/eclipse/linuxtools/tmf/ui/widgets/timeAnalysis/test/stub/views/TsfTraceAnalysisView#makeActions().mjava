	private void makeActions() {
		// action1
		action1 = new Action() {
			public void run() {
				showMessage("Action 1 executed");
			}
		};
		action1.setText("Action 1");
		action1.setToolTipText("Action 1 tooltip");
		action1.setImageDescriptor(PlatformUI.getWorkbench().getSharedImages()
				.getImageDescriptor(ISharedImages.IMG_OBJS_INFO_TSK));

		// action2
		action2 = new Action() {
			public void run() {
				showMessage("Action 2 executed");
			}
		};
		action2.setText("Action 2");
		action2.setToolTipText("Action 2 tooltip");
		action2.setImageDescriptor(PlatformUI.getWorkbench().getSharedImages()
				.getImageDescriptor(ISharedImages.IMG_OBJS_INFO_TSK));

		// action3
		actGroup = new Action() {
			public void run() {
				ITimeAnalysisViewer inFocusViewer = getActiveTsfCtrl();
				if (inFocusViewer != null) {
					if (actGroup.isChecked()) {
						inFocusViewer.groupTraces(false);
					} else {
						inFocusViewer.groupTraces(true);
					}
				}
			}
		};
		actGroup.setText("Group");
		actGroup.setToolTipText("Groupped or flat list");
		actGroup.setChecked(true);

		// action4
		resetScale = new Action() {
			public void run() {
				ITimeAnalysisViewer inFocusViewer = getActiveTsfCtrl();
				if (inFocusViewer != null) {
					inFocusViewer.resetStartFinishTime();
				}

			}
		};
		resetScale.setText("Reset");
		resetScale.setToolTipText("Reset the Time Scale to Default");

		// action5
		nextEvent = new Action() {
			public void run() {
				ITimeAnalysisViewer inFocusViewer = getActiveTsfCtrl();
				if (inFocusViewer != null) {
					inFocusViewer.selectNextEvent();
				}
			}
		};
		nextEvent.setText("NextEv");
		nextEvent.setToolTipText("Next Event");

		// action6
		prevEvent = new Action() {
			public void run() {
				ITimeAnalysisViewer inFocusViewer = getActiveTsfCtrl();
				if (inFocusViewer != null) {
					inFocusViewer.selectPrevEvent();
				}
			}
		};
		prevEvent.setText("PrevEv");
		prevEvent.setToolTipText("Previous Event");

		// action7
		nextTrace = new Action() {
			public void run() {
				ITimeAnalysisViewer inFocusViewer = getActiveTsfCtrl();
				if (inFocusViewer != null) {
					inFocusViewer.selectNextTrace();
				}
			}
		};
		nextTrace.setText("NextTrace");
		nextTrace.setToolTipText("Select Next Event");

		// action8
		prevTrace = new Action() {
			public void run() {
				ITimeAnalysisViewer inFocusViewer = getActiveTsfCtrl();
				if (inFocusViewer != null) {
					inFocusViewer.selectPrevTrace();
				}
			}
		};
		prevTrace.setText("PrevTrace");
		prevTrace.setToolTipText("Select Previous Trace");

		// action9
		showLegent = new Action() {
			public void run() {
				ITimeAnalysisViewer inFocusViewer = getActiveTsfCtrl();
				if (inFocusViewer != null) {
					inFocusViewer.showLegend();
				}
			}
		};
		showLegent.setText("Legend");
		showLegent.setToolTipText("Show Legend");

		// action10
		filterTraces = new Action() {
			public void run() {
				ITimeAnalysisViewer inFocusViewer = getActiveTsfCtrl();
				if (inFocusViewer != null) {
					inFocusViewer.filterTraces();
				}
			}
		};
		filterTraces.setText("Filter");
		filterTraces.setToolTipText("Trace Filter options");

		// action10
		zoomIn = new Action() {
			public void run() {
				ITimeAnalysisViewer inFocusViewer = getActiveTsfCtrl();
				if (inFocusViewer != null) {
					inFocusViewer.zoomIn();
				}
			}
		};
		zoomIn.setText("Zoom In");
		zoomIn.setToolTipText("Zoom In");

		// action10
		zoomOut = new Action() {
			public void run() {
				ITimeAnalysisViewer inFocusViewer = getActiveTsfCtrl();
				if (inFocusViewer != null) {
					inFocusViewer.zoomOut();
				}
				// ISelection selection = inFocusViewer.getSelection();
				// Object sel = null;
				// if (selection != null && !selection.isEmpty()) {
				// sel = ((IStructuredSelection) selection)
				// .getFirstElement();
				// if (sel instanceof EventImpl) {
				// EventImpl event = (EventImpl) sel;
				// inFocusViewer.selectNextEvent();
				// }
				// }
			}
		};
		zoomOut.setText("Zoom Out");
		zoomOut.setToolTipText("Zoom Out");

		// action11
		synch = new Action() {
			public void run() {
				if (synch.isChecked()) {
					tsfviewer.setAcceptSelectionAPIcalls(true);
					tsfviewer2.setAcceptSelectionAPIcalls(true);
				} else {
					tsfviewer.setAcceptSelectionAPIcalls(false);
					tsfviewer2.setAcceptSelectionAPIcalls(false);
				}
			}
		};
		synch.setText("Synchronize");
		synch
				.setToolTipText("Synchronize by listening to external API selection calls");
		synch.setChecked(false);

		// action12
		events300K = new Action() {
			public void run() {
				ITimeAnalysisViewer inFocusViewer = getActiveTsfCtrl();
				if (inFocusViewer != null) {
					ITmfTimeAnalysisEntry[] traceArr = fact
							.createLargeTraces(60);
					inFocusViewer.display(traceArr);
				}
			}
		};
		events300K.setText("300K Events");
		events300K.setToolTipText("Add 300K Events");

		doubleClickAction = new Action() {
			public void run() {
				ISelection selection = viewer.getSelection();
				Object obj = ((IStructuredSelection) selection)
						.getFirstElement();
				showMessage("Double-click detected on " + obj.toString());
			}
		};
	}

