    @SuppressWarnings("nls")
    private void createFrame() {
        Frame testFrame = new Frame();
        if (page == 1) {
            testFrame.setName("Sequence Diagram - First Page");
            LifelineCategories tt[] = new LifelineCategories[2];
            tt[0] = new LifelineCategories();
            tt[1] = new LifelineCategories();
            tt[1].setName("Categorie 1");
            tt[1].setImage(new LocalImageImpl("obj16/node_obj.gif"));
            tt[0].setImage(new LocalImageImpl("obj16/class.gif"));
            tt[0].setName("Categorie 0");
            testFrame.setLifelineCategories(tt);
            Lifeline lifeline = new Lifeline();
            lifeline.setName("LifeLine 0");
            testFrame.addLifeLine(lifeline);
            EllipsisisMessage mn = new EllipsisisMessage();
            lifeline.getNewEventOccurrence();
            mn.setStartLifeline(lifeline);
            mn.setName("******************* EllipsisisMessage TEST ****************");
            testFrame.addMessage(mn);
            SyncMessage mn3 = new SyncMessage();
            mn3.setStartLifeline(lifeline);
            testFrame.addMessage(mn3);
            SyncMessage mn2 = new SyncMessage();
            lifeline.getNewEventOccurrence();
            lifeline.setCategory(0);
            mn2.setEndLifeline(lifeline);
            mn2.setName("*******************Sync TEST ****************");
            testFrame.addMessage(mn2);
            for (int i = 1; i < 300; i++) {
                lifeline = new Lifeline();
                lifeline.setName((new StringBuilder("LifeLine ")).append(i).toString());
                lifeline.setCategory(1);
                testFrame.addLifeLine(lifeline);
                SyncMessage m3 = new SyncMessage();
                testFrame.getLifeline(i - 1).getNewEventOccurrence();
                m3.setStartLifeline(testFrame.getLifeline(i - 1));
                m3.setEndLifeline(testFrame.getLifeline(i));
                m3.setName((new StringBuilder("Sync Message ")).append(i).toString());
                testFrame.addMessage(m3);
//                if (i == 11)
//                    m3.setTime(new TmfTimestamp(i - 400));
//                else if (i == 6)
//                    m3.setTime(new TmfTimestamp(i));
//                else
                    m3.setTime(new TmfTimestamp(i + 1));
            }

            for (int i = testFrame.lifeLinesCount() - 1; i > 0; i--) {
                SyncMessageReturn m = new SyncMessageReturn();
                testFrame.getLifeline(i).getNewEventOccurrence();
                m.setStartLifeline(testFrame.getLifeline(i));
                m.setEndLifeline(testFrame.getLifeline(i - 1));
                testFrame.addMessage(m);
                m.setName((new StringBuilder("Sync Message return ")).append(i).toString());
                if (i + 1 < testFrame.lifeLinesCount()) {
                    SyncMessage h = testFrame.getSyncMessage(i + 1);
                    m.setMessage(h);
                }
            }

            for (int i = 0; i < testFrame.lifeLinesCount(); i++)
                if (i > 0) {
                    ExecutionOccurrence occ = new ExecutionOccurrence();
                    occ.setStartOccurrence(testFrame.getSyncMessage(i).getEventOccurrence() + 1);
                    occ.setEndOccurrence(testFrame.getSyncMessageReturn(testFrame.syncMessageReturnCount() - i).getEventOccurrence());
                    testFrame.getLifeline(i).addExecution(occ);
                    occ.setName("******************* Execution Occurance TEST ****************");
                }

            Stop s = new Stop();
            s.setLifeline(testFrame.getLifeline(1));
            s.setEventOccurrence(testFrame.getLifeline(1).getNewEventOccurrence());
            testFrame.getLifeline(1).addNode(s);
            HotSpot gg = new HotSpot();
            gg.setImage(new LocalImageImpl("obj16/plus_obj.gif"));
            gg.setExecution((BasicExecutionOccurrence) testFrame.getLifeline(1).getExecutions().get(0));
            AsyncMessageReturn m = new AsyncMessageReturn();
            m.setStartLifeline(testFrame.getLifeline(1));
            m.setEndLifeline(testFrame.getLifeline(3));
            m.setStartOccurrence(2);
            m.setEndOccurrence(6);
            m.setStartTime(new TmfTimestamp(2));
            m.setEndTime(new TmfTimestamp(6));
            m.setName("*******************Async TEST ****************");
            testFrame.addMessage(m);
            v.setFrame(testFrame);
            v.getSDWidget().setReorderMode(true);
        } else {

//        if (page == 2) {
            testFrame.setName("Sequence Diagram");
            Lifeline lifeline = new Lifeline();
            lifeline.setName("LifeLine 0");
            testFrame.addLifeLine(lifeline);
            lifeline = new Lifeline();
            lifeline.setName("LifeLine 1");
            testFrame.addLifeLine(lifeline);
            for (int i = 1; i < 30; i++) {
                SyncMessage m3 = new SyncMessage();
                m3.autoSetStartLifeline(testFrame.getLifeline(0));
                m3.autoSetEndLifeline(testFrame.getLifeline(0));
                m3.setName((new StringBuilder("Message ")).append(i).toString());
                testFrame.addMessage(m3);
                SyncMessageReturn m = new SyncMessageReturn();
                m.autoSetStartLifeline(testFrame.getLifeline(0));
                m.autoSetEndLifeline(testFrame.getLifeline(0));
                testFrame.addMessage(m);
                m.setName((new StringBuilder("Message return ")).append(i).toString());
                ExecutionOccurrence occ = new ExecutionOccurrence();
                occ.setStartOccurrence(testFrame.getSyncMessage(i - 1).getEventOccurrence());
                occ.setEndOccurrence(testFrame.getSyncMessageReturn(i - 1).getEventOccurrence());
                testFrame.getLifeline(0).addExecution(occ);
            }
        } 
        v.setFrame(testFrame);
    }

