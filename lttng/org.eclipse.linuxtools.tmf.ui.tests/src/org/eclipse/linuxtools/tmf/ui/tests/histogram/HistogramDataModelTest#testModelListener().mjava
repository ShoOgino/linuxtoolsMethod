    /**
     * Test method for testing model listener.
     */
    @Test
    public void testModelListener() {
        final int nbBuckets = 2000;
        final int nbEvents = 10 * nbBuckets + 256;
        final int[] count = new int[1];
        count [0] = 0;

        // Test add listener and call of listener
        IHistogramModelListener listener = new IHistogramModelListener() {
            @Override
            public void modelUpdated() {
                count[0]++;
            }
        };

        // Test that the listener interface is called every 16000 events.
        HistogramDataModel model = new HistogramDataModel(nbBuckets);
        model.addHistogramListener(listener);
        for (int i = 0; i < nbEvents; i++) {
            model.countEvent(i+1, i);
        }

        assertTrue(count[0] == 1);

        // Test that the listener interface is called when complete is called.
        model.complete();
        assertTrue(count[0] == 2);

        // Test that clear triggers call of listener interface
        model.clear();
        assertTrue(count[0] == 3);

        // Test remove listener
        count[0] = 0;
        model.removeHistogramListener(listener);

        for (int i = 0; i < nbEvents; i++) {
            model.countEvent(i, i);
        }
        model.complete();
        assertTrue(count[0] == 0);
    }

