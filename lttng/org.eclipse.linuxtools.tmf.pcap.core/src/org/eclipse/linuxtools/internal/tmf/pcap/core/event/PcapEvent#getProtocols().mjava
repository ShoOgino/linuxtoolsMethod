    /**
     * Method that returns all the protocols in this PcapEvent.
     *
     * @return A list containing all the TmfProtocol.
     */
    public Collection<TmfPcapProtocol> getProtocols() {
        if (fProtocols != null) {
            return fProtocols;
        }
        ImmutableList.Builder<TmfPcapProtocol> builder = new ImmutableList.Builder<>();
        Packet packet = fPacket;

        // Go to start.
        while (packet != null && packet.getParentPacket() != null) {
            packet = packet.getParentPacket();
        }

        if (packet == null) {
            @SuppressWarnings("null")
            @NonNull List<TmfPcapProtocol> emptyList = Collections.EMPTY_LIST;
            fProtocols = emptyList;
            return fProtocols;
        }
        // Go through all the packets and add them to list.
        builder.add(ProtocolConversion.wrap(packet.getProtocol()));
        while (packet != null && packet.getChildPacket() != null) {
            packet = packet.getChildPacket();
            if (packet != null) {
                builder.add(ProtocolConversion.wrap(packet.getProtocol()));
            }
        }

        @SuppressWarnings("null")
        @NonNull ImmutableList<TmfPcapProtocol> immutableList = builder.build();
        fProtocols = immutableList;
        return immutableList;
    }

