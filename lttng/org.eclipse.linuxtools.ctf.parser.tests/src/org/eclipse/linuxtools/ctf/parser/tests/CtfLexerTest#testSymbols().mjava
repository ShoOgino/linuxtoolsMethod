    /**
     *  Validate the parsing of symbols
     */
    @Test
    public void testSymbols() {
        tokenize(" , : ... ");
        checkToken(CTFLexer.WS, " ");
        checkToken(CTFLexer.SEPARATOR, ",");
        checkToken(CTFLexer.WS, " ");
        checkToken(CTFLexer.COLON, ":");
        checkToken(CTFLexer.WS, " ");
        checkToken(CTFLexer.ELIPSES, "...");
        checkToken(CTFLexer.WS, " ");

        tokenize(" = := = ");
        checkToken(CTFLexer.WS, " ");
        checkToken(CTFLexer.ASSIGNMENT, "=");
        checkToken(CTFLexer.WS, " ");
        checkToken(CTFLexer.TYPE_ASSIGNMENT, ":=");
        checkToken(CTFLexer.WS, " ");

        tokenize(" <<>> ");
        checkToken(CTFLexer.WS, " ");
        checkToken(CTFLexer.LT, "<");
        checkToken(CTFLexer.LT, "<");
        checkToken(CTFLexer.GT, ">");
        checkToken(CTFLexer.GT, ">");
        checkToken(CTFLexer.WS, " ");

        tokenize(" ({[]}) ");
        checkToken(CTFLexer.WS, " ");
        checkToken(CTFLexer.LPAREN, "(");
        checkToken(CTFLexer.LCURL, "{");
        checkToken(CTFLexer.OPENBRAC, "[");
        checkToken(CTFLexer.CLOSEBRAC, "]");
        checkToken(CTFLexer.RCURL, "}");
        checkToken(CTFLexer.RPAREN, ")");
        checkToken(CTFLexer.WS, " ");

        tokenize(";;");
        checkToken(CTFLexer.TERM, ";");
        checkToken(CTFLexer.TERM, ";");

        tokenize(" ++ -- ");
        checkToken(CTFLexer.WS, " ");
        checkToken(CTFLexer.SIGN, "+");
        checkToken(CTFLexer.SIGN, "+");
        checkToken(CTFLexer.WS, " ");
        checkToken(CTFLexer.SIGN, "-");
        checkToken(CTFLexer.SIGN, "-");
        checkToken(CTFLexer.WS, " ");

        tokenize("-> .*.");
        checkToken(CTFLexer.ARROW, "->");
        checkToken(CTFLexer.WS, " ");
        checkToken(CTFLexer.DOT, ".");
        checkToken(CTFLexer.POINTER, "*");
        checkToken(CTFLexer.DOT, ".");
    }

