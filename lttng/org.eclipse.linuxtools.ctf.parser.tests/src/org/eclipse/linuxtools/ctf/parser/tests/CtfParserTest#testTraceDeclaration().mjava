    /**
     * Validate parsing of a trace declaration
     */
    @Ignore("The grammar need to be fixed.")
    @Test
    public void testTraceDeclaration() {
        Matches(Node(CTFParser.TRACE,
                     Node(CTFParser.CTF_EXPRESSION_VAL,
                          Node(CTFParser.CTF_LEFT,
                               Node(CTFParser.UNARY_EXPRESSION_STRING,
                                    Node(CTFParser.IDENTIFIER, "major"))),
                          Node(CTFParser.CTF_RIGHT,
                               Node(CTFParser.UNARY_EXPRESSION_DEC,
                                    Node(CTFParser.DECIMAL_LITERAL, "1"))))),
                declaration("trace { major = 1; };"));

        Matches(Node(CTFParser.TRACE,
                     Node(CTFParser.CTF_EXPRESSION_TYPE,
                          Node(CTFParser.CTF_LEFT,
                               Node(CTFParser.UNARY_EXPRESSION_STRING,
                                    Node(CTFParser.IDENTIFIER, "packet")),
                               Node(CTFParser.DOT,
                                    Node(CTFParser.UNARY_EXPRESSION_STRING,
                                         Node(CTFParser.IDENTIFIER, "header")))),
                          Node(CTFParser.CTF_RIGHT,
                               Node(CTFParser.TYPE_SPECIFIER_LIST,
                                    Node(CTFParser.STRUCT,
                                         Node(CTFParser.STRUCT_NAME,
                                              Node(CTFParser.IDENTIFIER, "dummy"))))))),
                declaration("trace { packet.header := struct dummy; };"));

        /* TODO: This test crash the parser. */
        Matches(Node(CTFParser.TRACE,
                     All()),
                declaration("trace { typedef x y; };"));

        Matches(Node(CTFParser.TRACE,
                     Node(CTFParser.CTF_EXPRESSION_VAL, All(), All()),
                     Node(CTFParser.CTF_EXPRESSION_VAL, All(), All()),
                     Node(CTFParser.CTF_EXPRESSION_TYPE, All(), All())),
                declaration("trace { major = 1; minor = 1;"
                            + "packet.header := struct dummy; };"));
    }

