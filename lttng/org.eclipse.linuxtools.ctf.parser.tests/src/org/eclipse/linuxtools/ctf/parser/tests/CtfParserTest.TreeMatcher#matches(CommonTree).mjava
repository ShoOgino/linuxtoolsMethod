        void matches(CommonTree tree) {
            if (fType == -1) {
                return;
            }
            if (tree.getType() != fType) {
                fail("Type mismatch!" +
                     " expected:" + fType +
                     " actual:" + tree.getType());
            }

            if (fText != null) {
                if (tree.getText().compareTo(fText) != 0) {
                    fail("Text mismatch!" +
                            " expected:" + fText +
                            " actual:" + tree.getText());
                }
            }

            if (fChild != null) {
                int size = fChild.length;
                if (tree.getChildren() == null) {
                    if (size != 0) {
                        fail("Invalid children!"
                                + "Expect: " + size + "child");
                    }
                } else {
                    if (tree.getChildren().size() != size) {
                        fail("Invalid number of childs!"
                             + " expected:" + size
                             + " actual:" + tree.getChildren().size());
                    }

                    for (int i = 0; i < size; ++i) {
                        fChild[i].matches((CommonTree) tree.getChild(i));
                    }
                }
            }
        }

