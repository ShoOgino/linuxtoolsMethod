    /**
     * Downloads a trace from the remote host to the given project.
     *
     * @param trace
     *            - trace information of trace to import
     * @param project
     *            - project to import to
     * @param monitor
     *            - a progress monitor
     * @throws ExecutionException
     */
    private static void downloadTrace(ImportFileInfo trace, IProject project, IProgressMonitor monitor)
            throws ExecutionException {
        try {
            IFileStore importRoot = trace.getImportFile();

            IFolder traceFolder = project.getFolder(TmfTracesFolder.TRACES_FOLDER_NAME);
            if (!traceFolder.exists()) {
                throw new ExecutionException(Messages.TraceControl_ImportDialogInvalidTracingProject + " (" + TmfTracesFolder.TRACES_FOLDER_NAME + ")"); //$NON-NLS-1$//$NON-NLS-2$
            }

            IFolder destinationFolder = trace.getDestinationFolder();
            TraceUtils.createFolder(destinationFolder, monitor);

            String traceName = trace.getLocalTraceName();
            IFolder folder = destinationFolder.getFolder(traceName);
            if (folder.exists()) {
                if (!trace.isOverwrite()) {
                    throw new ExecutionException(Messages.TraceControl_ImportDialogTraceAlreadyExistError + ": " + traceName); //$NON-NLS-1$
                }
            } else {
                folder.create(true, true, null);
            }

            IFileStore[] sources = importRoot.childStores(EFS.NONE, new NullProgressMonitor());
            SubMonitor subMonitor = SubMonitor.convert(monitor, sources.length);
            subMonitor.beginTask(Messages.TraceControl_DownloadTask, sources.length);

            for (IFileStore source : sources) {
                if (subMonitor.isCanceled()) {
                    monitor.setCanceled(true);
                    return;
                }
                SubMonitor childMonitor = subMonitor.newChild(1);
                IFileInfo info = source.fetchInfo();
                if (!info.isDirectory()) {
                    IPath destination = folder.getLocation().addTrailingSeparator().append(source.getName());
                    subMonitor.setTaskName(Messages.TraceControl_DownloadTask + ' ' + traceName + '/' + source.getName());
                    try (InputStream in = source.openInputStream(EFS.NONE, new NullProgressMonitor())) {
                        copy(in, destination, childMonitor, info.getLength());
                    }
                }
            }
        } catch (IOException e) {
            throw new ExecutionException(e.toString(), e);
        } catch (CoreException e) {
            throw new ExecutionException(e.toString(), e);
        }
    }

