    @Override
    public Object execute(ExecutionEvent event) throws ExecutionException {
        fLock.lock();
        try {
            final CommandParameter param = fParam.clone();

            final IEnableChannelDialog dialog =  TraceControlDialogFactory.getInstance().getEnableChannelDialog();
            dialog.setTargetNodeComponent(param.getSession().getTargetNode());
            dialog.setDomainComponent(getDomain(param));
            dialog.setHasKernel(param.getSession().hasKernelProvider());

            if (dialog.open() != Window.OK) {
                return null;
            }

            Job job = new Job(Messages.TraceControl_CreateChannelStateJob) {
                @Override
                protected IStatus run(IProgressMonitor monitor) {
                    Exception error = null;

                    List<String> channelNames = new ArrayList<>();
                    channelNames.add(dialog.getChannelInfo().getName());

                    try {
                        enableChannel(param, channelNames, dialog.getChannelInfo(), dialog.isKernel(), monitor);
                    } catch (ExecutionException e) {
                        error = e;
                    }

                    // refresh in all cases
                    refresh(param);

                    if (error != null) {
                        return new Status(IStatus.ERROR, Activator.PLUGIN_ID, Messages.TraceControl_CreateChannelStateFailure, error);
                    }
                    return Status.OK_STATUS;
                }
            };
            job.setUser(true);
            job.schedule();
        } finally {
            fLock.unlock();
        }
        return null;
    }

