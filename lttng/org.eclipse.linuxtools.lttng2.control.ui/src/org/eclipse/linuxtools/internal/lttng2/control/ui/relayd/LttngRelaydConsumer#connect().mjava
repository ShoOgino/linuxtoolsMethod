    /**
     * Connects to the relayd at the given address and port then attaches to the
     * given session name.
     *
     * @throws CoreException
     *             If something goes wrong during the connection
     *             <ul>
     *             <li>
     *             Connection could not be established (Socket could not be
     *             opened, etc)</li>
     *             <li>
     *             Connection timeout</li>
     *             <li>
     *             The session was not found</li>
     *             <li>
     *             Could not create viewer session</li>
     *             <li>
     *             Invalid trace (no metadata, no streams)</li>
     *             </ul>
     */
    public void connect() throws CoreException {
        if (fConnection != null) {
            return;
        }

        try {
            fConnection = new Socket(fConnectionInfo.getHost(), fConnectionInfo.getPort());
            fRelayd = LttngRelaydConnectorFactory.getNewConnector(fConnection);
            List<SessionResponse> sessions = fRelayd.getSessions();
            SessionResponse selectedSession = null;
            for (SessionResponse session : sessions) {
                String asessionName = nullTerminatedByteArrayToString(session.getSessionName().getBytes());

                if (asessionName.equals(fConnectionInfo.getSessionName())) {
                    selectedSession = session;
                    break;
                }
            }

            if (selectedSession == null) {
                throw new CoreException(new Status(IStatus.ERROR, Activator.PLUGIN_ID, Messages.LttngRelaydConsumer_SessionNotFound));
            }

            CreateSessionResponse createSession = fRelayd.createSession();
            if (createSession.getStatus() != CreateSessionReturnCode.LTTNG_VIEWER_CREATE_SESSION_OK) {
                throw new CoreException(new Status(IStatus.ERROR, Activator.PLUGIN_ID, Messages.LttngRelaydConsumer_CreateViewerSessionError + createSession.getStatus().toString()));
            }

            AttachSessionResponse attachedSession = fRelayd.attachToSession(selectedSession);
            if (attachedSession.getStatus() != AttachReturnCode.VIEWER_ATTACH_OK) {
                throw new CoreException(new Status(IStatus.ERROR, Activator.PLUGIN_ID, Messages.LttngRelaydConsumer_AttachSessionError + attachedSession.getStatus().toString()));
            }

            String metadata = fRelayd.getMetadata(attachedSession);
            if (metadata == null) {
                throw new CoreException(new Status(IStatus.ERROR, Activator.PLUGIN_ID, Messages.LttngRelaydConsumer_NoMetadata));
            }

            List<StreamResponse> attachedStreams = attachedSession.getStreamList();
            if (attachedStreams.isEmpty()) {
                throw new CoreException(new Status(IStatus.ERROR, Activator.PLUGIN_ID, Messages.LttngRelaydConsumer_NoStreams));
            }

            fTracePath = nullTerminatedByteArrayToString(attachedStreams.get(0).getPathName().getBytes());

            fSession = attachedSession;
        } catch (IOException e) {
            throw new CoreException(new Status(IStatus.ERROR, Activator.PLUGIN_ID, Messages.LttngRelaydConsumer_ErrorConnecting + (e.getMessage() != null ? e.getMessage() : ""))); //$NON-NLS-1$
        }
    }

