    @Override
    public Object execute(ExecutionEvent event) throws ExecutionException {

        IWorkbenchWindow window = PlatformUI.getWorkbench().getActiveWorkbenchWindow();

        if (window == null) {
            return false;
        }

        fLock.lock();
        try {

            final List<TraceSessionComponent> sessions = new ArrayList<>();
            sessions.addAll(fSessions);

            Job job = new Job(Messages.TraceControl_ChangeSessionStateJob) {
                @Override
                protected IStatus run(IProgressMonitor monitor) {
                    try {
                        for (Iterator<TraceSessionComponent> iterator = sessions.iterator(); iterator.hasNext();) {

                            // Start all selected sessions
                            TraceSessionComponent session = iterator.next();
                            changeState(session, monitor);

                            // Set Session state
                            session.setSessionState(getNewState());
                            session.fireComponentChanged(session);
                        }
                    } catch (ExecutionException e) {
                        return new Status(IStatus.ERROR, Activator.PLUGIN_ID, Messages.TraceControl_ChangeSessionStateFailure, e);
                    }
                    return Status.OK_STATUS;
                }
            };
            job.setUser(true);
            job.schedule();
        } finally {
            fLock.unlock();
        }
        return null;
    }

