    private void parseStream(CommonTree streamNode) throws ParseException {
        assert (streamNode.getType() == CTFParser.STREAM);

        Stream stream = new Stream(trace);

        List<CommonTree> children = streamNode.getChildren();
        if (children == null) {
            throw new ParseException("Empty stream block"); //$NON-NLS-1$
        }

        pushScope();

        for (CommonTree child : children) {
            switch (child.getType()) {
            case CTFParser.TYPEALIAS:
                parseTypealias(child);
                break;
            case CTFParser.TYPEDEF:
                parseTypedef(child);
                break;
            case CTFParser.CTF_EXPRESSION_TYPE:
            case CTFParser.CTF_EXPRESSION_VAL:
                parseStreamDeclaration(child, stream);
                break;
            default:
                childTypeError(child);
                break;
            }
        }

        if (stream.isIdSet()) {
            if (!trace.packetHeaderIsSet()
                    || !trace.getPacketHeader().hasField(CTFStrings.STREAM_ID)) {
                throw new ParseException(
                        "Stream has an ID, but there is no stream_id field in packet header."); //$NON-NLS-1$
            }
        }

        trace.addStream(stream);

        popScope();
    }

