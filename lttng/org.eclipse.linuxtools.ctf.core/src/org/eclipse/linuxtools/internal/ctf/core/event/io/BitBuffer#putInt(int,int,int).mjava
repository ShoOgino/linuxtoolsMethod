    /**
     * Absolute <i>put</i> method to write <i>length</i> bits integer.
     *
     * Writes <i>length</i> lower-order bits from the provided <i>value</i>,
     * starting from <i>index</i> position in the buffer. Sequential bytes are
     * written according to the current byte order. The sign bit is carried to
     * the MSB if signed is true. The sign bit is included in <i>length</i>. The
     * current position is increased of <i>length</i>.
     *
     * @param index
     *            The start position to write the value
     * @param value
     *            The value to write
     * @param length
     *            The number of bits to write
     */
    public void putInt(int index, int length, int value) {
        if (!canRead(index, length)) {
            throw new BufferOverflowException();
        }
        if (length == 0) {
            return;
        }
        if (byteOrder == ByteOrder.LITTLE_ENDIAN) {
            putIntLE(index, length, value);
        } else {
            putIntBE(index, length, value);
        }
    }

