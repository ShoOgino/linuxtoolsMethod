    /**
     * Gets the value of an "encoding" integer attribute.
     *
     * @param rightNode
     *            A CTF_RIGHT node.
     * @return The "encoding" value.
     * @throws ParseException
     */
    private static Encoding getEncoding(CommonTree rightNode)
            throws ParseException {
        assert (rightNode.getType() == CTFParser.CTF_RIGHT);

        CommonTree firstChild = (CommonTree) rightNode.getChild(0);

        if (isUnaryString(firstChild)) {
            String strval = concatenateUnaryStrings(rightNode.getChildren());

            if (strval.equals(CTFStrings.UTF8)) {
                return Encoding.UTF8;
            } else if (strval.equals(CTFStrings.ASCII)) {
                return Encoding.ASCII;
            } else if (strval.equals(CTFStrings.NONE)) {
                return Encoding.NONE;
            } else {
                throw new ParseException("Invalid value for encoding"); //$NON-NLS-1$
            }
        }
        throw new ParseException("Invalid value for encoding"); //$NON-NLS-1$
    }

