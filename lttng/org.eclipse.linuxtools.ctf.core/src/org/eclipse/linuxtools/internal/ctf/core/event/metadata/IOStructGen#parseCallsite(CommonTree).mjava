    private void parseCallsite(CommonTree callsite) {

        List<CommonTree> children = callsite.getChildren();
        String name = null;
        String func_name = null;
        long line_number = -1;
        long ip = -1;
        String file_name = null;

        for (CommonTree child : children) {
            String left;
            /* this is a regex to find the leading and trailing quotes*/
            final String regex = "^\"|\"$"; //$NON-NLS-1$
            /* this is to replace the previous quotes with nothing... effectively deleting them */
            final String nullString = ""; //$NON-NLS-1$
            left = child.getChild(0).getChild(0).getChild(0).getText();
            if (left.equals("name")) { //$NON-NLS-1$
                name = child.getChild(1).getChild(0).getChild(0).getText().replaceAll(regex, nullString);
            } else if (left.equals("func")) { //$NON-NLS-1$
                func_name = child.getChild(1).getChild(0).getChild(0).getText().replaceAll(regex, nullString);
            } else if (left.equals("ip")) { //$NON-NLS-1$
                ip = Long.parseLong(child.getChild(1).getChild(0).getChild(0).getText().substring(2),16); // trim the 0x
            } else if (left.equals("file")) { //$NON-NLS-1$
                file_name = child.getChild(1).getChild(0).getChild(0).getText().replaceAll(regex, nullString);
            } else if (left.equals("line")) { //$NON-NLS-1$
                line_number = Long.parseLong(child.getChild(1).getChild(0).getChild(0).getText());
            }
        }
        trace.addCallsite(name, func_name, ip,file_name, line_number);
    }

