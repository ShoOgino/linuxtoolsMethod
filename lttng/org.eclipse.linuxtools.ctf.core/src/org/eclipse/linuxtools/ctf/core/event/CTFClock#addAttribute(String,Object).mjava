    /**
     * Method addAttribute.
     *
     * @param key
     *            String
     * @param value
     *            Object
     */
    public void addAttribute(String key, Object value) {
        this.properties.put(key, value);
        if (key.equals(NAME)) {
            this.name = (String) value;
        }
        if (key.equals(FREQ)) {
            /*
             * Long is converted to a double. the double is then dividing
             * another double that double is saved. this is precise as long as
             * the long is under 53 bits long. this is ok as long as we don't
             * have a system with a frequency of > 1 600 000 000 GHz with
             * 200 ppm precision
             */
            isScaled = !((Long) getProperty(FREQ)).equals(1000000000L);
            clockScale = 1000000000.0 / ((Long) getProperty(FREQ)).doubleValue();
            clockAntiScale = 1.0 / clockScale;

        }
        if (key.equals(OFFSET)) {
            clockOffset = (Long) getProperty(OFFSET);
        }
    }

