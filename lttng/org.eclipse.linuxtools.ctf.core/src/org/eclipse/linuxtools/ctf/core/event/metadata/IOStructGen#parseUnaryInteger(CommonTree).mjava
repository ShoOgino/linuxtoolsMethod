    /**
     * Parses an unary integer (dec, hex or oct).
     *
     * @param unaryInteger
     *            An unary integer node.
     * @return The integer value.
     */
    private static long parseUnaryInteger(CommonTree unaryInteger) {
        assert (isUnaryInteger(unaryInteger));

        assert (unaryInteger.getChildCount() >= 1);

        List<CommonTree> children = unaryInteger.getChildren();
        CommonTree value = children.get(0);
        String strval = value.getText();

        long intval;

        if (unaryInteger.getType() == CTFParser.UNARY_EXPRESSION_DEC) {
            intval = Long.parseLong(strval, 10);
        } else if (unaryInteger.getType() == CTFParser.UNARY_EXPRESSION_HEX) {
            intval = Long.parseLong(strval, 0x10);
        } else { /* unaryInteger.getType() == CTFParser.UNARY_EXPRESSION_OCT */
            intval = Long.parseLong(strval, 010); // 010 == 0x08 == 8
        }

        /* The rest of children are sign */
        if ((children.size() % 2) == 0) {
            return -intval;
        }
        return intval;
    }

