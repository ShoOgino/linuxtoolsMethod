    /**
     * Gets a UUID from an array defintion
     *
     * @param uuidDef
     *            the array defintions, must contain integer bytes
     * @return the UUID
     * @throws CTFReaderException
     *             if the definition contains less than 16 elements
     * @since 3.1
     */
    public static UUID getUUIDfromDefinition(AbstractArrayDefinition uuidDef) throws CTFReaderException {
        byte[] uuidArray = new byte[16];
        IDeclaration declaration = uuidDef.getDeclaration();
        if (!(declaration instanceof CompoundDeclaration)) {
            throw new CTFReaderException("UUID must be a sequence of unsigned bytes"); //$NON-NLS-1$
        }
        CompoundDeclaration uuidDec = (CompoundDeclaration) declaration;

        IDeclaration uuidElem = uuidDec.getElementType();
        if (!(uuidElem instanceof IntegerDeclaration)) {
            throw new CTFReaderException("UUID must be a sequence of unsigned bytes"); //$NON-NLS-1$
        }
        IntegerDeclaration intUuidElem = (IntegerDeclaration) uuidElem;
        if (!intUuidElem.isUnsignedByte()) {
            throw new CTFReaderException("UUID must be a sequence of unsigned bytes"); //$NON-NLS-1$
        }
        return getUUID(uuidDef, uuidArray);
    }

