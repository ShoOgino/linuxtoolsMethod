    /**
     * Reads the next event of the packet into the right event definition.
     *
     * @return The event definition containing the event data that was just
     *         read.
     * @throws CTFReaderException
     *             If there was a problem reading the trace
     */
    public EventDefinition readNextEvent() throws CTFReaderException {
        /* Default values for those fields */
        long eventID = 0;
        long timestamp = 0;

        if (lostEventsInThisPacket > lostSoFar) {
            EventDefinition eventDef = EventDeclaration.getLostEventDeclaration().createDefinition(
                    streamInputReader);
            eventDef.setTimestamp(this.lastTimestamp);
            ++lostSoFar;
            return eventDef;
        }

        final StructDefinition sehd = getStreamEventHeaderDef();
        final BitBuffer currentBitBuffer = getBitBuffer();

        /* Read the stream event header. */
        if (sehd != null) {
            sehd.read(currentBitBuffer);

            /* Check for the event id. */
            Definition idDef = sehd.lookupDefinition("id"); //$NON-NLS-1$
            if (idDef instanceof SimpleDatatypeDefinition) {
                eventID = ((SimpleDatatypeDefinition) idDef).getIntegerValue();
            } // else, eventID remains 0

            /* Get the timestamp from the event header (may be overridden later on) */
            Definition timestampDef = sehd.lookupInteger("timestamp"); //$NON-NLS-1$

            /* Check for the variant v. */
            VariantDefinition variantDef = (VariantDefinition) sehd.lookupDefinition("v"); //$NON-NLS-1$
            if (variantDef != null) {

                /* Get the variant current field */
                StructDefinition variantCurrentField = (StructDefinition) variantDef.getCurrentField();

                /*
                 * Try to get the id field in the current field of the variant.
                 * If it is present, it overrides the previously read event id.
                 */
                IntegerDefinition idIntegerDef = (IntegerDefinition) variantCurrentField.lookupDefinition("id"); //$NON-NLS-1$
                if (idIntegerDef != null) {
                    eventID = idIntegerDef.getValue();
                }

                /* Get the timestamp. */
                timestampDef = variantCurrentField.lookupDefinition("timestamp"); //$NON-NLS-1$
            }

            /* Calculate the event timestamp. */
            if (timestampDef instanceof IntegerDefinition) {
                timestamp = calculateTimestamp((IntegerDefinition) timestampDef);
            } // else timestamp remains 0
        }

        /* Read the stream event context. */
        if (streamEventContextDef != null) {
            streamEventContextDef.read(currentBitBuffer);
        }

        /* Get the right event definition using the event id. */
        EventDefinition eventDef = events.get(eventID);
        if (eventDef == null) {
            throw new CTFReaderException("Incorrect event id : " + eventID); //$NON-NLS-1$
        }

        /* Read the event context. */
        if (eventDef.getContext() != null) {
            eventDef.getContext().read(currentBitBuffer);
        }

        /* Read the event fields. */
        if (eventDef.getFields() != null) {
            eventDef.getFields().read(currentBitBuffer);
        }

        /*
         * Set the event timestamp using the timestamp calculated by
         * updateTimestamp.
         */
        eventDef.setTimestamp(timestamp);

        return eventDef;
    }

