    /**
     * Creates the string representation of a list of pointers.
     *
     * @param pointerList
     *            A list of pointer nodes. If pointerList is null, this function
     *            does nothing.
     * @param sb
     *            A stringbuilder to which will be appended the string.
     */
    private static void createPointerListString(List<CommonTree> pointerList,
            StringBuilder sb) {
        if (pointerList == null) {
            return;
        }

        for (CommonTree pointer : pointerList) {
            assert (pointer.getType() == CTFParser.POINTER);

            sb.append(" *"); //$NON-NLS-1$
            if (pointer.getChildCount() > 0) {
                assert (pointer.getChildCount() == 1);
                CommonTree constQualifier = (CommonTree) pointer.getChild(0);
                assert (constQualifier.getType() == CTFParser.CONSTTOK);

                sb.append(" const"); //$NON-NLS-1$
            }
        }
    }

