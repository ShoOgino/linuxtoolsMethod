    /**
     * Get the minimum value for this integer declaration.
     *
     * @return The minimum value for this integer declaration
     * @since 2.0
     */
    public BigInteger getMinValue() {
        if (!fSigned) {
            @SuppressWarnings("null")
            @NonNull BigInteger ret = BigInteger.ZERO;
            return ret;
        }

        /*
         * Compute the number of bits able to represent an unsigned number,
         * without the sign bit.
         */
        int significantBits = fLength - 1;
        /*
         * For a given N significant bits, compute the minimal value which is -
         * (1 << N).
         */
        @SuppressWarnings("null")
        @NonNull BigInteger ret = BigInteger.ONE.shiftLeft(significantBits).negate();
        return ret;
    }

