    /**
     * Accelerated create definition
     *
     * @param definitionScope
     *            the definition scope
     * @param fieldScope
     *            the lexical scope of this element
     * @param input
     *            the {@Link BitBuffer} to read
     * @return the Struct definition
     * @throws CTFReaderException
     *             read error and such
     * @since 3.1
     */
    public StructDefinition createDefinition(IDefinitionScope definitionScope,
            LexicalScope fieldScope, @NonNull BitBuffer input) throws CTFReaderException {
        alignRead(input);
        final Definition[] myFields = new Definition[fFieldMap.size()];
        Set<String> keySet = fFieldMap.keySet();
        if (keySet == null) {
            keySet = Collections.EMPTY_SET;
            if( keySet == null ) {
                throw new IllegalStateException();
            }
        }
        StructDefinition structDefinition = new StructDefinition(this, definitionScope, fieldScope, fieldScope.getName(), keySet, myFields);
        Iterator<Map.Entry<String, IDeclaration>> iter = fFieldMap.entrySet().iterator();
        for (int i = 0; i < fFieldMap.size(); i++) {
            Map.Entry<String, IDeclaration> entry = iter.next();
            String fieldName = entry.getKey();
            if (fieldName == null) {
                throw new IllegalStateException();
            }
            myFields[i] = entry.getValue().createDefinition(structDefinition, fieldName, input);
        }
        return structDefinition;
    }

