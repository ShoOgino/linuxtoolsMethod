    /**
     * Factory method to instantiate new {@link CtfTmfEvent}'s.
     *
     * @param eventDef
     *            CTF EventDefinition object corresponding to this trace event
     * @param fileName
     *            The path to the trace file
     * @param originTrace
     *            The trace from which this event originates
     * @return The newly-built CtfTmfEvent
     */
    public static CtfTmfEvent createEvent(EventDefinition eventDef,
            String fileName, CtfTmfTrace originTrace) {

        /* Prepare what to pass to CtfTmfEvent's constructor */
        final IEventDeclaration eventDecl = eventDef.getDeclaration();
        final long ts = eventDef.getTimestamp();
        final CtfTmfTimestamp timestamp = originTrace.createTimestamp(
                originTrace.getCTFTrace().timestampCyclesToNanos(ts));

        int sourceCPU = eventDef.getCPU();

        String reference = fileName == null ? NO_STREAM : fileName;

        /* Handle the special case of lost events */
        if (eventDecl.getName().equals(CTFStrings.LOST_EVENT_NAME)) {
            Definition nbLostEventsDef = eventDef.getFields().getDefinition(CTFStrings.LOST_EVENTS_FIELD);
            Definition durationDef = eventDef.getFields().getDefinition(CTFStrings.LOST_EVENTS_DURATION);
            if (!(nbLostEventsDef instanceof IntegerDefinition) || !(durationDef instanceof IntegerDefinition)) {
                /*
                 * One or both of these fields doesn't exist, or is not of the
                 * right type. The event claims to be a "lost event", but is
                 * malformed. Log it and return a null event instead.
                 */
                return getNullEvent();
            }
            long nbLostEvents = ((IntegerDefinition) nbLostEventsDef).getValue();
            long duration = ((IntegerDefinition) durationDef).getValue();
            CtfTmfTimestamp timestampEnd = new CtfTmfTimestamp(
                    originTrace.getCTFTrace().timestampCyclesToNanos(ts) + duration);

            CtfTmfLostEvent lostEvent = new CtfTmfLostEvent(originTrace,
                    ITmfContext.UNKNOWN_RANK,
                    reference, // filename
                    sourceCPU,
                    eventDecl,
                    new TmfTimeRange(timestamp, timestampEnd),
                    nbLostEvents,
                    eventDef);
            return lostEvent;
        }

        /* Handle standard event types */
        CtfTmfEvent event = new CtfTmfEvent(
                originTrace,
                ITmfContext.UNKNOWN_RANK,
                timestamp,
                reference, // filename
                sourceCPU,
                eventDecl,
                eventDef);
        return event;
    }

