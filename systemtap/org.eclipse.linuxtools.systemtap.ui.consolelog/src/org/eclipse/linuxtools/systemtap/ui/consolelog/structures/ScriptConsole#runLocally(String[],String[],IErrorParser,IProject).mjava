    /**
     * Runs the provided command in this ScriptConsole instance on the current
     * host.
     * @param command The command and arguments to run.
     * @param envVars The environment variables to use while running
     * @param errorParser The parser to handle error messages generated by the command
     * @param project The project that command belongs to or null
     * @since 2.1
     */
    public void runLocally(String[] command, String[] envVars, IErrorParser errorParser, IProject project) {
        // Don't start a new command if one is already waiting to be started.
        if (waitingToStart()) {
            return;
        }
        cmd = new Command(command, envVars, project);
        final IProject proj = project;

        stopCommand = new StopCommand(cmd, getStopString()) {
            @Override
            protected void stop() throws IOException {
                RuntimeProcessFactory.getFactory().exec(stopString, null, proj);
            }
        };

        this.run(cmd, errorParser);
    }

