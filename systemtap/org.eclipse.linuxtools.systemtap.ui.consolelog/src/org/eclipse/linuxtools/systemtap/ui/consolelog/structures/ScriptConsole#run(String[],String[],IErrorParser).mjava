	/**
	 * Runs the provided command in this ScriptConsole instance.
	 * @param command The command and arguments to run.
	 * @param envVars The environment variables to use while running
	 * @param errorParser The parser to handle error messages generated by the command
	 * @since 2.0
	 */
	public void run(String[] command, String[] envVars, IErrorParser errorParser) {
		// Don't start a new command if one is already waiting to be started.
		if (onCmdStartThread != null && onCmdStartThread.isAlive()) {
			return;
		}
		cmd = new ScpExec(command);

		this.stopCommand = new Runnable() {
			private Command stopcmd = cmd;
			private String stopString = getStopString();

			@Override
			public void run() {
				ScpExec stop = new ScpExec(new String[]{stopString});
				try {
					do {
						stop.start();
						synchronized (stopcmd) {
							stopcmd.wait(RETRY_STOP_TIME);
						}
					} while (stopcmd.isRunning());
				} catch (CoreException e) {
					// Failed to start the 'stop' process. Ignore.
				} catch (InterruptedException e) {
					// Wait was interrupted. Exit.
				}
			}
		};
	    this.run(cmd, errorParser);
	}

