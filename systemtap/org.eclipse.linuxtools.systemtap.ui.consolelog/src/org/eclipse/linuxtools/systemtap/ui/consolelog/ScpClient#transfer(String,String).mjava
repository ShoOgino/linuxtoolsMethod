    public void transfer(String fromFile, String toFile) throws IOException, JSchException{
    	FileInputStream fis=null;
      String rfile=toFile;
      String lfile=fromFile;
      String command="scp -t "+rfile; //$NON-NLS-1$
      try {
    	  Channel channel=session.openChannel("exec"); //$NON-NLS-1$
    	  ((ChannelExec)channel).setCommand(command);

    	  // get I/O streams for remote scp
    	  OutputStream out=channel.getOutputStream();
    	  InputStream in=channel.getInputStream();

    	  channel.connect();

      if(checkAck(in)!=0){
    	  System.out.println("err"); //$NON-NLS-1$
      }

      // send "C0644 filesize filename", where filename should not include '/'
      long filesize=(new File(lfile)).length();
      command="C0644 "+filesize+" "; //$NON-NLS-1$ //$NON-NLS-2$
      if(lfile.lastIndexOf('/')>0){
        command+=lfile.substring(lfile.lastIndexOf('/')+1);
      }
      else{
        command+=lfile;
      }
      command+="\n"; //$NON-NLS-1$

      out.write(command.getBytes()); out.flush();
      if(checkAck(in)!=0){
    	  System.out.println("err"); //$NON-NLS-1$
      }

      // send a content of lfile
      fis=new FileInputStream(lfile);
      byte[] buf=new byte[1024];
      while(true){
        int len=fis.read(buf, 0, buf.length);
	if(len<=0) break;
        out.write(buf, 0, len); //out.flush();

      }
      fis.close();
      fis=null;
      // send '\0'
      buf[0]=0; out.write(buf, 0, 1); out.flush();
      if(checkAck(in)!=0){
	System.out.println("err"); //$NON-NLS-1$
      }
      out.close();

      channel.disconnect();
      session.disconnect();

    }
    catch(IOException e){
      if(fis!=null)
    	  fis.close();
      throw e;
    }
  }

