	public boolean init() {
			// send subscription request packet
			// check if response is OK

		if (!ClientSession.isConnected()) {
			return false;
	     }
		
		
	  // BusyIndicator.showWhile(null, new Runnable() {
		//   public void run() {
        try{
		ScpClient scpclient = new ScpClient();
		 scpclient.transfer(filename,"/tmp/"+ filename.substring(filename.lastIndexOf('/')+1));
        }catch(Exception e){e.printStackTrace();}
		scriptid = ClientSession.getNewScriptId();
		final DMRequest subreq = new DMRequest(DMRequest.SUBSCRIBE,scriptid, filename,session.getcid(), 0, isGuru);
		if (!session.sendRequest(subreq)) {
			//System.out.println("sent subscription");
		//	return false;
		}
		
		
		session.addSubscription(scriptid);
		// FIXME: horrible hack. I think there is some sort of deadlock issue
		// when starting up, either way this fixes it.
		try { Thread.sleep(500); }
		catch (InterruptedException ie) {}
		
		final DMResponse subrep = session.recvResponse(scriptid);
		if (subrep.isValid()) {
	    	scriptid = subrep.getscriptID();
			
			
			logger = new LoggingStreamDaemon();
			inputListeners.add(logger);
			
			try{
			pos = new PipedOutputStream();
	        pis = new PipedInputStream(pos);
	        pos.flush();
	    	}catch(Exception e)
			{
	    		new ErrorMessage("Could not subscribe!", "See stderr for more details").open();
			}
			            
			inputGobbler = new StreamGobbler(pis);
			addInputStreamListener(logger); 
			
			return true;
		}
		else {
			session.delSubscription(scriptid);
			new ErrorMessage("Could not subscribe!", "Response from Server not valid \n See stderr for more details").open();
			return false;
		} 
	}

