        /**
         * Prepares and begins the process (in a new thread) that will stop the provided command.
         * If there is already a running stop process, though, no action will be taken.
         * @param stopcmd The command to stop.
         * @param stopErrorDaemon The error stream gobbler of the command to stop.
         * @param stopConsoleDaemon The output stream gobbler of the command to stop.
         * @param disposeOnStop If <code>true</code>, the command will be disposed when it is stopped.
         */
        void start(Command stopcmd, ErrorStreamDaemon stopErrorDaemon,
                ConsoleStreamDaemon stopConsoleDaemon, boolean disposeOnStop) {
            if (isRunning() && !isThreadAlive(stopCommandThread)) {
                this.stopcmd = stopcmd;
                this.stopErrorDaemon = stopErrorDaemon;
                this.stopConsoleDaemon = stopConsoleDaemon;
                this.disposeOnStop = disposeOnStop;
                stopCommandThread = new Thread(this);
                stopCommandThread.start();
            }
        }

