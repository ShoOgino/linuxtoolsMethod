	//FOR TESTING RAW STAP SCRIPT OUTPUT
	public String getCommandOutput(String command, boolean needsBinary){
		try {
			//CREATE/ACCESS A TEMPORARY FILE TO HOLD THE SCRIPT
			File file = new File(scriptPath);
			file.createNewFile();

			//WRITE THE COMMAND TO THE FILE
			BufferedWriter wbuff = new BufferedWriter(new FileWriter(file));
			wbuff.write(command);
			wbuff.close();

			//EXECUTE THE COMMAND
			Process pr = null;
			RuntimeProcessFactory.getFactory().exec("kill stap", null);
			if (needsBinary){
				pr = RuntimeProcessFactory.getFactory().exec("stap -c '"+binaryPath+ "' "+ scriptPath + " " + binaryPath, null);
			}else{
				pr = RuntimeProcessFactory.getFactory().exec("stap "+scriptPath, null);
			}
			pr.waitFor();

			InputStream inpstr = pr.getInputStream();
			BufferedReader rbuff = new BufferedReader (new InputStreamReader(inpstr));
			String line = "";
			StringBuilder text = new StringBuilder();

			//READ THE STANDARD OUTPUT OF COMMAND
			while ((line = rbuff.readLine()) != null){
				text.append(line);
			}

			rbuff.close();
			return text.toString();

		} catch (IOException e) {
			e.printStackTrace();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		return null;
	}

