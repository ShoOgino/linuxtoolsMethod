    /*
     * (non-Javadoc)
     * 
     * @see com.ibm.examples.chart.widget.AbstractChartBuilder#buildYSeries()
     */
    protected void buildYSeries() {
   try{
        int starting = 0;
        if (data.length > xSeriesTicks ) starting = data.length - xSeriesTicks;
     //   int yseriescount = adapter.getSeriesCount();
        NumberDataSet orthoValuesDataSet;
        DialSeries ds1;
        SeriesDefinition sdY; 
        	
        
          //for (int i =1; i<=yseriescount;i++)
        int i=0;
          y= new Double[data.length - starting];
           for (int j=starting,k=0; j < data.length; j++,k++ )
           {
           	y[k] = NumberType.obj2num(data[j][i]).doubleValue();
           	if ( max < y[k]) max = y[k];
           	if ( min > y[k]) min = y[k];
           }
           orthoValuesDataSet = NumberDataSetImpl.create(y);
           ds1= (DialSeries) DialSeriesImpl.create();
           ds1.setDataSet(orthoValuesDataSet);
          
          ds1.getLabel().setVisible(true);
          ds1.setLabelPosition(Position.INSIDE_LITERAL);
          
                 
            ds1.setSeriesIdentifier(labels[i]);
            //ds1.getDial( ).setFill( GradientImpl.create( ColorDefinitionImpl.create( 225,255,225 ),ColorDefinitionImpl.create( 225, 225, 255 ),45,false ) );
        	ds1.getDial( ).getMinorGrid( ).getTickAttributes( ).setVisible( true );
        	ds1.getDial( ).getMinorGrid( ).getTickAttributes( ).setColor( ColorDefinitionImpl.BLACK( ) );
        	ds1.getDial( ).getMinorGrid( ).setTickStyle( TickStyle.BELOW_LITERAL );
            ds1.getNeedle( ).setDecorator( LineDecorator.CIRCLE_LITERAL );
            sdY = SeriesDefinitionImpl.create();
             sdY.getSeries().add(ds1);
             sdX.getSeriesDefinitions().add(sdY);
             ds1.getLabel( )
				.setOutline( LineAttributesImpl.create( ColorDefinitionImpl.GREY( )
						.darker( ),
						LineStyle.SOLID_LITERAL,
						1 ) );
		    // ds1.getLabel( ).setBackground( ColorDefinitionImpl.GREY( ).brighter( ) );
		     DialRegion dregion1 = DialRegionImpl.create( );
				dregion1.setFill( ColorDefinitionImpl.GREEN( ) );
				dregion1.setOutline( LineAttributesImpl.create( ColorDefinitionImpl.BLACK( )
						.darker( ),
						LineStyle.SOLID_LITERAL,
						1 ) );
				dregion1.setStartValue( NumberDataElementImpl.create( 70 ) );
				dregion1.setEndValue( NumberDataElementImpl.create( 90 ) );
				dregion1.setInnerRadius( 40 );
				dregion1.setOuterRadius( -1 );
				ds1.getDial( ).getDialRegions( ).add( dregion1 );

				DialRegion dregion2 = DialRegionImpl.create( );
				dregion2.setFill( ColorDefinitionImpl.YELLOW( ) );
				dregion2.setOutline( LineAttributesImpl.create( ColorDefinitionImpl.BLACK( )
						.darker( ),
						LineStyle.SOLID_LITERAL,
						1 ) );
				dregion2.setStartValue( NumberDataElementImpl.create( 40 ) );
				dregion2.setEndValue( NumberDataElementImpl.create( 70 ) );
				dregion2.setOuterRadius( 70 );
				ds1.getDial( ).getDialRegions( ).add( dregion2 );

				DialRegion dregion3 = DialRegionImpl.create( );
				dregion3.setFill( ColorDefinitionImpl.RED( ) );
				dregion3.setOutline( LineAttributesImpl.create( ColorDefinitionImpl.BLACK( )
						.darker( ),
						LineStyle.SOLID_LITERAL,
						1 ) );
				dregion3.setStartValue( NumberDataElementImpl.create( 0 ) );
				dregion3.setEndValue( NumberDataElementImpl.create( 40 ) );
				dregion3.setInnerRadius( 40 );
				dregion3.setOuterRadius( 90 );
				ds1.getDial( ).getDialRegions( ).add( dregion3 );
				ds1.getLabel().getCaption().getFont().setSize(6);
        
        
   }catch (Exception e)
   {
	   e.printStackTrace();
   }
    }

