	@Override
	public void calculateBounds() {
		x1 = graph.getXPadding();
		y1 = graph.getYPadding();
		x2 = graph.getSize().x-graph.getXPadding();
		y2 = graph.getSize().y-graph.getYPadding();
		locationX = graph.getXPadding();
		locationY = graph.getSize().y - graph.getYPadding();
		tickAmount = 0;

		switch(type&1) {
		case VERTICAL:
			widthX = 0;
			widthY = graph.getSize().y - (graph.getYPadding()<<1);
			tickIncrament = ((graph.getLocalYMax()-graph.getLocalYMin())/(double)tickCount);
			range = graph.getLocalYMax() - graph.getLocalYMin();
			localMin = graph.getLocalYMin();
			break;
		case HORIZONTAL:
			widthX = graph.getSize().x - (graph.getXPadding()<<1);
			widthY = 0;
			tickIncrament = ((graph.getLocalXMax()-graph.getLocalXMin())/(double)tickCount);
			range = graph.getLocalXMax() - graph.getLocalXMin();
			localMin = graph.getLocalXMin();
			break;
		}

		switch(type&3) {
		case ALIGN_BOTTOM:
			locationY = graph.getYPadding();
			y1 = graph.getSize().y-graph.getYPadding();
			y2a = graph.getSize().y - graph.getYPadding();
			x2a = (int)locationX;
			break;
		case ALIGN_TOP:
			y2 = graph.getYPadding();
			y2a = graph.getYPadding();
			x2a = (int)locationX;
			break;
		case ALIGN_LEFT:
			x2 = graph.getXPadding();
			y2a = (int)locationY;
			x2a = graph.getSize().x-graph.getXPadding();
			break;
		case ALIGN_RIGHT:
			locationX = graph.getSize().x-graph.getXPadding();
			x1 = graph.getSize().x-graph.getXPadding();
			y2a = (int)locationY;
			x2a = graph.getXPadding();
			break;
		}
	}

