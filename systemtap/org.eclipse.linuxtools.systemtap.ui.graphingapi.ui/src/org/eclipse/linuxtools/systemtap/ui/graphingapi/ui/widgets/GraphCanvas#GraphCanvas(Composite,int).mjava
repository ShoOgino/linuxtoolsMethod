	/**
	 * The default constructor for GraphCanvas. Creates a canvas of the appropriate size, then
	 * sets the internal area rectangles, the internal padding and scaling levels, enables scrolling,
	 * and sets the default axis color.
	 * @param parent Parent composite for this canvas.
	 * @param style SWT Style flags for this canvas (use SWT.NONE)
	 */
	public GraphCanvas(Composite parent, int style) {
		super(parent, style | SWT.V_SCROLL | SWT.H_SCROLL);

		globalArea = new Rectangle(0, 0, 0, 0);
		localArea = new Rectangle(0, 0, 0, 0);

		xpad = 10;
		ypad = 10;
		scale = 1.0;
		autoScroll = true;

		axisColor = parent.getDisplay().getSystemColor(SWT.COLOR_GRAY);

		hBar = this.getHorizontalBar();
		vBar = this.getVerticalBar();
		hBar.addListener (SWT.Selection, new Listener () {
			@Override
			public void handleEvent (Event e) {
				if(hBar.getSelection()+hBar.getThumb() == hBar.getMaximum())
					autoScroll = true;
				else
					autoScroll = false;

				setLocalArea(new Rectangle(hBar.getSelection(), localArea.y, localArea.width, localArea.height), true);
				redraw();
			}
		});

		vBar.addListener (SWT.Selection, new Listener () {
			@Override
			public void handleEvent (Event e) {
				autoScroll = false;

				setLocalArea(new Rectangle(localArea.x, vBar.getMaximum()-(vBar.getSelection()+vBar.getThumb())+vBar.getMinimum(), localArea.width, localArea.height), true);
				redraw();
			}
		});

	}

