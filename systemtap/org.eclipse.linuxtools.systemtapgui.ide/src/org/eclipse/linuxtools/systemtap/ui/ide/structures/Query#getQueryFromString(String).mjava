	/**
	 * Creates a Query object from a string created by toSavableQueryString()
	 * 
	 * @param query
	 *            The query string to be turned into a Query object.
	 * @return a new Query object created by the given string.
	 */
	public static Query getQueryFromString(final String query) {
		if (query == null)
			return null;
		final String[] subQuery = query.split("::");
		final Query tempQuery = new Query(subQuery[0]);
		for (int i = 1; i < subQuery.length; i++) {
			subQuery[i] = subQuery[i].trim();
			if (subQuery[i].startsWith("COLS ")) {
				String temp = subQuery[i].replace("COLS ", "");
				temp = temp.trim();
				final StringTokenizer tok = new StringTokenizer(temp);
				final String next = tok.nextToken();
				if (next.equals("null") || next.equals("*"))
					tempQuery.columnNames = null;
				else {
					tempQuery.columnNames = new String[tok.countTokens() + 1];
					tempQuery.columnNames[0] = next;
					for (int j = 1; j < tempQuery.columnNames.length; j++)
						tempQuery.columnNames[j] = tok.nextToken();
				}
			} else if (subQuery[i].startsWith("NEW_COLS ")) {
				String temp = subQuery[i].replace("NEW_COLS ", "");
				temp = temp.trim();
				final StringTokenizer tok = new StringTokenizer(temp);
				final String next = tok.nextToken();
				if (next.equals("null"))
					tempQuery.newColumnNames = null;
				else {
					tempQuery.newColumnNames = new String[tok.countTokens() + 1];
					tempQuery.newColumnNames[0] = next;
					for (int j = 1; j < tempQuery.newColumnNames.length; j++)
						tempQuery.newColumnNames[j] = tok.nextToken();
				}
			} else if (subQuery[i].startsWith("WHERE ")) {
				String temp = subQuery[i].replace("WHERE ", "");
				temp = temp.trim();
				if (temp.equals("null"))
					tempQuery.where = null;
				else
					tempQuery.where = temp;
			} else if (subQuery[i].startsWith("GROUP ")) {
				String temp = subQuery[i].replace("GROUP ", "");
				temp = temp.trim();
				if (temp.equals("null"))
					tempQuery.groupBy = null;
				else
					tempQuery.groupBy = temp;
			} else if (subQuery[i].startsWith("ORDER ")) {
				String temp = subQuery[i].replace("ORDER ", "");
				temp = temp.trim();
				if (temp.equals("null"))
					tempQuery.orderBy = null;
				else
					tempQuery.orderBy = temp;
			}
		}
		return tempQuery;
	}

