	/**
	 * Writes the tree passed in to the <code>IMemento</code> argument, up to the specified depth. 
	 * @param child The <code>IMemento</code> to store the tree to.
	 * @param tree The <code>TreeNode</code> to store.
	 * @param depth The maximum depth level to write out.
	 */
	private static void writeTree(IMemento child, TreeNode tree, int depth) {
		if(null == tree.toString())
			child.putString("string", "<null>");
		else
			child.putString("string", tree.toString());

		if(null == tree.getData())
			child.putString("data","<null>");
		else
			child.putString("data", tree.getData().toString());

		if(tree instanceof TreeDefinitionNode) {
			if(null == ((TreeDefinitionNode)tree).getDefinition())
				child.putString("definition","<null>");
			else
				child.putString("definition", ((TreeDefinitionNode)tree).getDefinition().toString());
		}
		
		child.putInteger("click", (tree.isClickable()?1:0));
		for(int i=0; i<tree.getChildCount(); i++) {
			writeTree(child.createChild("level" + depth), tree.getChildAt(i), depth+1);
		}
	}

