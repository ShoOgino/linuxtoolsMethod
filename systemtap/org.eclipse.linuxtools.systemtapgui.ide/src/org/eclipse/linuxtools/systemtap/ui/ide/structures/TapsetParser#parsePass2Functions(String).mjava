	/**
	 * Parses the output generated from running stap -up2 on the list of functions. 
	 * Will update the function tree with return values for each function.
	 * @param s The entire output from running stap -up2 on the functions.
	 */
	private void parsePass2Functions(String s) {
		int i, j, k;
		TreeNode child, child2;
		String childString;
		String[] functionLines = new String[0];
		if(s.contains("# functions") && s.contains("# probes"))
			functionLines = s.substring(s.indexOf("# functions"), s.indexOf("# probes")).split("\n");

		//Rename the functions with types
		for(i=0; i<functionLines.length; i++) {
			for(j=0; j<functions.getChildCount(); j++) {
				child = functions.getChildAt(j);
				for(k=0; k<child.getChildCount(); k++) {
					child2 = child.getChildAt(k);
					childString = child2.toString();
					if (childString.indexOf("(") != -1) {
					if(functionLines[i].startsWith(childString.substring(0, childString.indexOf("(")).trim() + ":")) {
						child2.setData(functionLines[i]);
						break;
					}
					}
				}
			}
		}
	}

