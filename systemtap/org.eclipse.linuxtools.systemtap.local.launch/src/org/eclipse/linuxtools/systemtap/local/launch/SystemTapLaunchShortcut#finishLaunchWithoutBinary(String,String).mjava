	//TODO: Should merge finishWith and Without binary - we only use
	//the IBinary to find the name, in any case.
	/**
	 * This function is identical to the function above, except it does not
	 * require a binary.
	 * 
	 * Helper function to complete launches. Uses protected parameters
	 * (Strings) scriptPath, arguments, outputPath and (boolean)
	 * overwrite. These must be set by the calling function (or else
	 * nonsensical results will occur).
	 * 
	 * ScriptPath MUST be set.
	 * 
	 * @param name: Used to generate the name of the new configuration
	 * @param bin:	Affiliated executable
	 * @param mode:	Mode setting
	 */
protected void finishLaunchWithoutBinary(String name, String mode) {
		
	
		if (scriptPath.length() < 1) {
			SystemTapUIErrorMessages mess = new SystemTapUIErrorMessages(Messages.getString("SystemTapLaunchShortcut.ErrorMessagename"),  //$NON-NLS-1$
					Messages.getString("SystemTapLaunchShortcut.ErrorMessageTitle"), Messages.getString("SystemTapLaunchShortcut.ErrorMessage") + name); //$NON-NLS-1$ //$NON-NLS-2$
			mess.schedule();
			return;
		}
	
		ILaunchConfigurationWorkingCopy wc = null;
		if (config != null) {
			try {
				wc = config.getWorkingCopy(); 
			} catch (CoreException e1) {
				e1.printStackTrace();
			}
			
			wc.setAttribute(LaunchConfigurationConstants.SCRIPT_PATH, scriptPath);
			wc.setAttribute(LaunchConfigurationConstants.OUTPUT_PATH, outputPath);
			wc.setAttribute(LaunchConfigurationConstants.ARGUMENTS, arguments);
			wc.setAttribute(LaunchConfigurationConstants.GENERATED_SCRIPT, generatedScript);
			wc.setAttribute(LaunchConfigurationConstants.NEED_TO_GENERATE, needToGenerate);
			wc.setAttribute(LaunchConfigurationConstants.OVERWRITE, overwrite);
			wc.setAttribute(LaunchConfigurationConstants.USE_COLOUR, useColours);

			
			try {
				config = wc.doSave();
			} catch (CoreException e) {
				e.printStackTrace();
			}
			checkForExistingConfiguration();

			if (!testMode)
			DebugUITools.launch(config, mode);
		}
	}

