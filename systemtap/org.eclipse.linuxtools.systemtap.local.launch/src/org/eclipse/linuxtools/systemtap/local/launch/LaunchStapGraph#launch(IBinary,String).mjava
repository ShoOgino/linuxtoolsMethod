	public void launch(IBinary bin, String mode) {
		super.Init();
		this.bin = bin;
		name = "SystemTapGraph";  //$NON-NLS-1$
		binName = getName(bin);
		partialScriptPath = PluginConstants.getPluginLocation()
				+ "parse_function_partial.stp";  //$NON-NLS-1$

		scriptPath = PluginConstants.DEFAULT_OUTPUT 
				+ "callgraphGen.stp";  //$NON-NLS-1$

		
		if (projectName == null || projectName.length() < 1)
			projectName = bin.getCProject().getElementName();
		
		try {
			 
			config = createConfiguration(bin, name);
			binaryPath = bin.getResource().getLocation().toString();
			arguments = binaryPath;
			outputPath = PluginConstants.STAP_GRAPH_DEFAULT_IO_PATH;
			
			if (funcs == null || funcs.length() < 1) {
				funcs = writeFunctionListToScript(resourceToSearchFor);
				if (funcs == null || funcs.length() < 0)
					return;
			}
			String scriptContents = generateScript();
			if (scriptContents == null || scriptContents.length() < 0)
				return;
			ILaunchConfigurationWorkingCopy wc;
			
			wc = config.getWorkingCopy();
			wc.setAttribute("MOREDATA_LOL", funcs);
			wc.setAttribute("PROJECT_NAME_LOL", bin.getCProject().getElementName());
			wc.setAttribute(LaunchConfigurationConstants.GRAPHICS_MODE, true);
//			wc.setAttribute(LaunchConfigurationConstants.COMMAND_C_DIRECTIVES,
//					"-DMAXACTION=1000 -DSTP_NO_OVERLOAD -DMAXMAPENTRIES=10000"); 
			wc.setAttribute(LaunchConfigurationConstants.GENERATED_SCRIPT, scriptContents);
			wc.doSave();
			
			finishLaunch(name, mode);

		} catch (IOException e) {
			SystemTapUIErrorMessages mess = new SystemTapUIErrorMessages(
					"LaunchShortcutScriptGen",  //$NON-NLS-1$
					Messages.getString("LaunchStapGraph.0"),   //$NON-NLS-1$
					Messages.getString("LaunchStapGraph.6"));  //$NON-NLS-1$
			mess.schedule();
			e.printStackTrace();
		} catch (CoreException e1) {
			e1.printStackTrace();
		} finally {
			resourceToSearchFor = ""; //$NON-NLS-1$
			searchForResource = false;
		}
		
		
	}

