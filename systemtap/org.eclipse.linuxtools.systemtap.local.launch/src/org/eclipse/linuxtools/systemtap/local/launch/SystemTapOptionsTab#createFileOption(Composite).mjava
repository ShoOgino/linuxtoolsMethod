	protected void createFileOption(Composite top) {
		Composite browseTop = new Composite(top, SWT.NONE);		
		browseTop.setLayout(new GridLayout(4, false));
		browseTop.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));

		Label suppFileLabel = new Label(browseTop, SWT.NONE);
		suppFileLabel.setText(Messages.getString("SystemTapOptionsTab.ScriptSelector")); //$NON-NLS-1$
		
		scriptFile = new Text(browseTop, SWT.BORDER);
		scriptFile.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
		scriptFile.addModifyListener(modifyListener);

		workspaceBrowseButton = createPushButton(browseTop, Messages.getString("SystemTapOptionsTab.WorkspaceButton"), null);  //$NON-NLS-1$
		workspaceBrowseButton.addSelectionListener(new SelectionAdapter() {
			public void widgetSelected(SelectionEvent e) {
				ElementTreeSelectionDialog dialog = new ElementTreeSelectionDialog(getShell(), new WorkbenchLabelProvider(), new WorkbenchContentProvider());
				dialog.setTitle(Messages.getString("SystemTapOptionsTab.ResourceButton"));  //$NON-NLS-1$
				dialog.setMessage(Messages.getString("SystemTapOptionsTab.SuppresionsFile"));  //$NON-NLS-1$
				dialog.setInput(ResourcesPlugin.getWorkspace().getRoot()); 
				dialog.setComparator(new ResourceComparator(ResourceComparator.NAME));
				if (dialog.open() == IDialogConstants.OK_ID) {
					IResource resource = (IResource) dialog.getFirstResult();
					String arg = resource.getFullPath().toString();
					scriptFile.setText(workspacePath + arg);
				}
			}
		});
		
		fileBrowseButton = createPushButton(browseTop, Messages.getString("SystemTapOptionsTab.FileSystem"), null); //$NON-NLS-1$
		fileBrowseButton.addSelectionListener(new SelectionAdapter() {
			public void widgetSelected(SelectionEvent e) {
				String filePath = scriptFile.getText();
				FileDialog dialog = new FileDialog(getShell(), SWT.SAVE);
				filePath = dialog.open();
				if (filePath != null) {
					scriptFile.setText(filePath);
				}
			}
		});
		
		
		Label binaryFileLabel = new Label(browseTop, SWT.NONE);
		binaryFileLabel.setText(Messages.getString("SystemTapOptionsTab.SelectBinary")); //$NON-NLS-1$
		
		binaryFile = new Text(browseTop, SWT.BORDER);
		binaryFile.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
		binaryFile.addModifyListener(modifyListener);
		
		
		Button workspaceBrowseButton2 = createPushButton(browseTop, Messages.getString("SystemTapOptionsTab.WorkspaceButton2"), null);  //$NON-NLS-1$
		workspaceBrowseButton2.addSelectionListener(new SelectionAdapter() {
			public void widgetSelected(SelectionEvent e) {
				ElementTreeSelectionDialog dialog = new ElementTreeSelectionDialog(getShell(), new WorkbenchLabelProvider(), new WorkbenchContentProvider());
				dialog.setTitle(Messages.getString("SystemTapOptionsTab.SelectResource"));  //$NON-NLS-1$
				dialog.setMessage(Messages.getString("SystemTapOptionsTab.SelectSuppressions"));  //$NON-NLS-1$
				dialog.setInput(ResourcesPlugin.getWorkspace().getRoot()); 
				dialog.setComparator(new ResourceComparator(ResourceComparator.NAME));
				if (dialog.open() == IDialogConstants.OK_ID) {
					IResource resource = (IResource) dialog.getFirstResult();
					String arg = resource.getFullPath().toString();
					binaryFile.setText(workspacePath + arg);
				}
			}
		});
		
		
		Button fileBrowseButton2 = createPushButton(browseTop, Messages.getString("SystemTapOptionsTab.BrowseFiles"), null); //$NON-NLS-1$
		fileBrowseButton2.addSelectionListener(new SelectionAdapter() {
			public void widgetSelected(SelectionEvent e) {
				String filePath = binaryFile.getText();
				FileDialog dialog = new FileDialog(getShell(), SWT.SAVE);
				filePath = dialog.open();
				if (filePath != null) {
					File file = new File(filePath);
					if (file.exists()) binaryFile.setText(filePath);
				}
			}
		});
		
		
		Label outputFileLabel = new Label(browseTop, SWT.NONE);
		outputFileLabel.setText(Messages.getString("SystemTapOptionsTab.SelectOutput")); //$NON-NLS-1$
		
		outputFile = new Text(browseTop, SWT.BORDER);
		outputFile.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
		outputFile.addModifyListener(modifyListenerOutput);
		outputFile.addFocusListener(focusListener);
		
		Button workspaceBrowseButton3 = createPushButton(browseTop, Messages.getString("SystemTapOptionsTab.WorkspaceButton2"), null);  //$NON-NLS-1$
		workspaceBrowseButton3.addSelectionListener(new SelectionAdapter() {
			public void widgetSelected(SelectionEvent e) {
				ElementTreeSelectionDialog dialog = new ElementTreeSelectionDialog(getShell(), new WorkbenchLabelProvider(), new WorkbenchContentProvider());
				dialog.setTitle(Messages.getString("SystemTapOptionsTab.SelectResource"));  //$NON-NLS-1$
				dialog.setMessage(Messages.getString("SystemTapOptionsTab.SelectSuppressions"));  //$NON-NLS-1$
				dialog.setInput(ResourcesPlugin.getWorkspace().getRoot()); 
				dialog.setComparator(new ResourceComparator(ResourceComparator.NAME));
				if (dialog.open() == IDialogConstants.OK_ID) {
					IResource resource = (IResource) dialog.getFirstResult();
					String arg = resource.getFullPath().toString();
					outputFile.setText(workspacePath + arg);
					checkOverwrite();
					updateLaunchConfigurationDialog();	

				}
			}
		});
		
		Button fileBrowseButton3 = createPushButton(browseTop, Messages.getString("SystemTapOptionsTab.BrowseFiles"), null); //$NON-NLS-1$
		fileBrowseButton3.addSelectionListener(new SelectionAdapter() {
			public void widgetSelected(SelectionEvent e) {
				String filePath = outputFile.getText();
				FileDialog dialog = new FileDialog(getShell(), SWT.SAVE);
				filePath = dialog.open();
				if (filePath != null) {
					outputFile.setText(filePath);
					checkOverwrite();
					updateLaunchConfigurationDialog();
				}
			}
		});
		
		useColourButton = new Button(browseTop, SWT.CHECK);
		useColourButton.setText(Messages.getString("SystemTapOptionsTab.ColourCodes"));  //$NON-NLS-1$
		useColourButton.addSelectionListener(selectListener);
		useColourButton.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
		
//		generateScriptButton = new Button(browseTop, SWT.PUSH);
//		generateScriptButton.setText("Command");
//		generateScriptButton.addSelectionListener(new SelectionListener() {
//
//			@Override
//			public void widgetDefaultSelected(SelectionEvent e) {
//			}
//
//			@Override
//			public void widgetSelected(SelectionEvent e) {
//				SystemTapCommandGenerator gen = new SystemTapCommandGenerator();
//				gen.generateCommand(scrPath, binPath, cmds, needBinary, needsArgs, arg, useColour)
//				
//			}
//			
//		});
//		
	}

