	/**
	 * Creates a dialog that prompts the user to select from the given list
	 * of ICElements
	 * 
	 * @param list: list of ICElements
	 * @return
	 */
	protected Object[] chooseUnit(List<ICContainer> list, int numberOfValidFiles) {		
		ListTreeContentProvider prov = new ListTreeContentProvider();
		
	    RuledTreeSelectionDialog dialog = new RuledTreeSelectionDialog(getActiveWorkbenchShell(), 
	    		new WorkbenchLabelProvider(), prov);

	    dialog.setTitle(Messages.getString("SystemTapLaunchShortcut.8")); //$NON-NLS-1$
	    dialog.setMessage(Messages.getString("SystemTapLaunchShortcut.9")); //$NON-NLS-1$
	    dialog.setInput(list);
	    dialog.setHelpAvailable(false);
	    dialog.setStatusLineAboveButtons(false);
	    dialog.setEmptyListMessage(Messages.getString("SystemTapLaunchShortcut.10")); //$NON-NLS-1$
	    dialog.setContainerMode(true);

	    Object[] topLevel = prov.findElements(list);
	    dialog.setInitialSelections(topLevel);	    
	    dialog.setSize(cap(topLevel.length*10, 30, 55), 
	    		cap((int) (topLevel.length*1.5), 3, 13));

	    dialog.create();
	    OKButton = dialog.getOkButton();
	    
	    Object[] result = null;
	    
	    
	    if (testMode) {
	    	OKButton.setSelection(true);
	    	result = list.toArray();
			ArrayList<Object> output = new ArrayList<Object>();
			try {
				for (Object obj : result) {
					if (obj instanceof ICContainer){
						ICElement[] array = ((ICContainer) obj).getChildren();
						for (ICElement c : array) {
							if (!(c.getElementName().endsWith(".c") || //$NON-NLS-1$
									c.getElementName().endsWith(".cpp"))) //$NON-NLS-1$
								continue;
							if (c.getElementName().contains("main") && !output.contains(c))
								output.add(c);
						}
					}
				}
			
				if ( output.size() >= numberOfValidFiles) {
					output.clear();
					output.add(USER_SELECTED_ALL);
				}
			} catch (CModelException e) {
				e.printStackTrace();
			}
			
			result = output.toArray();
	    }
	    else {
	    	if (dialog.open() == Window.CANCEL)
	    		return null;
	    	result = dialog.getResult();
	    }

		if (result == null)
			return null;
		
		ArrayList<Object> output = new ArrayList<Object>();
		try {
			for (Object obj : result) {
				if (obj instanceof ICContainer){
					ICElement[] array = ((ICContainer) obj).getChildren();
					for (ICElement c : array) {
						if (!(c.getElementName().endsWith(".c") || //$NON-NLS-1$
								c.getElementName().endsWith(".cpp"))) //$NON-NLS-1$
							continue;
						if (!output.contains(c))
							output.add(c);
					}
				}
				else if (obj instanceof ICElement) {
					if (((ICElement) obj).getElementName().endsWith(".c")  //$NON-NLS-1$
							|| ((ICElement) obj).getElementName().endsWith(".cpp")) { //$NON-NLS-1$
						if (!output.contains(obj)) {
							output.add(obj);
						}
					}
				}
			}
		
			if ( output.size() >= numberOfValidFiles) {
				output.clear();
				output.add(USER_SELECTED_ALL);
			}
		} catch (CModelException e) {
			e.printStackTrace();
		}
		
		return output.toArray();
	}

