	/*
	 * @see org.eclipse.ui.texteditor.AbstractDocumentProvider#doSaveDocument(org.eclipse.core.runtime.IProgressMonitor, java.lang.Object, org.eclipse.jface.text.IDocument, boolean)
	 */
	protected void doSaveDocument(IProgressMonitor monitor, Object element, IDocument document, boolean overwrite) throws CoreException {
		String elementClassName = element.getClass().getName();
		File file = null;
		if (element instanceof IPathEditorInput) {
			IPathEditorInput pei= (IPathEditorInput) element;
			IPath path= pei.getPath();
			file= path.toFile();
		}
		   else if ( elementClassName.equals( "org.eclipse.ui.internal.editors.text.JavaFileEditorInput" )
		            || elementClassName.equals( "org.eclipse.ui.ide.FileStoreEditorInput" ) )
		        // The class 'org.eclipse.ui.internal.editors.text.JavaFileEditorInput'
		        // is used when opening a file from the menu File > Open... in Eclipse 3.2.x
		        // The class 'org.eclipse.ui.ide.FileStoreEditorInput' is used when
		        // opening a file from the menu File > Open... in Eclipse 3.3.x
		        {
		            file = new File( ( ( IEditorInput ) element ).getToolTipText() );
		        }
		if (file!=null){
			try {
				file.createNewFile();

				if (file.exists()) {
					if (file.canWrite()) {
						Writer writer= new FileWriter(file);
						writeDocumentContent(document, writer, monitor);
					} else
						throw new CoreException(new Status(IStatus.ERROR, "org.eclipse.linuxtools.systemtapgui.editor", IStatus.OK, "file is read-only", null)); //$NON-NLS-1$ //$NON-NLS-2$
				} else
					throw new CoreException(new Status(IStatus.ERROR, "org.eclipse.linuxtools.systemtapgui.editor", IStatus.OK, "error creating file", null)); //$NON-NLS-1$ //$NON-NLS-2$
			} catch (IOException e) {
				throw new CoreException(new Status(IStatus.ERROR, "org.eclipse.linuxtools.systemtapgui.editor", IStatus.OK, "error when saving file", e)); //$NON-NLS-1$ //$NON-NLS-2$
			}
		}
	}

