	/**
	 * Updates the list of recently opened files.
	 * @param file the file that was just opened
	 */
	public static boolean updateRecentFiles(File file) {
		String[] temps = new String[RecentFileMenuManager.MAX_RECENT_FILES];
		String[] files = new String[RecentFileMenuManager.MAX_RECENT_FILES];
		String[] paths = new String[RecentFileMenuManager.MAX_RECENT_FILES];

		for(int i=0; i<RecentFileMenuManager.MAX_RECENT_FILES; i++) {
			files[i] = getString("file" + i);
			paths[i] = getString("path" + i);
		}

		if(!file.getAbsolutePath().equals(paths[0])) {
			temps[0] = files[0];
			temps[1] = paths[0];
			files[0] = file.getName();
			paths[0] = file.getAbsolutePath();
			
			if(file.getAbsolutePath().equals(paths[1])) {
				files[1] = temps[0];
				paths[1] = temps[1];
			} else {
				temps[2] = files[1];
				temps[3] = paths[1];
				files[1] = temps[0];
				paths[1] = temps[1];

				if(file.getAbsolutePath().equals(paths[2])) {
					files[2] = temps[2];
					paths[2] = temps[3];
				} else {
					temps[0] = files[2];
					temps[1] = paths[2];
					files[2] = temps[2];
					paths[2] = temps[3];

					if(file.getAbsolutePath().equals(paths[3])) {
						files[3] = temps[0];
						paths[3] = temps[1];
					} else {
						files[3] = temps[0];
						paths[3] = temps[1];
					}
				}
			}	
		}
		
		for(int i=0; i<RecentFileMenuManager.MAX_RECENT_FILES; i++) {
			if(null != files[i] && null != paths[i]) {
				setString("file" + i, files[i]);
				setString("path" + i, paths[i]);
				RecentFileMenuManager.update();
			}
		}
		return true;
	}

