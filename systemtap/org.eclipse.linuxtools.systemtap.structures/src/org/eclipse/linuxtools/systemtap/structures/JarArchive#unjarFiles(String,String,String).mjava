	/**
	 * Un-jars a specified file to a specified directory using a specificed path filter.
	 *
	 * @param jarFileName The file to extract.
	 * @param destination Where to extract the files to.
	 * @param pathFilter The path filter to apply.
	 */
	public static void unjarFiles(String jarFileName, String destination, String pathFilter) {
		try (JarFile jf = new JarFile(jarFileName)){
			for (Enumeration<?> entries = jf.entries(); entries.hasMoreElements();) {
				JarEntry jarEntry = (JarEntry)entries.nextElement();
				String jarEntryName = jarEntry.getName();

				if(null == pathFilter || jarEntryName.contains(pathFilter)) {
				int lastDirSep;
					if ( (lastDirSep = jarEntryName.lastIndexOf('/')) > 0 ) {
						String dirName = jarEntryName.substring(0, lastDirSep);
						(new File(destination + dirName)).mkdirs();
					}

					if (!jarEntryName.endsWith("/")) { //$NON-NLS-1$
						try (OutputStream out = new FileOutputStream(
								destination + jarEntryName);
								InputStream in = jf.getInputStream(jarEntry)) {

							transferData(in, out);
						}

					}
				}
			}
		} catch (IOException e) {}
	}

