	/**
	 * Checks for conflicts in data selection. (An example of a conflict
	 * is two Y-series fields set to the same output value.)
	 * @return True if there is no conflict, false otherwise.
	 */
	private boolean isSeriesUnique() {
		if("".equals(txtTitle.getText().trim())) //$NON-NLS-1$
			return false;
		if(null != txtKey && txtKey.isEnabled() && txtKey.getText().length() <= 0)
			return false;

		for(int j,i=0; i<cboYItems.length; i++) {
			if(cboYItems[i].isVisible()) {
				for(j=i+1; j<cboYItems.length; j++) {
					if(cboYItems[j].isVisible()) {
						if(0 > cboYItems[i].getSelectionIndex())
							return false;
						else if(0 > cboYItems[j].getSelectionIndex())
							return false;
						else if(cboYItems[i].getItem(cboYItems[i].getSelectionIndex()).equals(cboYItems[j].getItem(cboYItems[j].getSelectionIndex()))) {
							return false;
						}
					}
				}
				if(0 > cboYItems[i].getSelectionIndex())
					return false;
				else if(0 > cboXItem.getSelectionIndex())
					return false;
				else if(cboYItems[i].getItem(cboYItems[i].getSelectionIndex()).equals(cboXItem.getItem(cboXItem.getSelectionIndex()))) {
					return false;
				}
			}
		}
		return true;
	}

