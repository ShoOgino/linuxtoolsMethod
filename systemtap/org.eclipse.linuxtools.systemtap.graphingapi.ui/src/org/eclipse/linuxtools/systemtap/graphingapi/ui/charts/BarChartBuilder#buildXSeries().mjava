	@Override
	protected void buildXSeries() {
		Object data[][] = adapter.getData();
		if (data == null || data.length == 0) {
			return;
		}

		int start = 0, len = Math.min(this.maxItems, data.length), leny = data[0].length-1;
		if (this.maxItems < data.length) {
			start = data.length - this.maxItems;
		}

		String[] allValx = new String[len];
		Double[][] allValy = new Double[leny][len];
		double maxY = 0, minY = 0; // Want to show x-axis if possible, so default max/min is 0.

		// Read in from the data array all x/y points to plot.
		// If a y-axis value is empty (null), set it to 0.
		// If an x-axis category is empty, ignore the entire category.
		for (int i = 0; i < len; i++) {
			Object label = data[start + i][0];
			if (label != null) {
				allValx[i] = label.toString();
				for (int j = 1; j < leny + 1; j++) {
					Double val = getDoubleOrNullValue(data[start + i][j]);
					if (val == null) {
						val = 0.0;
					}
					allValy[j-1][i] = val;
					maxY = Math.max(val, maxY);
					minY = Math.min(val, minY);
				}
			}
		}

		// Now create dense arrays of x/y values that exclude null values,
		// and plot those values to the chart.

		String valx[] = new String[len];
		int lenTrim = 0;
		for (int i = 0; i < len; i++) {
			if (allValx[i] != null) {
				valx[lenTrim] = allValx[i];
				lenTrim++;
			}
		}
		String[] valxTrim = new String[lenTrim];
		for (int i = 0; i < lenTrim; i++) {
			valxTrim[i] = valx[i];
		}

		ISeries allSeries[] = chart.getSeriesSet().getSeries();
		for (int i = 0; i < leny; i++) {
			ISeries series;
			if (i >= allSeries.length) {
				series = createChartISeries(i);
			} else {
				series = chart.getSeriesSet().getSeries()[i];
			}

			double[] valy = new double[len];
			int lenyTrim = 0;
			for (int j = 0; j < len; j++) {
				if (allValy[i][j] != null) {
					valy[lenyTrim] = allValy[i][j].doubleValue();
					lenyTrim++;
				}
			}
			double[] valyTrim = new double[lenyTrim];
			for (int j = 0; j < lenyTrim; j++) {
				valyTrim[j] = valy[j];
			}

			series.setYSeries(valyTrim);
		}

		((BarChart) chart).suspendUpdate = true;
		((BarChart) chart).setCategorySeries(getUniqueNames(valxTrim));
		applyCategoryRange(valxTrim.length);
		applyRangeY(minY, maxY);
		((BarChart) chart).suspendUpdate = false;
		chart.updateLayout();
		chart.redraw();
	}

