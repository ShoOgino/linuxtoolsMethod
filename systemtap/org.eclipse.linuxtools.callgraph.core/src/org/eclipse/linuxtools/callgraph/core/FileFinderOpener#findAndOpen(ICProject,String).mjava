	/**
	 * Seeks all functions in the given proejct that contains the given function name.
	 * Farms off the work of generating the list to the findFunctionsInProject function. 
	 * Opens a selection dialog if more than one file is found.
	 * 
	 * @param project
	 * @param functionName
	 * @return
	 */
	public static void findAndOpen(ICProject project, String functionName) {
		//Safety valve: Do not enforce use of project names
		if (project == null)
			return;
		
		map = ProfileUIUtils.findFunctionsInProject(project, functionName, -1, null);
		ArrayList<String> files = new ArrayList<String>(map.keySet());
		
		if (files == null || files.size() < 1)
			return;

		if (files.size() == 1) {
			open(files.get(0), map.get(files.get(0))[0], map.get(files.get(0))[1]);
		} else {
			ElementListSelectionDialog d = new ElementListSelectionDialog(new Shell(), new LabelProvider());
			d.setTitle(Messages.getString("FileFinderOpener.MultipleFilesDialog"));  //$NON-NLS-1$
			d.setMessage(Messages.getString("FileFinderOpener.MultFilesDialogM1") + functionName + Messages.getString("FileFinderOpener.MultFilesDialogM2") +   //$NON-NLS-1$ //$NON-NLS-2$
					Messages.getString("FileFinderOpener.MultFilesDialogM3"));  //$NON-NLS-1$
			d.setElements(files.toArray());
			d.open();
			
			if (d.getResult() == null) {
				return;
			}
			
			for (Object o : d.getResult()) {
				if (o instanceof String) {
					String s = (String) o;
					open(s, map.get(s)[0], map.get(s)[1]);
				}
			}
		}	
	}

