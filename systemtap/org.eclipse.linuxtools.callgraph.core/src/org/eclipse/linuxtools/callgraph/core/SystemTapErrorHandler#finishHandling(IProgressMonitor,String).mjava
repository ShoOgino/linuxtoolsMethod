	/**
	 * Run this method when there are no more error messages to handle. Creates
	 * the error pop-up message and writes to log. Returns true if a relaunch should
	 * be attempted. Currently relaunch only works for the callgraph script.
	 * 
	 */
	public boolean finishHandling(IProgressMonitor m, String scriptPath) {
		if (!isErrorRecognized()) {
			errorMessage.append(Messages.getString("SystemTapErrorHandler.4") + //$NON-NLS-1$
					Messages.getString("SystemTapErrorHandler.5")); //$NON-NLS-1$
		}

		writeToLog();

		if (mismatchedProbePoints) {
			if (functions.size() > PluginConstants.MAX_ERRORS) {
				errorMessage.setLength(0);
				errorMessage
						.append(PluginConstants.NEW_LINE
								+ Messages
										.getString("SystemTapErrorHandler.TooManyErrors1") + functions.size() + Messages.getString("SystemTapErrorHandler.TooManyErrors2") + //$NON-NLS-1$ //$NON-NLS-2$
								Messages
										.getString("SystemTapErrorHandler.TooManyErrors3") + //$NON-NLS-1$
								Messages
										.getString("SystemTapErrorHandler.TooManyErrors4")); //$NON-NLS-1$
				SystemTapUIErrorMessages mes = new SystemTapUIErrorMessages(
						Messages
								.getString("SystemTapErrorHandler.ErrorMessageName"), //$NON-NLS-1$
						Messages
								.getString("SystemTapErrorHandler.ErrorMessageTitle"), //$NON-NLS-1$
						errorMessage.toString());
				mes.schedule();
				m.setCanceled(true);
				return false;
			}

			return cleanScript(m, new File(scriptPath));
			

		}
		return false;

	}

