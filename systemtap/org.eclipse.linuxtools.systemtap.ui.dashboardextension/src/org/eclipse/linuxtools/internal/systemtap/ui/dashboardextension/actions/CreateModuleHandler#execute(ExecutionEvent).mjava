	/**
	 * This method will bring up the export script dialog window for the user to
	 * select what they want to new module to contain. If the user enters module
	 * information and clicks ok the module will be built and added to the
	 * dashboard.
	 */
	@Override
	public Object execute(ExecutionEvent event) {
		ScriptDetails sd = new ScriptDetails(PlatformUI.getWorkbench().getActiveWorkbenchWindow().getShell());
		sd.create();
		if (sd.open() == Window.OK) {

			script = DashboardPlugin.getDefault().getPreferenceStore()
					.getString(DashboardPreferenceConstants.P_DASHBOARD_SCRIPT);
			DataSetWizard wizard = new DataSetWizard(
					GraphingConstants.DataSetMetaData, script);
			IWorkbench workbench = PlatformUI.getWorkbench();
			wizard.init(workbench, null);
			WizardDialog dialog = new WizardDialog(workbench
					.getActiveWorkbenchWindow().getShell(), wizard);
			dialog.create();
			dialog.open();

			IDataSetParser parser = wizard.getParser();
			IDataSet dataSet = wizard.getDataSet();

			wizard.dispose();

			if (null == parser || null == dataSet)
				return null;

			ExportScriptDialog exportDialog = new ExportScriptDialog(PlatformUI.getWorkbench().getActiveWorkbenchWindow().getShell(), dataSet);
			exportDialog.create();

			if(exportDialog.open() == Window.OK) {
				String category = exportDialog.getCategory();
				String display = exportDialog.getDisplay();
				String description = exportDialog.getDescription();
				GraphData[] gd = exportDialog.getGraphs();
				TreeNode filters = exportDialog.getGraphFilters();

				validateDirectory();
				File meta = saveMetaData(
						display,
						category,
						description,
						dataSet,
						parser,
						gd,
						filters,
						DashboardPlugin
								.getDefault()
								.getPreferenceStore()
								.getString(
										DashboardPreferenceConstants.P_DASHBOARD_EXAMPLES_DIR));
				String archiveName = getSaveDirectory() + "/" //$NON-NLS-1$
						+ category.replace(' ', '_') + "." //$NON-NLS-1$
						+ display.replace(' ', '_');
				buildArchive(archiveName, meta);
				cleanupFiles(new String[] { archiveName, meta.getAbsolutePath() });
				updateDashboard();
			}
		}
		return null;
	}

