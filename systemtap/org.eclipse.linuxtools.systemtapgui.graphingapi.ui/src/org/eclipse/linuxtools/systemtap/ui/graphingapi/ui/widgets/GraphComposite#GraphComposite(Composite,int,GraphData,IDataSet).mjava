	/**
	 * The default constructor: creates an internal composite for the Graph to render on, asks GraphFactory
	 * to create the graph from the given GraphData and DataSet, then initializes all buttons and listeners.
	 */
	public GraphComposite(Composite parent, int style, GraphData gd, IDataSet ds) {
		super(parent, style);
		FormLayout layout = new FormLayout();
		layout.marginWidth = 5;
		layout.marginHeight = 5;
		this.setLayout(layout);
		checkOptions = new ArrayList<Button>();

		label = new Label(this, SWT.HORIZONTAL | SWT.CENTER);
		scale = scales[7];
		label.setText(scale + Localization.getString("GraphComposite.ScaleValue"));
		FormData data = new FormData();
		data.top = new FormAttachment(0,0);
		data.right = new FormAttachment(100, 0);
		data.width = 40;
		label.setLayoutData(data);

		zoomScale = new Scale(this,SWT.VERTICAL | SWT.BORDER);
		zoomScale.setMinimum(0);
		zoomScale.setMaximum(14);
		zoomScale.setIncrement(1);
		zoomScale.setPageIncrement(1);
		zoomScale.setSelection(7);
		data = new FormData();
		data.top = new FormAttachment(label, 10);
		data.bottom = new FormAttachment(100, 5);
		data.right = new FormAttachment(100,-10);
		zoomScale.setLayoutData(data);

		graph = GraphFactory.createGraph(this, gd, ds);
		data = new FormData();
		data.top = new FormAttachment(0,0);
		data.bottom = new FormAttachment(100,0);
		data.right = new FormAttachment(label,-10);
		data.left = new FormAttachment(0,0);
		graph.setLayoutData(data);

		graph.setBackground(this.getDisplay().getSystemColor(SWT.COLOR_LIST_BACKGROUND));
		graph.setForeground(this.getDisplay().getSystemColor(SWT.COLOR_WIDGET_FOREGROUND));
		this.setBackground(getDisplay().getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));
		zoomScale.addSelectionListener(scaleListener);
	}

