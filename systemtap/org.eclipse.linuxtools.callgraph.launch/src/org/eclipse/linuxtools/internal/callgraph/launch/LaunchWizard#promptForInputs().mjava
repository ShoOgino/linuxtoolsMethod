    private void promptForInputs() {
        InputDialog id = new InputDialog(new Shell(), Messages.getString("LaunchWizard.WelcomeWizard"),   //$NON-NLS-1$
                Messages.getString("LaunchWizard.Text1") +  //$NON-NLS-1$
                Messages.getString("LaunchWizard.Text2") +  //$NON-NLS-1$
                Messages.getString("LaunchWizard.Text3"),   //$NON-NLS-1$
                getLaunchManager().generateLaunchConfigurationName(
                        Messages.getString("LaunchWizard.NamePrefix")), null);  //$NON-NLS-1$
        id.open();

        if (id.getReturnCode() == Window.CANCEL){
            return;
        }

        name = id.getValue();

        IWorkspace workspace = ResourcesPlugin.getWorkspace();
        IWorkspaceRoot root = workspace.getRoot();
        IPath location = root.getLocation();
        workspacePath = location.toString();

        sh = new Shell();
        sh.setSize(WIDTH,HEIGHT);
        sh.setLayout(new GridLayout(1, false));
        sh.setText(name);


        Image img = new Image(sh.getDisplay(), PluginConstants.getPluginLocation() + "systemtapbanner.png"); //$NON-NLS-1$
        Composite imageCmp = new Composite(sh, SWT.BORDER);
        imageCmp.setLayout(new FillLayout());
        GridData imageData = new GridData(650, 157);
        imageData.horizontalAlignment = SWT.CENTER;
        imageCmp.setLayoutData(imageData);
        imageCmp.setBackgroundImage(img);

        Composite fileComp = new Composite(sh, SWT.NONE);
        fileComp.setLayout(new GridLayout(2, false));
        fileComp.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));


        GridDataFactory labelData = GridDataFactory.fillDefaults().grab(true, false)
                                    .span(2,1);

        Label scriptLabel = new Label(fileComp, SWT.HORIZONTAL);
        scriptLabel.setText(Messages.getString("LaunchWizard.Script")); //$NON-NLS-1$
        labelData.applyTo(scriptLabel);

        GridDataFactory textData = GridDataFactory.fillDefaults().grab( true, false )
                                  .hint(WIDTH, SWT.DEFAULT);

        scriptLocation = new Text(fileComp, SWT.SINGLE | SWT.BORDER);
        textData.applyTo(scriptLocation);
        Button scriptButton = new Button(fileComp, SWT.PUSH);
        scriptButton.setText(Messages.getString("SystemTapOptionsTab.BrowseFiles")); //$NON-NLS-1$
        scriptButton.setLayoutData(new GridData());
        scriptButton.addSelectionListener(new SelectionAdapter() {
            @Override
            public void widgetSelected(SelectionEvent e) {
                String filePath = scriptLocation.getText();
                FileDialog dialog = new FileDialog(sh, SWT.SAVE);
                filePath = dialog.open();
                if (filePath != null) {
                    scriptLocation.setText(filePath);
                }
            }
        });


        GridData gd2 = new GridData();
        gd2.horizontalSpan = 3;
        Label binaryLabel= new Label(fileComp, SWT.HORIZONTAL);
        binaryLabel.setText(Messages.getString("LaunchWizard.BinFile")); //$NON-NLS-1$
        labelData.applyTo(binaryLabel);

        binaryLocation = new Text(fileComp, SWT.SINGLE | SWT.BORDER);
        textData.applyTo(binaryLocation);
        Button binaryButton = new Button(fileComp, SWT.PUSH);
        binaryButton.setText(Messages.getString("SystemTapOptionsTab.WorkspaceButton2")); //$NON-NLS-1$
        binaryButton.addSelectionListener(new SelectionAdapter() {
            @Override
            public void widgetSelected(SelectionEvent e) {
                ElementTreeSelectionDialog dialog = new ElementTreeSelectionDialog(sh, new WorkbenchLabelProvider(), new WorkbenchContentProvider());
                dialog.setTitle(Messages.getString("SystemTapOptionsTab.SelectResource"));  //$NON-NLS-1$
                dialog.setMessage(Messages.getString("SystemTapOptionsTab.SelectSuppressions"));  //$NON-NLS-1$
                dialog.setInput(ResourcesPlugin.getWorkspace().getRoot());
                dialog.setComparator(new ResourceComparator(ResourceComparator.NAME));
                if (dialog.open() == IDialogConstants.OK_ID) {
                    IResource resource = (IResource) dialog.getFirstResult();
                    String arg = resource.getFullPath().toString();
                    binaryLocation.setText(workspacePath + arg);
                }
            }
        });

        Composite argumentsComp = new Composite(sh, SWT.BORDER_DASH);
        argumentsComp.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
        argumentsComp.setLayout(new GridLayout(2, false));

        Label argumentsLabel= new Label(argumentsComp, SWT.HORIZONTAL);
        argumentsLabel.setText(Messages.getString("LaunchWizard.Args")); //$NON-NLS-1$
        labelData.applyTo(argumentsLabel);

        argumentsLocation = new Text(argumentsComp, SWT.MULTI | SWT.WRAP | SWT.BORDER);
        GridData gd3 = new GridData(GridData.FILL_HORIZONTAL);
        gd3.heightHint=200;
        argumentsLocation.setLayoutData(gd3);
        Button argumentsButton = new Button(argumentsComp, SWT.PUSH);
        argumentsButton.setText(Messages.getString("LaunchWizard.Func")); //$NON-NLS-1$
        argumentsButton.addSelectionListener(new SelectionAdapter() {
            @Override
            public void widgetSelected(SelectionEvent e) {
                argumentsLocation.setText(
                        argumentsLocation.getText() + " process(\""  //$NON-NLS-1$
                        + binaryLocation.getText() + "\").function(\"\")"); //$NON-NLS-1$
            }
        });


        //TODO: Don't use blank labels to move button to the right column :P
        Label blankLabel2 = new Label(argumentsComp, SWT.HORIZONTAL);
        blankLabel2.setText(""); //$NON-NLS-1$


        Button launch = new Button(sh, SWT.PUSH);
        launch.setLayoutData(new GridData(GridData.CENTER, GridData.BEGINNING, false, false));
        launch.setText(Messages.getString("LaunchWizard.Launch")); //$NON-NLS-1$
        launch.addSelectionListener(new SelectionAdapter() {
            @Override
            public void widgetSelected(SelectionEvent e) {
                    scriptPath = scriptLocation.getText();
                    binaryPath = binaryLocation.getText();
                    arguments = argumentsLocation.getText();
                    ILaunchConfigurationWorkingCopy wc = createConfiguration(null, name);
                    try {
                        finishLaunch(scriptPath + ": " + binName, mode, wc);//$NON-NLS-1$
                    } catch (Exception e1) {
                        e1.printStackTrace();
                    }
                    sh.dispose();
                }

        });

        //TODO: Verify that this works
        Display.getCurrent().asyncExec(() -> sh.open());
    }

