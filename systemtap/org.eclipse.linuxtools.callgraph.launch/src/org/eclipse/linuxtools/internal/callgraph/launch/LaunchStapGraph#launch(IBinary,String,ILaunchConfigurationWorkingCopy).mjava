    public void launch(IBinary bin, String mode, ILaunchConfigurationWorkingCopy wc) {
        super.initialize();
        this.bin = bin;
        name = "SystemTapGraph";  //$NON-NLS-1$
        binName = getName(bin);
        partialScriptPath = PluginConstants.getPluginLocation()
                + "parse_function_partial.stp";  //$NON-NLS-1$

        viewID = "org.eclipse.linuxtools.callgraph.callgraphview"; //$NON-NLS-1$



        projectName = bin.getCProject().getElementName();

        try {
            if (wc == null) {
                wc = createConfiguration(bin, name);
            }
            binaryPath = bin.getResource().getLocation().toString();
            arguments = binaryPath;
            outputPath = PluginConstants.getDefaultIOPath();

            if (writeFunctionListToScript(resourceToSearchFor) == null) {
                return;
            }
            if (funcs == null || funcs.length() < 0) {
                return;
            }

            needToGenerate = true;
            finishLaunch(name, mode, wc);

        } catch (IOException e) {
            SystemTapUIErrorMessages mess = new SystemTapUIErrorMessages(
                    "LaunchShortcutScriptGen",  //$NON-NLS-1$
                    Messages.getString("LaunchStapGraph.ScriptGenErr"),   //$NON-NLS-1$
                    Messages.getString("LaunchStapGraph.ScriptGenErrMsg"));  //$NON-NLS-1$
            mess.schedule();
            e.printStackTrace();
        } finally {
            resourceToSearchFor = ""; //$NON-NLS-1$
            searchForResource = false;
        }


    }

