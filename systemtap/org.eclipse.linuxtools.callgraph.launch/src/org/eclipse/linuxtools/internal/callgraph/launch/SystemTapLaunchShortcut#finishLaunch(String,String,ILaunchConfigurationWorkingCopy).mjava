	/**
	 * Helper function to complete launches. Uses protected parameters (Strings)
	 * scriptPath, binaryPath, arguments, outputPath and (boolean) overwrite.
	 * These must be set by the calling function (or else nonsensical results
	 * will occur). <br>
	 * If scriptPath has not been set, the setScriptPath() method will be
	 * called.
	 *
	 * @param name : Used to generate the name of the new configuration
	 * @param bin : Affiliated executable
	 * @param mode : Mode setting
	 * @param wc : A working copy of the launch configuration
	 * @throws IOException
	 */
	protected void finishLaunch(String name, String mode, ILaunchConfigurationWorkingCopy wc) throws IOException  {
		if (!finishLaunchHelper()) {
			return;
		}

		if (wc != null) {

			wc.setAttribute(LaunchConfigurationConstants.SCRIPT_PATH,scriptPath);

			if (!invalid(binaryPath)) {
				wc.setAttribute(LaunchConfigurationConstants.BINARY_PATH,binaryPath);
			}

			outputPath = escapeSpecialCharacters(outputPath);
			wc.setAttribute(LaunchConfigurationConstants.OUTPUT_PATH,outputPath);
			wc.setAttribute(LaunchConfigurationConstants.ARGUMENTS, arguments);
			wc.setAttribute(LaunchConfigurationConstants.GENERATED_SCRIPT,generatedScript);
			wc.setAttribute(LaunchConfigurationConstants.NEED_TO_GENERATE,needToGenerate);
			wc.setAttribute(LaunchConfigurationConstants.OVERWRITE, overwrite);
			wc.setAttribute(LaunchConfigurationConstants.USE_COLOUR,useColours);
			wc.setAttribute(LaunchConfigurationConstants.PARSER_CLASS,parserID);
			wc.setAttribute(LaunchConfigurationConstants.VIEW_CLASS, viewID);
			wc.setAttribute(LaunchConfigurationConstants.SECONDARY_VIEW_ID, setSecondaryViewID());


			/**
			 * Enable this to save the default launch configuration
			 */
			/*try {
				if (!existsConfiguration(wc)) {
					config = wc.doSave();
				}
			} catch (CoreException e) {
				e.printStackTrace();
			}*/

			if (!testMode) {
				DebugUITools.launch(wc, mode);
			}
		}

	}

