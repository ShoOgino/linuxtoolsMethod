	/**
	 * Helper function for methods common to both types of finishLaunch.
	 * 
	 * @throws Exception
	 */
	private boolean finishLaunchHelper() throws Exception {
		if (invalid(scriptPath))
			scriptPath = setScriptPath();
		if (invalid(scriptPath)) {
			//Setting the variable didn't work, do not launch.
			
			SystemTapUIErrorMessages mess = new SystemTapUIErrorMessages(
					Messages
							.getString("SystemTapLaunchShortcut.ErrorMessageName"), //$NON-NLS-1$
					Messages
							.getString("SystemTapLaunchShortcut.ErrorMessageTitle"), Messages.getString("SystemTapLaunchShortcut.ErrorMessage") + name); //$NON-NLS-1$ //$NON-NLS-2$
			mess.schedule();
			return false;
		}
		
		
		if (invalid(parserID))
			parserID = setParserID();
		if (invalid(parserID)) {
			//Setting the variable didn't work, do not launch.
			SystemTapUIErrorMessages mess = new SystemTapUIErrorMessages(
					"no_parser_specified_error_message",
					"No parser specified", "A null parserID or empty parserID was submitted. Please submit a valid parserID. Parsers should extend the bundled parser extension point.");
			mess.schedule();
			return false;
		}
			
		
		if (invalid(viewID))
			viewID = setViewID();
		if (invalid(viewID)) {
			//Setting the variable didn't work, do not launch.
			SystemTapUIErrorMessages mess = new SystemTapUIErrorMessages("no_view_specified_error_message",
					"No view specified", "A null viewID or empty viewID was submitted. Please submit a valid viewID. Views should extend org.eclipse.ui.views.");
			mess.schedule();
			return false;
		}
		
		
		if (needToGenerate) {
			if (invalid(generatedScript))
				generatedScript = generateScript();
			if (invalid(generatedScript)) {
				//Setting the variable didn't work, do not launch.
				SystemTapUIErrorMessages mess = new SystemTapUIErrorMessages("Generation Error",
						"Script not generated", "Launch specifies needToGenerate but does not " +
				"specify a corresponding generateScript() function.");
				mess.schedule();
				return false;
			}
		}
		return true;
	}

