	private void createParserOption(Composite parserTop) {
		Composite browseTop = new Composite(parserTop, SWT.NONE);		
		browseTop.setLayout(new GridLayout(1, false));
		GridData browseData = new GridData(GridData.FILL_HORIZONTAL);
		browseTop.setLayoutData(browseData);
		
		Label suppFileLabel = new Label(browseTop, SWT.NONE);
		suppFileLabel.setText("Parser"); //$NON-NLS-1$
		
		parser = new Text(browseTop, SWT.BORDER);
		parser.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
		parser.addModifyListener(modifyListener);

		parserButton = createPushButton(browseTop, 
				"Find parsers", null);  //$NON-NLS-1$
		parserButton.addSelectionListener(new SelectionAdapter() {
			public void widgetSelected(SelectionEvent e) {
				ElementListSelectionDialog dialog = new ElementListSelectionDialog(getShell(), 
						new ListLabelProvider());
				dialog.setTitle("Select parser");  //$NON-NLS-1$
				dialog.setMessage("Select parser to use.");  //$NON-NLS-1$
				IExtensionRegistry reg = Platform.getExtensionRegistry();
				IConfigurationElement[] extensions = reg
						.getConfigurationElementsFor(PluginConstants.PARSER_RESOURCE, 
								PluginConstants.PARSER_NAME);
				
				dialog.setElements(extensions);
				if (dialog.open() == IDialogConstants.OK_ID) {
					String arg = getUsefulLabel(dialog.getFirstResult());
					parser.setText(arg);
				}
			}
		});
	}

