	/**
	 * Sets the LayoutData for all of the internal Composites, scaling the size to an appropriate amount
	 * for the number of currently used slots.
	 */
	private void scale()
	{
		switch(usedSlotCount)
		{
		case 8:
		case 7:
			//turn on all internal composites, 4x2 layout
			for(int i = 0; i < 8; i++) {
				FormData data = new FormData();
				data.left = new FormAttachment(i%2 * 50, 0);
				data.right = new FormAttachment((i%2 +1)* 50, 0);
				data.top = new FormAttachment(i / 2, 4, 0);
				data.bottom = new FormAttachment(i/2+1, 4, 0);
				internal[i].setLayoutData(data);
				internal[i].setVisible(true);
				if(external[i] != null) {
					external[i].setVisible(true);
				}
			}
			break;
		case 6:
		case 5:
			//turn on 6 internal composites, 3x2 layout
			for(int i = 0; i < 6; i++) {
				FormData data = new FormData();
				data.left = new FormAttachment(i%2 * 50, 0);
				data.right = new FormAttachment((i%2+1) * 50, 0);
				data.top = new FormAttachment(i /2,3, 0);
				data.bottom = new FormAttachment(i/2+1,3, 0);
				internal[i].setLayoutData(data);
				internal[i].setVisible(true);
				if(external[i]!= null) {
					external[i].setVisible(true);
				}
			}
			for(int i = 6; i < 8; i++) {
				internal[i].setVisible(false);
				if(external[i] != null) {
					external[i].setVisible(false);	//this should never happen
				}
			}
			break;
		case 4:
		case 3:
			//turn on 4 internal composites, 2x2 layout
			for(int i = 0; i < 4; i++) {
				FormData data = new FormData();
				data.left = new FormAttachment(i%2 * 50, 0);
				data.right = new FormAttachment((i%2+1) * 50, 0);
				data.top = new FormAttachment(i / 2,2, 0);
				data.bottom = new FormAttachment(i/2+1,2, 0);
				internal[i].setLayoutData(data);
				internal[i].setVisible(true);
				if(external[i] != null) {
					external[i].setVisible(true);
				}
			}
			for(int i = 4; i < 8; i++) {
				internal[i].setVisible(false);
				if(external[i] != null) {
					external[i].setVisible(false);	//this should never happen
				}
			}
			break;
		case 2:
			//turn on 2 internal composites, 1x2 layout
			for(int i = 0; i < 2; i++) {
				FormData data = new FormData();
				data.left = new FormAttachment(0, 3);
				data.right = new FormAttachment(100, -3);
				data.top = new FormAttachment(i ,2, 3);
				data.bottom = new FormAttachment(i+1,2, -3);
				internal[i].setLayoutData(data);
				internal[i].setVisible(true);
				external[i].setVisible(true);
			}
			for(int i = 2; i < 8; i++) {
				internal[i].setVisible(false);
				if(external[i] != null) {
					external[i].setVisible(false);	//this should never happen
				}
			}
			break;
		case 1:
		case 0:
		default:
			//turn on 1 internal composite, full layout
			FormData data = new FormData();
			data.left = new FormAttachment(0, 0);
			data.right = new FormAttachment(100, 0);
			data.top = new FormAttachment(0, 0);
			data.bottom = new FormAttachment(100, 0);
			internal[maximized].setLayoutData(data);
			internal[maximized].setVisible(true);
			if(external[maximized] != null) {
				external[maximized].setVisible(true);
			}
			for (int i = usedSlotCount; i < 8; i++) {
				if (i != maximized) {
					internal[i].setVisible(false);
					if (external[i] != null) {
						external[i].setVisible(false); // this should never
														// happen
					}
				}
			}
		}
	}

