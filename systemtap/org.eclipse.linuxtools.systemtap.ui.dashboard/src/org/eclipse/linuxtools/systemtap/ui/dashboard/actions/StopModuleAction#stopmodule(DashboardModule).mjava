	private void stopmodule(DashboardModule module)
	{
		IViewPart ivp = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().findView(ActiveModuleBrowserView.ID);
		ActiveModuleBrowserView ambv = (ActiveModuleBrowserView)ivp;
		GraphTreeNode graphNode;
		DashboardGraphData graphData;

		if(ambv.isActive(module)) {
			ActiveModuleTreeNode node = ambv.remove(module);
			ActiveModuleData amd = (ActiveModuleData)node.getData();

			ivp = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().findView(DashboardView.ID);
			DashboardView dv = (DashboardView)ivp;

			for(int i=0; i<node.getChildCount(); i++) {
				graphNode = (GraphTreeNode)node.getChildAt(i);
				graphData = (DashboardGraphData)graphNode.getData();
				if(null != graphData.adapter) {
					dv.removeGraph(graphData.adapter, module.getcategory());
					graphData.adapter = null;
				}
			}

			if(!amd.paused) {
				if (amd.cmd.isRunning())
					amd.cmd.stop();
				amd.data = null;
			}
			dv.closeComposite(amd.module.category);
			amd = null;
			fireActionEvent();
		}

		setEnablement(false);
		buildEnablementChecks();
	}

