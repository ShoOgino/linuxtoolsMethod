	private void runScript(DashboardModule module)
	{
		IViewPart ivp = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().findView(ActiveModuleBrowserView.ID);
		ActiveModuleBrowserView ambv = (ActiveModuleBrowserView)ivp;
		boolean paused = ambv.isPaused(module);
		fileName = module.script.getAbsolutePath();
		String tmpfileName = fileName;
		String serverfileName = fileName.substring(fileName.lastIndexOf('/')+1);
		if(ConsoleLogPlugin.getDefault().getPluginPreferences().getBoolean(ConsoleLogPreferenceConstants.REMEMBER_SERVER)!=true &&
			new SelectServerDialog(fWindow.getShell()).open() == false)
			return;
        	
	  if (module.location.equalsIgnoreCase("local")) {
		 try{
				ScpClient scpclient = new ScpClient();
				tmpfileName=null;
				tmpfileName="/tmp/"+ serverfileName;
				 scpclient.transfer(fileName,tmpfileName);
		    }catch(Exception e){e.printStackTrace();}
	  }
		String modname = serverfileName.substring(0, serverfileName.indexOf('.'));
		if (modname.indexOf('-') != -1)
			modname = modname.substring(0, modname.indexOf('-'));
	
		//TODO: Check for prebuilt module first
		String[] cmd = new String[] {
				"stap",
				"-g",
				"-m",
				modname,
				tmpfileName};
		
			   	ScriptConsole console = ScriptConsole.getInstance(serverfileName);
            console.run(cmd, null, null, null);
		IDataSet ds;
		if(paused)
			ds = ambv.pause(module).data;
		else
			ds = DataSetFactory.createDataSet(module.dataSetID, module.labels);
		  
		console.getCommand().addInputStreamListener(new ChartStreamDaemon2(console, ds, module.parser));
		  
		 
		  
	//	createClientSession();
	//	subscription.addInputStreamListener(new ChartStreamDaemon2(console, ds, module.parser));

		//if(paused)
			//ambv.pause(module).paused = false;
		//else {
			ActiveModuleData amd = new ActiveModuleData();
			amd.module = module;
			amd.cmd = console;
			amd.data = ds;
			amd.paused = false;
			addActive(module.category + "." + module.display, amd);
		//}
	
	}

