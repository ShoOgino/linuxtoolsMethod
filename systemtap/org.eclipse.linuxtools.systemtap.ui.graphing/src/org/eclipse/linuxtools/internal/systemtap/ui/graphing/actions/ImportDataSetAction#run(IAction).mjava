	/**
	 * This is the main method of the action.  It handles prompting the user
	 * for a file that contains an exported DataSet.  Then, it will generate
	 * a new <code>DataSet</code> to hold all of the data.
	 * @param act The action that fired this method.
	 */
	@Override
	public void run(IAction act) {
		//Get the file
		FileDialog dialog= new FileDialog(fWindow.getShell(), SWT.OPEN);
		dialog.setText(Localization.getString("ImportDataSetAction.OpenDataSetFile")); //$NON-NLS-1$
		String fileName = dialog.open();

		File f = null;

		if(null == fileName || fileName.length() <= 0) {
			return;
		}

		f = new File(fileName);

		if(!f.exists() || !f.canRead()) {
			return;
		}

		//Create a new DataSet
		IDataSet dataSet = readFile(f);

		if(null == dataSet) {
			MessageDialog
					.openWarning(
							fWindow.getShell(),
							Localization
									.getString("ImportDataSetAction.Problem"), Localization.getString("ImportDataSetAction.ErrorReadingDataSet")); //$NON-NLS-1$ //$NON-NLS-2$
			return;
		}

		IViewPart ivp = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().findView(GraphSelectorEditor.ID);
		((GraphSelectorEditor)ivp).createScriptSet(fileName, dataSet);
	}

