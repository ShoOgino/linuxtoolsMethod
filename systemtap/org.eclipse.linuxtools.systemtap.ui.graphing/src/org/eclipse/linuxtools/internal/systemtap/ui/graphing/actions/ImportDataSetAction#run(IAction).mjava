	/**
	 * This is the main method of the action.  It handles prompting the user
	 * for a file that contans an exported DataSet.  Then, it will generate
	 * a new <code>DataSet</code> to hold all of the data.
	 * @param act The action that fired this method.
	 */
	public void run(IAction act) {
		LogManager.logDebug("Start ImportDataSetAction.run", this); //$NON-NLS-1$
		//Get the file
		FileDialog dialog= new FileDialog(fWindow.getShell(), SWT.OPEN);
		dialog.setText(Localization.getString("ImportDataSetAction.OpenDataSetFile"));
		String fileName = dialog.open();
		
		File f = null;
		
		if(null == fileName || fileName.length() <= 0)
			return;
		
		f = new File(fileName);

		if(!f.exists() || !f.canRead())
			return;
		
		//Create a new DataSet
		IDataSet dataSet = readFile(f);
		
		if(null == dataSet) {
			displayError(Localization.getString("ImportDataSetAction.ErrorReadingDataSet"));
			return;
		}
		
		//Create a new script set
		try {
			IWorkbenchPage p = PlatformUI.getWorkbench().showPerspective(GraphingPerspective.ID, PlatformUI.getWorkbench().getActiveWorkbenchWindow());
			IViewPart ivp = p.findView(GraphSelectorView.ID);
			((GraphSelectorView)ivp).createScriptSet(fileName, dataSet);
		} catch(WorkbenchException we) {
			LogManager.logCritical("WorkbenchException ImportDataSetAction.run:" + we.getMessage(), this); //$NON-NLS-1$
		}
		LogManager.logDebug("End ImportDataSetAction.run", this); //$NON-NLS-1$
	}

