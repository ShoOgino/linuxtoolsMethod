	private void drawLegend(GC gc) {
		int x = getXOffset() + gc.getFontMetrics().getAverageCharWidth() * getTitle().length() + LEGEND_SEPARATION + LEGEND_WIDTH_AND_HALF;
		
		Color color = colorScheme.defaultColor;
		Iterator<Color> it = colorScheme.getIterator();
		
		for (CircularPointBuffer b : data) {
			if (! (b instanceof GraphPointBuffer)) {
				continue;
			}
			if (it.hasNext())
				color = it.next(); 
			GraphPointBuffer buf = (GraphPointBuffer) b;
			
			switch(buf.getStyle()) {
			case GRAPH_STYLE_LINE :
				gc.setLineWidth(2);
				gc.setForeground(color);
				gc.drawLine(x, getYOffset() + LEGEND_WIDTH_AND_HALF, x + LEGEND_WIDTH, getYOffset() + LEGEND_WIDTH_AND_HALF);
				break;
			case GRAPH_STYLE_FILL :	
				gc.setBackground(color);
				gc.fillRectangle(x, getYOffset() + LEGEND_WIDTH, LEGEND_WIDTH, LEGEND_WIDTH);
				break;
			default :
				break;
			}
			
			gc.setForeground(colorScheme.getFontColor());
			gc.drawText(buf.getName(), x + LEGEND_WIDTH_AND_HALF, getYOffset() + LEGEND_WIDTH/2, true);
			
			x += gc.getFontMetrics().getAverageCharWidth() * buf.getName().length() + LEGEND_SEPARATION + LEGEND_WIDTH_AND_HALF;
		}
		
	}

