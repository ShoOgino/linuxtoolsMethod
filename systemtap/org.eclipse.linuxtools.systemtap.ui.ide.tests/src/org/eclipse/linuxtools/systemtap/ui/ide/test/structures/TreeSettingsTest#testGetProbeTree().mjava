	@Test
	public void testGetProbeTree() {
		TreeNode temp;
		TreeNode t = new TreeNode("f", false);
		TreeNode t1 = new TreeNode(null, false);
		TreeNode t2 = new TreeNode(new StringBuilder("asfd"), true);
		
		TreeSettings.setTrees(t, t);
		temp = TreeSettings.getProbeTree();
		assertEquals("Probs no children", 0, temp.getChildCount());
		assertTrue("Probs object", t.getData().toString().equals(temp.getData().toString()));
		assertTrue("Probs display", t.toString().equals(temp.toString()));

		TreeSettings.setTrees(t, t1);
		temp = TreeSettings.getProbeTree();
		assertEquals("Probs no children", 0, temp.getChildCount());
		assertEquals("Probs object", t1.getData(), temp.getData());
		assertEquals("Probs display", t1.toString(), temp.toString());

		TreeSettings.setTrees(t, t2);
		temp = TreeSettings.getProbeTree();
		assertEquals("Probs no children", 0, temp.getChildCount());
		assertTrue("Probs object", t2.getData().toString().equals(temp.getData()));
		assertTrue("Probs display", t2.toString().equals(temp.toString()));

		t.add(t2);
		t.add(t1);
		TreeSettings.setTrees(t, t);
		temp = TreeSettings.getProbeTree();
		assertEquals("Probs has children", 2, temp.getChildCount());
		assertTrue("Probs child object", t2.getData().toString().equals(temp.getChildAt(0).getData()));
		assertTrue("Probs child display", t2.toString().equals(temp.getChildAt(0).toString()));

	}	

