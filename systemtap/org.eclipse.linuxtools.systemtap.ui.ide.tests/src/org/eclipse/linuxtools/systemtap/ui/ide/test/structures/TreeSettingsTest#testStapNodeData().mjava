    @Test
    public void testStapNodeData() {
        TreeNode temp;
        TreeNode t1 = new TreeNode(new FunctionNodeData("function ftest(x:long)", null), true);
        t1.add(new TreeNode(new FuncparamNodeData("long"), "x", false));

        TreeNode t2 = new TreeNode(new ProbeNodeData("ptest"), true);
        t2.add(new TreeNode(new ProbevarNodeData("x:long"), false));

        TreeSettings.setTrees(t1, t2);
        temp = TreeSettings.getFunctionTree();
        assertTrue("Improper data type - expected FunctionNodeData but was "+ temp.getData().getClass().getSimpleName(), temp.getData() instanceof FunctionNodeData);
        assertEquals("Function data not saved", t1.getData().toString(), temp.getData().toString());
        assertEquals("Funcs has children", t1.getChildCount(), temp.getChildCount());
        assertTrue("Improper data type", temp.getChildAt(0).getData() instanceof FuncparamNodeData);
        assertEquals("Function parameter data not saved",
                t1.getChildAt(0).getData().toString(), temp.getChildAt(0).getData().toString());

        temp = TreeSettings.getProbeTree();
        assertTrue("Improper data type", temp.getData() instanceof ProbeNodeData);
        assertEquals("Probe data not saved", t2.getData().toString(), temp.getData().toString());
        assertEquals("Probs has children", t2.getChildCount(), temp.getChildCount());
        assertTrue("Improper data type", temp.getChildAt(0).getData() instanceof ProbevarNodeData);
        assertEquals("Probe variable data not saved",
                t2.getChildAt(0).getData().toString(), temp.getChildAt(0).getData().toString());
    }

