	/**
	 * The main body of this event. Starts by making sure the current editor is valid to run,
	 * then builds the command line arguments for stap and retrieves the environment variables.
	 * Next, it gets an instance of <code>ScriptConsole</code> to run the script. Finally, it
	 * Registers a new <code>ChartStreamDaemon2</code> to handle formating the script output
	 * for a <code>DataSet</code>. Once everything is setup, it will attempt to switch to the
	 * Graphing Perspective.
	 */
	public void run() {
		LogManager.logDebug("Start run:", this);
		continueRun = true;
    	if(ConsoleLogPlugin.getDefault().getPluginPreferences().getBoolean(ConsoleLogPreferenceConstants.REMEMBER_SERVER)!=true)
        	
        {
			new SelectServerDialog(fWindow.getShell()).open();
		}
	
		if(isValid()) {
			 try{
				 
					ScpClient scpclient = new ScpClient();
					serverfileName = fileName.substring(fileName.lastIndexOf('/')+1);
					tmpfileName="/tmp/"+ serverfileName;
					 scpclient.transfer(fileName,tmpfileName);
			        }catch(Exception e){e.printStackTrace();}
			
			String[] script = buildScript();
			
			String[] envVars = getEnvironmentVariables();
			
			
			if(continueRun) {
				//createClientSession();
			    	ScriptConsole console = ScriptConsole.getInstance(serverfileName);
	                console.run(script, envVars, new PasswordPrompt(IDESessionSettings.password), new StapErrorParser());
	            
			//	subscription.addInputStreamListener(new ChartStreamDaemon2(console, dataSet, parser));
				console.getCommand().addInputStreamListener(new ChartStreamDaemon2(console, dataSet, parser));
				
				//Change to the graphing perspective
				try {
					IWorkbenchPage p = PlatformUI.getWorkbench().showPerspective(GraphingPerspective.ID, PlatformUI.getWorkbench().getActiveWorkbenchWindow());
					IViewPart ivp = p.findView(GraphSelectorView.ID);
					String name = console.getName();
					((GraphSelectorView)ivp).createScriptSet(name.substring(name.lastIndexOf('/')+1), dataSet);
				} catch(WorkbenchException we) {
					
				}
			}
		}
		
		LogManager.logDebug("End run:", this);
	}

