	/**
	 * Tries to read the file pointed at by <code>input</code> if it is an
	 * <code>IPathEditorInput</code>. If the file does not exist, <code>true</code>
	 * is returned.
	 *
	 * @param document the document to fill with the contents of <code>input</code>
	 * @param input the editor input
	 * @throws CoreException if reading the file fails
	 */
	private static void setDocumentContent(IDocument document, IEditorInput input) throws CoreException {
		Reader reader = null;
		try {
			if (input instanceof FileStoreEditorInput){
				reader = new InputStreamReader(((FileStoreEditorInput)input).getURI().toURL().openStream());
			} else if (input instanceof IPathEditorInput){
				reader= new FileReader(((IPathEditorInput)input).getPath().toFile());
			} else {
				return;
			}
		} catch (FileNotFoundException e) {
			// return empty document and save later
			return;
		} catch (MalformedURLException e) {
			throw new CoreException(new Status(IStatus.ERROR, EditorPlugin.ID ,Localization.getString("SimpleDocumentProvider.incorrectURL"), e)); //$NON-NLS-1$
		} catch (IOException e) {
			throw new CoreException(new Status(IStatus.ERROR, EditorPlugin.ID, Localization.getString("SimpleDocumentProvider.errorCreatingFile"), e)); //$NON-NLS-1$
		}

		try {
			setDocumentContent(document, reader);
			return;
		} catch (IOException e) {
			throw new CoreException(new Status(IStatus.ERROR, EditorPlugin.ID, IStatus.OK, Localization.getString("SimpleDocumentProvider.errorCreatingFile"), e)); //$NON-NLS-1$
		}
	}

