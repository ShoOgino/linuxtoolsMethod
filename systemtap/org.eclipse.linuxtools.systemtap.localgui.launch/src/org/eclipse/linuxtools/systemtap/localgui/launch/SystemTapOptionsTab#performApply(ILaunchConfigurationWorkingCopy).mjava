	@Override
	public void performApply(ILaunchConfigurationWorkingCopy configuration) {
		getControl().setRedraw(false);

		configuration.setAttribute(LaunchConfigurationConstants.COMMAND_VERBOSE, button_v.getSelection());
		configuration.setAttribute(LaunchConfigurationConstants.COMMAND_KEEP_TEMPORARY, button_k.getSelection());
		configuration.setAttribute(LaunchConfigurationConstants.COMMAND_GURU, button_g.getSelection());
		configuration.setAttribute(LaunchConfigurationConstants.COMMAND_PROLOGUE_SEARCH, button_P.getSelection());
		configuration.setAttribute(LaunchConfigurationConstants.COMMAND_NO_CODE_ELISION, button_u.getSelection());
		configuration.setAttribute(LaunchConfigurationConstants.COMMAND_DISABLE_WARNINGS, button_w.getSelection());
		configuration.setAttribute(LaunchConfigurationConstants.COMMAND_BULK_MODE, button_b.getSelection());
		configuration.setAttribute(LaunchConfigurationConstants.COMMAND_TIMING_INFO, button_t.getSelection());
		configuration.setAttribute(LaunchConfigurationConstants.COMMAND_SKIP_BADVARS, button_skip_badvars.getSelection());
		configuration.setAttribute(LaunchConfigurationConstants.COMMAND_IGNORE_DWARF, button_ignore_dwarf.getSelection());
		configuration.setAttribute(LaunchConfigurationConstants.COMMAND_TAPSET_COVERAGE, button_q.getSelection());
		configuration.setAttribute(LaunchConfigurationConstants.COMMAND_LEAVE_RUNNING, button_F.getSelection());
		configuration.setAttribute(LaunchConfigurationConstants.COMMAND_PASS, button_p_Spinner.getSelection());
		configuration.setAttribute(LaunchConfigurationConstants.COMMAND_BUFFER_BYTES, button_s_Spinner.getSelection());
		configuration.setAttribute(LaunchConfigurationConstants.COMMAND_TARGET_PID, button_x_Spinner.getSelection());
		configuration.setAttribute(LaunchConfigurationConstants.GRAPHICS_MODE, button_graphicsMode.getSelection());
		
		configuration.setAttribute(LaunchConfigurationConstants.COMMAND_C_DIRECTIVES, button_D_text.getText());
		configuration.setAttribute(LaunchConfigurationConstants.BINARY_PATH, binaryFile.getText());
		configuration.setAttribute(LaunchConfigurationConstants.SCRIPT_PATH, scriptFile.getText());
		configuration.setAttribute(LaunchConfigurationConstants.ARGUMENTS, arguments.getText());
		configuration.setAttribute(LaunchConfigurationConstants.OUTPUT_PATH, outputFile.getText());
		

		configuration.setAttribute(LaunchConfigurationConstants.GENERATED_SCRIPT, generatedScript.getText());
		configuration.setAttribute(LaunchConfigurationConstants.NEED_TO_GENERATE, needToGenerateScriptButton.getSelection());
		
		configuration.setAttribute(LaunchConfigurationConstants.USE_COLOUR, useColourButton.getSelection());
		
		if (button_graphicsMode.getSelection()){
			scriptFile.setEnabled(false);
			workspaceBrowseButton.setEnabled(false);
			fileBrowseButton.setEnabled(false);
			
		}else{
			scriptFile.setEnabled(true);
			workspaceBrowseButton.setEnabled(true);
			fileBrowseButton.setEnabled(true);
		}
		
		if (changeOverwrite) {
			if (needsOverwritePermission && overwritePermission || !needsOverwritePermission) {
				configuration.setAttribute(LaunchConfigurationConstants.OVERWRITE, true);
			}
			else {
				configuration.setAttribute(LaunchConfigurationConstants.OVERWRITE, false);
			}
			changeOverwrite = false;
		}

		getControl().setRedraw(true);
	}

