	private void promptForInputs() {
		InputDialog id = new InputDialog(new Shell(), Messages.getString("LaunchWizard.0"),   //$NON-NLS-1$
				Messages.getString("LaunchWizard.1") +  //$NON-NLS-1$
				Messages.getString("LaunchWizard.2") +  //$NON-NLS-1$
				Messages.getString("LaunchWizard.3"),   //$NON-NLS-1$
				Messages.getString("LaunchWizard.4"), null);  //$NON-NLS-1$
		id.open();
		
		if (id.getReturnCode() == InputDialog.CANCEL){			
			return;
		}
		
		name = id.getValue();
		
		IWorkspace workspace = ResourcesPlugin.getWorkspace();
		IWorkspaceRoot root = workspace.getRoot();
		IPath location = root.getLocation();
		workspacePath = location.toString();
		
		sh = new Shell();
		sh.setSize(670,650);
		sh.setLayout(new GridLayout(1, false));
		sh.setText(name);
		
		
		Image img = new Image(sh.getDisplay(), PluginConstants.PLUGIN_LOCATION + "systemtapbanner.png"); //$NON-NLS-1$
		Composite imageCmp = new Composite(sh, SWT.BORDER);
		imageCmp.setLayout(new FillLayout());
		GridData imageData = new GridData(650, 157);
		imageData.horizontalAlignment = SWT.CENTER;
		imageCmp.setLayoutData(imageData);
		imageCmp.setBackgroundImage(img);
		
		fileComp = new Composite(sh, SWT.NONE);
		fileComp.setLayout(new GridLayout(3, false));
		fileComp.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
		
		Label scriptLabel = new Label(fileComp, SWT.HORIZONTAL);
		scriptLabel.setText(Messages.getString("LaunchWizard.19")); //$NON-NLS-1$
		scriptLabel.setLayoutData(new GridData());
		scriptLocation = new Text(fileComp, SWT.SINGLE);
		scriptLocation.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
		Button scriptButton = new Button(fileComp, SWT.PUSH);
		scriptButton.setText(Messages.getString("SystemTapOptionsTab.BrowseFiles")); //$NON-NLS-1$
		scriptButton.addSelectionListener(new SelectionAdapter() {
			public void widgetSelected(SelectionEvent e) {
				String filePath = scriptLocation.getText();
				FileDialog dialog = new FileDialog(sh, SWT.SAVE);
				filePath = dialog.open();
				if (filePath != null) {
					scriptLocation.setText(filePath);
				}
			}
		});
		
		
		Label binaryLabel= new Label(fileComp, SWT.HORIZONTAL);
		binaryLabel.setText(Messages.getString("LaunchWizard.20")); //$NON-NLS-1$
		scriptLabel.setLayoutData(new GridData());
		
		binaryLocation = new Text(fileComp, SWT.SINGLE);
		binaryLocation.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
		Button binaryButton = new Button(fileComp, SWT.PUSH);
		binaryButton.setText(Messages.getString("SystemTapOptionsTab.WorkspaceButton2")); //$NON-NLS-1$
		binaryButton.addSelectionListener(new SelectionAdapter() {
			public void widgetSelected(SelectionEvent e) {
				ElementTreeSelectionDialog dialog = new ElementTreeSelectionDialog(sh, new WorkbenchLabelProvider(), new WorkbenchContentProvider());
				dialog.setTitle(Messages.getString("SystemTapOptionsTab.SelectResource"));  //$NON-NLS-1$
				dialog.setMessage(Messages.getString("SystemTapOptionsTab.SelectSuppressions"));  //$NON-NLS-1$
				dialog.setInput(ResourcesPlugin.getWorkspace().getRoot()); 
				dialog.setComparator(new ResourceComparator(ResourceComparator.NAME));
				if (dialog.open() == IDialogConstants.OK_ID) {
					IResource resource = (IResource) dialog.getFirstResult();
					String arg = resource.getFullPath().toString();
					binaryLocation.setText(workspacePath + arg);
				}
			}
		});

		Composite argumentsComp = new Composite(sh, SWT.BORDER_DASH);
		argumentsComp.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
		argumentsComp.setLayout(new GridLayout(3, false));
		
		Label argumentsLabel= new Label(argumentsComp, SWT.HORIZONTAL);
		argumentsLabel.setText(Messages.getString("LaunchWizard.21")); //$NON-NLS-1$
		
		argumentsLocation = new Text(argumentsComp, SWT.MULTI | SWT.WRAP);
//		argumentsLocation.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
		GridData gd = new GridData(GridData.FILL_HORIZONTAL);
//		gd.grabExcessVerticalSpace=true;
		gd.heightHint=300;
		argumentsLocation.setLayoutData(gd);
		Button argumentsButton = new Button(argumentsComp, SWT.PUSH);
		argumentsButton.setText(Messages.getString("LaunchWizard.22")); //$NON-NLS-1$
		argumentsButton.addSelectionListener(new SelectionAdapter() {
			public void widgetSelected(SelectionEvent e) {
				argumentsLocation.setText(
						argumentsLocation.getText() + " process(\""  //$NON-NLS-1$
						+ binaryLocation.getText() + "\").function(\"\")"); //$NON-NLS-1$ //$NON-NLS-2$
			}
		});
		
		
		//TODO: Don't use blank labels to move button to the right column :P
		Label blankLabel = new Label(argumentsComp, SWT.HORIZONTAL);
		blankLabel.setText(" "); //$NON-NLS-1$
		
		
		Button launch = new Button(argumentsComp, SWT.PUSH);
		launch.setLayoutData(new GridData(GridData.CENTER, GridData.BEGINNING, false, false));
		launch.setText(Messages.getString("LaunchWizard.24")); //$NON-NLS-1$
		launch.addSelectionListener(new SelectionAdapter() {
			public void widgetSelected(SelectionEvent e) {
					scriptPath = scriptLocation.getText();
					binaryPath = binaryLocation.getText();
					arguments = argumentsLocation.getText();
					int index = binaryPath.lastIndexOf("/");
					if (index > 0 && index < binaryPath.length())
						name+= " - " + binaryPath.substring(index, binaryPath.length());
					name = getLaunchManager().generateUniqueLaunchConfigurationNameFrom(name);
					config = createConfiguration(null, name);

					finishLaunch(scriptPath + ": " + binName, mode); //$NON-NLS-1$
					completed = true;
					sh.dispose();
				}
				
		});
		
		ShellOpener so = new ShellOpener("Wizard Opener", sh);
		so.schedule();
		
//		while (!so.isDisposed()) {
//			try {
//				Thread.sleep(100);
//			} catch (InterruptedException e1) {
//				e1.printStackTrace();
//			}
//		}
		
		completed = true;

	}

