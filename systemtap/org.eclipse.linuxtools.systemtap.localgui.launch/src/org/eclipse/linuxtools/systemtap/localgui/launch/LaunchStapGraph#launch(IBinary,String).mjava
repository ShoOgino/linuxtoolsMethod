	public void launch(IBinary bin, String mode) {
		super.Init();		
		name = Messages.getString("LaunchStapGraph.0"); //$NON-NLS-1$
		binName = getName(bin);

		
		partialScriptPath = PluginConstants.getPluginLocation()
				+ "parse_function_partial.stp"; //$NON-NLS-1$

		scriptPath = PluginConstants.DEFAULT_OUTPUT 
				+ "callgraphGen.stp"; //$NON-NLS-1$

//		try {
//			for (ICElement b : bin.getChildren()) {
//				if (b.getElementName().contains(":"))
//					continue;
//				System.out.println("name: " + b.getElementName());
//				System.out.println("Type: " + b.getElementType());
//				//				for (ICElement c: b.get) {
////					System.out.println("Subname: " + c.getElementName());
////				}
////					
//			}
//		} catch (CModelException e2) {
//			e2.printStackTrace();
//		}
//		return;
		try {
			String scriptContents = ""; //$NON-NLS-1$
			File scriptFile = new File(scriptPath);
			scriptFile.delete();
			scriptFile.createNewFile();


			scriptContents += writeGlobalVariables();
			scriptContents += writeStapMarkers();
			String funcs = writeFunctionListToScript();
			if (funcs == null)
				return;
			scriptContents += funcs;
			scriptContents += writeFromPartialScript();
			
			BufferedWriter bw = new BufferedWriter(new FileWriter(scriptFile));
			bw.write(scriptContents);
			bw.close();

			 
			config = createConfiguration(bin, name);
			binaryPath = bin.getResource().getLocation().toString();
			arguments = binaryPath;
			outputPath = PluginConstants.STAP_GRAPH_DEFAULT_IO_PATH;
			
			
			ILaunchConfigurationWorkingCopy wc;
			
			wc = config.getWorkingCopy();
			wc.setAttribute(LaunchConfigurationConstants.GRAPHICS_MODE, true);
			wc.setAttribute(LaunchConfigurationConstants.COMMAND_C_DIRECTIVES,
					"-DMAXACTION=1000 -DSTP_NO_OVERLOAD -DMAXMAPENTRIES=10000"); //$NON-NLS-1$
			wc.setAttribute(LaunchConfigurationConstants.GENERATED_SCRIPT, scriptContents);
			wc.doSave();
			

			finishLaunch(name, mode);

		} catch (IOException e) {
			SystemTapUIErrorMessages mess = new SystemTapUIErrorMessages(
					Messages.getString("LaunchStapGraph.GenerationError"), //$NON-NLS-1$
					Messages.getString("LaunchStapGraph.GenerationErrorTitle"), //$NON-NLS-1$ 
					Messages.getString("LaunchStapGraph.GenerationErrorMessage")); //$NON-NLS-1$
			mess.schedule();
			e.printStackTrace();
		} catch (CoreException e1) {
			e1.printStackTrace();
		}
		

	}

