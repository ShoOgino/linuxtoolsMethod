	/**
	 * Produces a <code>String[]</code> from the <code>ArrayList</code> passed in with stap inserted
	 * as the first entry, and the filename as the last entry. Used to convert the arguments generated
	 * earlier in <code>buildStandardScript</code> such as tapset locations and guru mode into an actual
	 * command line argument array that can be passed to <code>Runtime.exec</code>.
	 * @param cmdList The list of arguments for stap for this scriptprest
	 * @return An array suitable to pass to <code>Runtime.exec</code> to start stap on this file.
	 */
	/*protected String[] finalizeScript(ArrayList<String> cmdList) {
		String[] script;

		if (needsArguments) {
			script = new String[cmdList.size() + 3];
			script[script.length-2] = scriptPath;
			script[script.length-1] = arguments; 
		} 
		else {
			script = new String[cmdList.size() + 2];
			script[script.length-1] = scriptPath;
		}
		
		//TODO: Make this based on the install.sh file
		script[0] = PluginConstants.STAP_PATH; //$NON-NLS-1$

		for(int i=0; i< cmdList.size(); i++) {
			if (cmdList.get(i) != null)
				script[i +1] = cmdList.get(i).toString();
			else script[i + 1] = ""; //$NON-NLS-1$
				
		}
		return script;
	}*/

	
	public void selectionChanged(IAction act, ISelection select) {
		this.act = act;
		setEnablement(false);
		//buildEnablementChecks();
	}

