	/**
	 * Gather data from a previously started script and do stuff with it.
	 * Contains blocking reads.
	 * 
	 */
	  public void run () {
		running = true;
		DMResponse subrep = null;
		//long timeToRemove = 0;
		inputGobbler.start();
		while (!Thread.interrupted() && ClientSession.isConnected()) {
			subrep = session.recvResponse(scriptid);	
			//timeToRemove = System.currentTimeMillis() - (1000 * ConsoleLogPlugin.getDefault().getPluginPreferences().getInt(ConsoleLogPreferenceConstants.SAVE_LENGTH));
			if (subrep == null) {
				// Interrupting this thread cause recvResponse to return
				// from its blocking read, leaving subrep null
				break;
			}
			
			if (subrep.isValid() && (subrep.getsource() == DMResponse.STDERR)) {
				// log the err output?, maybe pop up a dialog? ignore for now..
				final String outp = new String (session.recvData(scriptid, subrep.getsize()));
				final String[] lines = outp.trim().split("\n");
				for (final String str : lines) {
					try{
					inputGobbler.fireNewDataEvent(str + "\n");
					}catch(Exception e)
					{
						System.err.println(e.toString());
					}

				}	
			return;
			}
			else if (subrep.isValid()) {
				
				final String outp = new String (session.recvData(scriptid, subrep.getsize()));
				
				final String[] lines = outp.trim().split("\n");
				for (final String str : lines) {
					try{
					inputGobbler.fireNewDataEvent(str + "\n");
					}catch(Exception e)
					{
						System.err.println(e.toString());
					}

				}

			}
		}

		final DMRequest unsub = new DMRequest (DMRequest.UNSUBSCRIBE, scriptid, session.getcid(), 0);
		if (!session.sendRequest (unsub))
			System.err.println ("Failed Unsubscribing: " + session.getcid());

		subrep = session.recvResponse(scriptid);
		delSubscription();

		running = false;
	}

