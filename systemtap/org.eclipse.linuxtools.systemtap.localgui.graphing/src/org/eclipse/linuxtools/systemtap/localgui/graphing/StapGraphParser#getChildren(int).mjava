	/**
	 * Helper method for createMap, to get the children of some node.
	 * The case of no children is handled by createMap.
	 * 
	 * Eg. Given, "0<1<2<>3<>>>", to get the children of node 0, we would 
	 * call : getChildren(1), and would get a list with just a value of 1.
	 * To get the children of node 1, we would call : getChildren(3), and
	 * we would get a list with 2, and 3.
	 * 
	 * @param pos position of the '<' that is to the immediate left of the
	 * first child
	 * @return A List of the children
	 */
	private ArrayList<Integer> getChildren(int pos){
		int nested = 0;
		String func = ""; //$NON-NLS-1$
		ArrayList<Integer> ret = new ArrayList<Integer>();
		char val;
		
		while(pos <  graphText.length()){
			val = graphText.charAt(pos);
			//WE ARE ENTERING A NEW FUNCTION SO SAVE THE CURRENT ONE
			if (val == '<'){
				if (func.length() > 0){
					//GRAB A UNIQE IDENTIFIER FOR THE FUNCTION
					ret.add(Integer.valueOf(func));															
				}
				func = ""; //$NON-NLS-1$
				nested++;
			}else if (val == '>'){
				//IF WE ARE CLOSING THIS FUNCTION STOP LOOKING
				if (nested == 1){
					return ret;			
				}
				nested--;
			}else{
				//IF WE ARE DIRECTLY IN THE FUNCTION COLLECT THIS STRING
				if (nested == 1){
					func += val;
				}
			}
			pos++;
		}
		
		return ret;
	}

