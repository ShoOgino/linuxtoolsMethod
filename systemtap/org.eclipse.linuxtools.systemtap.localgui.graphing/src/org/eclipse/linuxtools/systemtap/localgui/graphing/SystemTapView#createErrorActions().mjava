	/**
	 * Populates the Errors menu
	 */
	public void createErrorActions() {

		error_errorLog = new Action("Error log") {
			public void run() {
				boolean error = false;
				File log = new File(PluginConstants.DEFAULT_OUTPUT + "Error.log");
				BufferedReader buff;
				try {
					buff = new BufferedReader(new FileReader(log));
				String logText = "";
				String line;
				
				while ((line = buff.readLine()) != null) {
					logText+=line + PluginConstants.NEW_LINE;
				}
				
				Shell sh = new Shell();
				sh.setLayout(new FillLayout());
				sh.setSize(400,400);
				Text txt = new Text(sh, SWT.MULTI | SWT.V_SCROLL | SWT.WRAP | SWT.READ_ONLY);
				
				txt.setText(logText);
				sh.open();
				} catch (FileNotFoundException e) {
					error = true;
				} catch (IOException e) {
					error = true;
				} finally {
					if (error) {
						SystemTapUIErrorMessages mess = new SystemTapUIErrorMessages(
							"ErrorLog reading error",
							"Error reading error log",
							"Error log could not be read, most likely this is because" +
							" the log file could not be found.");
						mess.schedule();
					}
				}
				
			}
		};
		
		error_deleteError = new Action("Clear log") {
			public void run() {
				
				try {
					if (!MessageDialog.openConfirm(new Shell(), "Delete logs?", 
							"This will permanently clear the SystemTap Eclipse error " +
							"logs. Are you sure you want to ontinue?"))
						return;
					
					File log = new File(PluginConstants.DEFAULT_OUTPUT + "Error.log");
					log.delete();
					log.createNewFile();
				} catch (IOException e) {
					e.printStackTrace();
				}
				
			}
		};
		
		
	}

