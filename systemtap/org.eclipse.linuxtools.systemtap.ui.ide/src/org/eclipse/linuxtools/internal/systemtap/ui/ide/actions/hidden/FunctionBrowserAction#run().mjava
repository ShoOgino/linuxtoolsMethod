	/**
	 * The main action code, invoked when this action is fired. This code checks the current
	 * selection's clickable property, and either invokes the <code>TreeExpandCollapseAction</code> if
	 * the selection is not clickable (i.e. the selection is not a function, but a category of functions),
	 * or it inserts text for a function call to the selected function in the active STPEditor
	 * (creating a new editor if there is not one currently open).
	 */
	@Override
	public void run() {
		LogManager.logDebug("Start run:", this); //$NON-NLS-1$
		IWorkbenchPage page = window.getActivePage();
		ISelection incoming = viewer.getViewer().getSelection();
		IStructuredSelection selection = (IStructuredSelection)incoming;
		Object o = selection.getFirstElement();
		if (o instanceof TreeNode) {
			TreeNode t = (TreeNode) o;
			if(t.isClickable()) {
				IEditorInput input;
				IEditorPart ed = page.getActiveEditor();
				if(ed == null) {
					NewFileAction action = new NewFileAction();
					//action.init(page.getWorkbenchWindow());
					action.run();
					if (action.isSuccessful())
						ed = page.getWorkbenchWindow().getActivePage().getActiveEditor();
					else
						return;
				}
				input = ed.getEditorInput();
				IEditorPart editor;
				try {
					editor = page.openEditor(input, STPEditor.ID);

					if(editor instanceof STPEditor) {
						STPEditor stpeditor = (STPEditor)editor;
						//build the string
						String s = t.toString() + "\n"; //$NON-NLS-1$
						stpeditor.insertTextAtCurrent(s);

					}
				} catch (PartInitException e) {
					LogManager.logCritical("PartInitException run: " + e.getMessage(), this); //$NON-NLS-1$
				}
			} else {
				expandAction.run();
			}
		}
		LogManager.logDebug("End run:", this); //$NON-NLS-1$
	}

