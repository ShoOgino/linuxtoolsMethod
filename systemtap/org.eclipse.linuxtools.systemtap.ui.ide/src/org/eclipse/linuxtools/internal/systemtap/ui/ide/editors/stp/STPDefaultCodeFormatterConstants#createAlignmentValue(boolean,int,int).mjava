	/**
	 * Create a new alignment value according to the given values. This must be used to set up
	 * the alignment options.
	 *
	 * @param forceSplit the given force value
	 * @param wrapStyle the given wrapping style
	 * @param indentStyle the given indent style
	 *
	 * @return the new alignment value
	 */
	public static String createAlignmentValue(boolean forceSplit, int wrapStyle, int indentStyle) {
		int alignmentValue = 0;
		switch (wrapStyle) {
			case WRAP_COMPACT:
				alignmentValue |= STPAlignment.M_COMPACT_SPLIT;
				break;
			case WRAP_COMPACT_FIRST_BREAK:
				alignmentValue |= STPAlignment.M_COMPACT_FIRST_BREAK_SPLIT;
				break;
			case WRAP_NEXT_PER_LINE:
				alignmentValue |= STPAlignment.M_NEXT_PER_LINE_SPLIT;
				break;
			case WRAP_NEXT_SHIFTED:
				alignmentValue |= STPAlignment.M_NEXT_SHIFTED_SPLIT;
				break;
			case WRAP_ONE_PER_LINE:
				alignmentValue |= STPAlignment.M_ONE_PER_LINE_SPLIT;
				break;
		}
		if (forceSplit) {
			alignmentValue |= STPAlignment.M_FORCE;
		}
		switch (indentStyle) {
			case INDENT_BY_ONE:
				alignmentValue |= STPAlignment.M_INDENT_BY_ONE;
				break;
			case INDENT_ON_COLUMN:
				alignmentValue |= STPAlignment.M_INDENT_ON_COLUMN;
		}
		return String.valueOf(alignmentValue);
	}

