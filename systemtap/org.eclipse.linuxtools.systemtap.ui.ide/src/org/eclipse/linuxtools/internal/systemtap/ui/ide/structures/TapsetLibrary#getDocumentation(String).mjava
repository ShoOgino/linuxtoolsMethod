	/**
	 * Returns the documentation for the given probe, function, or tapset.
	 * @since 2.0
	 */
	public static synchronized String getDocumentation(String element) {
		String documentation = pages.get(element);
		if (documentation == null) {

			// If the requested element is a probe variable
			// fetch the documentation for the parent probe then check the map
			if (element.matches("probe::.*::.*")){ //$NON-NLS-1$
				String probe = element.split("::")[1]; //$NON-NLS-1$
				getDocumentation("probe::" + probe); //$NON-NLS-1$
				return pages.get(element);
			}

			// Otherwise, get the documentation for the requested element.
			documentation = (new ManPage(element)).getStrippedPage().toString();

			// If the requested element is a probe and a documentation page was
			// found for it, parse the documentation for the variables if present.
			if (!documentation.startsWith("No manual entry for") && //$NON-NLS-1$
					element.startsWith("probe::")) { //$NON-NLS-1$
				// If this is a probe parse out the variables
				String[] sections = documentation.split("VALUES"); //$NON-NLS-1$
				if (sections.length > 1){
					// Discard any other sections
					String variablesString = sections[1].split("CONTEXT|DESCRIPTION|SystemTap Tapset Reference")[0].trim(); //$NON-NLS-1$
					String[] variables = variablesString.split("\n"); //$NON-NLS-1$
					int i = 0;
					if (!variables[0].equals("None")) { //$NON-NLS-1$
						while ( i < variables.length) {
							String variableName = variables[i].trim();
							StringBuilder variableDocumentation = new StringBuilder();
							i++;
							while (i < variables.length && !variables[i].isEmpty()){
								variableDocumentation.append(variables[i].trim());
								variableDocumentation.append("\n"); //$NON-NLS-1$
								i++;
							}

							pages.put(element + "::" + variableName, variableDocumentation.toString().trim()); //$NON-NLS-1$
							i++;
						}
					}
				}
			}
		}
		return documentation;
	}

