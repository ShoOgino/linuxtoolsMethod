    /**
     * Runs stap to obtain a log of all probe aliases & their variables,
     * and populate the probe tree with them.
     * @return An {@link IStatus} severity level for the result of the operation.
     */
    private int addProbeAliases(IProgressMonitor monitor) {
        TreeNode statics = tree.getChildByName(Messages.ProbeParser_staticProbes);
        if (statics == null) {
            return IStatus.ERROR;
        }
        TreeNode aliases = new TreeNode(Messages.ProbeParser_aliasProbes, false);
        tree.add(aliases);
        if (monitor.isCanceled()) {
            return IStatus.CANCEL;
        }

        String probeDump = runStap(new String[]{"-L"}, "**", false); //$NON-NLS-1$ //$NON-NLS-2$
        int result = verifyRunResult(probeDump);
        if (result != IStatus.OK) {
            return result;
        }
        if (!doQuickErrorCheck(probeDump)) {
            return IStatus.ERROR;
        }

        boolean canceled = false;
        try (Scanner st = new Scanner(probeDump)) {
            TreeNode groupNode = null;
            while (st.hasNextLine()) {
                if (monitor.isCanceled()) {
                    canceled = true;
                    break;
                }
                String tokenString = st.nextLine();
                // If the token starts with '_' or '__' it is a private probe so
                // skip it.
                if (tokenString.startsWith("_")) { //$NON-NLS-1$
                    continue;
                }
                // Only add this group if it is not a static probe group
                String groupName = extractProbeGroupName(tokenString);
                if (statics.getChildByName(groupName) != null) {
                    continue;
                }
                groupNode = addSingleProbeAlias(tokenString, aliases, groupNode, groupName, null);
            }
        }
        aliases.sortTree();
        return !canceled ? IStatus.OK : IStatus.CANCEL;
    }

