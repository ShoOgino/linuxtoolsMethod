	/**
	 * The main body of the action. Expands or Collapses the viewer specified at construction to
	 * the level of the current selection.
	 */
	@Override
	public void run() {
		if(!(cl.equals(FunctionBrowserView.class) || cl.equals(ProbeAliasBrowserView.class) || cl.equals(KernelBrowserView.class))) {
			return;
		}
		IViewReference[] references = fWindow.getActivePage().getViewReferences();
		IViewPart part = null;
		boolean found = false;
		for(int i = 0; i < references.length; i++) {
			part = references[i].getView(false);
			if(part == null)
				continue;
			if(part.getClass().equals(cl)) {
				found = true;
				break;
			}
		}
		if(!found) {
			return;
		}
		if(part == null) {
			return;
		}
		BrowserView viewer = (BrowserView) part;
		ISelection incoming = viewer.getViewer().getSelection();
		IStructuredSelection selection = (IStructuredSelection)incoming;
		Object o = selection.getFirstElement();

		if(o == null) {
			return;
		}

		Object[] objs = viewer.getViewer().getVisibleExpandedElements();
		boolean doExpand = true;

		for(int i = 0; i < objs.length; i++)
			if(objs[i] == o)
				doExpand = false;

		if(doExpand) {
			viewer.getViewer().expandToLevel(o,1);
		} else {
			viewer.getViewer().collapseToLevel(o,1);
		}
	}

