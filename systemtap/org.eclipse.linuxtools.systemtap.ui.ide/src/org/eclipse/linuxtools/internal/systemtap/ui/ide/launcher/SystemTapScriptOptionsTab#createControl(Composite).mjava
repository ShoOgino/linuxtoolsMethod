    @Override
    public void createControl(Composite parent) {

        GridLayout singleColumnGridLayout = new GridLayout();
        singleColumnGridLayout.numColumns = 1;
        Composite comp = new Composite(parent, SWT.NONE);
        setControl(comp);
        comp.setLayout(singleColumnGridLayout);
        comp.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true));

        this.fileDialog = new FileDialog(PlatformUI.getWorkbench()
                .getActiveWorkbenchWindow().getShell(), SWT.OPEN);
        fileDialog.setText(Messages.SystemTapScriptOptionsTab_selectExec);
        fileDialog.setFilterPath(Platform.getLocation().toOSString());
        // Target Executable path
        Group targetExecutableGroup = new Group(comp, SWT.SHADOW_ETCHED_IN);
        targetExecutableGroup.setText(Messages.SystemTapScriptOptionsTab_targetExec);
        targetExecutableGroup
                .setToolTipText(Messages.SystemTapScriptOptionsTab_targetToolTip);

        targetExecutableGroup.setLayoutData(new GridData(SWT.FILL, SWT.FILL,
                true, false));
        GridLayout twoColumnGridLayout = new GridLayout();
        twoColumnGridLayout.numColumns = 2;
        targetExecutableGroup.setLayout(twoColumnGridLayout);
        this.targetProgramText = new Text(targetExecutableGroup, SWT.SINGLE
                | SWT.BORDER);
        targetProgramText.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true,
                true));
        targetProgramText.addModifyListener(modifyListener);
        Button selectTargetProgramButton = new Button(targetExecutableGroup, 0);
        GridData gridData = new GridData();

        selectTargetProgramButton.setLayoutData(gridData);
        selectTargetProgramButton
                .setText(Messages.SystemTapScriptLaunchConfigurationTab_browse);
		selectTargetProgramButton.addSelectionListener(SelectionListener.widgetSelectedAdapter(e -> {
			String fileName = fileDialog.open();
			if (fileName != null) {
				targetProgramText.setText(fileName);
			}
		}));

        // Check boxes
        Composite cmpChkBoxes = new Composite(comp, SWT.NONE);
        cmpChkBoxes.setLayout(twoColumnGridLayout);
        cmpChkBoxes.setLayoutData(new GridData(SWT.FILL, SWT.BEGINNING, true, false));

        for (int i = 0; i < IDEPreferenceConstants.STAP_BOOLEAN_OPTIONS.length; i++) {
            checkBox[i] = new Button(cmpChkBoxes, SWT.CHECK);
            checkBox[i]
                    .setText(IDEPreferenceConstants.STAP_BOOLEAN_OPTIONS[i][IDEPreferenceConstants.LABEL]
                            + " (" + IDEPreferenceConstants.STAP_BOOLEAN_OPTIONS[i][IDEPreferenceConstants.FLAG] + ")"); //$NON-NLS-1$//$NON-NLS-2$
            checkBox[i].addSelectionListener(new SelectionListener() {
                @Override
                public void widgetSelected(SelectionEvent e) {
                    updateLaunchConfigurationDialog();
                }

                @Override
                public void widgetDefaultSelected(SelectionEvent e) {
                    updateLaunchConfigurationDialog();
                }
            });
            checkBox[i]
                    .setToolTipText(IDEPreferenceConstants.STAP_BOOLEAN_OPTIONS[i][IDEPreferenceConstants.TOOLTIP]);

            if (IDEPreferenceConstants.STAP_BOOLEAN_OPTIONS[i][IDEPreferenceConstants.FLAG]
                    .contains(Messages.SystemTapScriptOptionsTab_dyninst)) {
                this.dyninstCheckBox = checkBox[i];
            }
        }

        // Labels and Text fields
        Composite cmpTxtBoxes = new Composite(comp, SWT.NONE);
        cmpTxtBoxes.setLayout(twoColumnGridLayout);
        cmpTxtBoxes.setLayoutData(new GridData(SWT.FILL, SWT.BEGINNING, true, false));

        Label label;
        for (int i = 0; i < IDEPreferenceConstants.STAP_STRING_OPTIONS.length; i++) {
            label = new Label(cmpTxtBoxes, SWT.NONE);
            label.setText(IDEPreferenceConstants.STAP_STRING_OPTIONS[i][IDEPreferenceConstants.LABEL]
                    + " (" + IDEPreferenceConstants.STAP_STRING_OPTIONS[i][IDEPreferenceConstants.FLAG] + ")"); //$NON-NLS-1$ //$NON-NLS-2$
            label.setToolTipText(IDEPreferenceConstants.STAP_STRING_OPTIONS[i][IDEPreferenceConstants.TOOLTIP]);
            text[i] = new Text(cmpTxtBoxes, SWT.BORDER);
            text[i].setLayoutData(new GridData(SWT.FILL, SWT.BEGINNING, true, true));
            text[i].addModifyListener(modifyListener);
            text[i].setToolTipText(IDEPreferenceConstants.STAP_STRING_OPTIONS[i][IDEPreferenceConstants.TOOLTIP]);

            if (IDEPreferenceConstants.STAP_STRING_OPTIONS[i][IDEPreferenceConstants.FLAG]
                    .contains("-x")) { //$NON-NLS-1$
                this.targetPidText = text[i];
            }
        }

        label = new Label(cmpTxtBoxes, SWT.NONE);
        label.setText(Messages.SystemTapScriptOptionsTab_otherOptions);
        miscCommandsText = new Text(cmpTxtBoxes, SWT.BORDER);
        miscCommandsText.setLayoutData(new GridData(SWT.FILL, SWT.BEGINNING,
                true, true));
        miscCommandsText.addModifyListener(modifyListener);
    }

