	/**
	 * Find the appropriate parent group node for a probe alias to group probes by name.
	 * If it doesn't yet exist, create it and add it to the view's tree.
	 * @param probeLine The name of the probe group.
	 * @param groupNode For optimization, pass an existing group node here, as it will be
	 * used if the probe belongs in it. Otherwise, or if <code>null</code> is passed, a new one will be created.
	 * @param category The parent tree node in which to put the group node.
	 * @return The found or created group node that will be the parent of the probe's entry item in the view.
	 */
	private TreeNode addOrFindProbeGroup(String groupName, TreeNode groupNode, TreeNode category) {

		// If the current probe belongs to a group other than
		// the most recent group. This should rarely be needed because the
		// probe list is sorted... mostly.
		if(groupNode == null || !groupNode.toString().equals(groupName)) {
			groupNode = category.getChildByName(groupName);
		}

		// Create a new group and add it
		if(groupNode == null) {
			groupNode = new TreeNode(groupName, true);
			category.add(groupNode);
		}
		return groupNode;
	}

