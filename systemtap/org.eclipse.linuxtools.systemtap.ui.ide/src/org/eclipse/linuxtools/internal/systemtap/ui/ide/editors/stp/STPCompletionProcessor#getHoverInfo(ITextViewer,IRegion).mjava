	@Override
	public String getHoverInfo(ITextViewer textViewer, IRegion hoverRegion) {
		String documentation = null;
		try {
			String keyword = textViewer.getDocument().get(hoverRegion.getOffset(), hoverRegion.getLength());

			documentation = TapsetLibrary.getDocumentation("function::" + keyword); //$NON-NLS-1$
			if (!documentation.startsWith("No manual entry for")){ //$NON-NLS-1$
				return documentation;
			}

			documentation = TapsetLibrary.getDocumentation("probe::" + keyword); //$NON-NLS-1$
			if (!documentation.startsWith("No manual entry for")){ //$NON-NLS-1$
				return documentation;
			}

			documentation = TapsetLibrary.getDocumentation("tapset::" + keyword); //$NON-NLS-1$
			if (!documentation.startsWith("No manual entry for")){ //$NON-NLS-1$
				return documentation;
			}

			if (keyword.indexOf('.') > 0){
				keyword = keyword.split("\\.")[0]; //$NON-NLS-1$
				documentation = TapsetLibrary.getDocumentation("tapset::" + keyword); //$NON-NLS-1$
			}

			IDocument document = textViewer.getDocument();
			ITypedRegion partition = 
					((IDocumentExtension3)document).getPartition(STPProbeScanner.STP_PROBE_PARTITIONING, 
							hoverRegion.getOffset(), false);
			if (partition.getType() == STPProbeScanner.STP_PROBE) {
				String probe = getProbe(textViewer.getDocument(), hoverRegion.getOffset());
				documentation = TapsetLibrary.getDocumentation("probe::" + probe + "::"+ keyword); //$NON-NLS-1$ //$NON-NLS-2$
			}

		} catch (BadLocationException e) {
			// Bad hover location; just ignore it.
		} catch (BadPartitioningException e) {
			// Bad hover scenario, just ignore it.
		}

		return documentation;
	}

