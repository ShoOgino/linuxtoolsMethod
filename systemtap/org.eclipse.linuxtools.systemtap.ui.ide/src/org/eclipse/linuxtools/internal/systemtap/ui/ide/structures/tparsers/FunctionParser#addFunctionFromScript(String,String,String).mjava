    /**
     * Searches the actual contents of a .stp script file for a specific function, and adds
     * @param functionName The name of the function to search for.
     * @param scriptText The contents of the script to search, with its comments removed
     * (Use {@link CommentRemover} on file contents before passing them here, if necessary).
     * @param scriptFilename The name of the script file being searched.
     */
    private void addFunctionFromScript(String functionName, String scriptText, String scriptFilename) {
        String regex = MessageFormat.format(FUNC_REGEX, functionName);
        Matcher mScript = Pattern.compile(regex).matcher(scriptText);
        if (mScript.find()) {
            String functionLine = mScript.group();
            String functionType = mScript.group(1);
            // If the function has no return type, look for a "return" statement to check
            // if it's really a void function, or if its return type is just unspecified
            if (functionType == null && isPatternInScriptBlock(scriptText, mScript.end(), P_RETURN)) {
                functionType = UNKNOWN_TYPE;
            }
            TreeDefinitionNode function = new TreeDefinitionNode(
                    new FunctionNodeData(functionLine, functionType),
                    functionName, scriptFilename, true);
            tree.add(function);
            addParamsFromString(mScript.group(2), function);
        }
    }

