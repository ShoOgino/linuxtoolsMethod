    @Override
    public void customizeDocumentCommand(IDocument document,
            DocumentCommand command) {
        boolean modified = false;
        boolean isNewLine= command.length == 0 && command.text != null
                && isLineDelimiter(document, command.text);
        if (isNewLine) {
            smartIndentAfterNewLine(document, command);
        } else if (command.text.length() == 1) {
            smartIndentOnKeypress(document, command);
        } else if (command.text.length() > 1
                && command.text.trim().length() != 0) {
            smartPaste(document, command); // no smart backspace for paste
        }
        if (command.text.equals("\"") && !inStringOrComment(document, command)) { //$NON-NLS-1$
            command.text = "\"\""; //$NON-NLS-1$
            modified = true;
        } else if (command.text.equals("(") && !inStringOrComment(document, command)) { //$NON-NLS-1$
            command.text = "()"; //$NON-NLS-1$
            modified = true;
        } else if (command.text.equals("[") && !inStringOrComment(document, command)) { //$NON-NLS-1$
            command.text = "[]"; //$NON-NLS-1$
            modified = true;
        }

        if (modified) {
            command.caretOffset = command.offset + 1;
            command.shiftsCaret = false;
        }

        super.customizeDocumentCommand(document, command);
    }

