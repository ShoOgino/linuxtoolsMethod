    @Override
    public void createControl(Composite parent) {

        fileDialog = new FileDialog(PlatformUI.getWorkbench().getActiveWorkbenchWindow().getShell(), SWT.OPEN);
        fileDialog.setText(Messages.SystemTapScriptLaunchConfigurationTab_selectScript);
        fileDialog.setFilterPath(Platform.getLocation().toOSString());

        GridLayout layout = new GridLayout();
        Composite top = new Composite(parent, SWT.NONE);
        setControl(top);
        top.setLayout(layout);
        top.setLayoutData( new GridData(SWT.FILL, SWT.FILL, true, true));

        // Script path
        Group scriptSettingsGroup = new Group(top, SWT.SHADOW_ETCHED_IN);
        scriptSettingsGroup.setText(Messages.SystemTapScriptLaunchConfigurationTab_script);
        scriptSettingsGroup.setLayoutData( new GridData(SWT.FILL, SWT.FILL, true, false));
        layout = new GridLayout();
        layout.numColumns = 2;
        scriptSettingsGroup.setLayout(layout);
        scriptPathText = new Text(scriptSettingsGroup,  SWT.SINGLE | SWT.BORDER);
        scriptPathText.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true));
        scriptPathText.addModifyListener(new ModifyListener() {
            @Override
            public void modifyText(ModifyEvent e) {
                updateLaunchConfigurationDialog();
            }
        });
        Button selectScriptButon = new Button(scriptSettingsGroup, 0);
        GridData gridData = new GridData();
        gridData.widthHint = 110;
        selectScriptButon.setLayoutData(gridData);
        selectScriptButon.setText(Messages.SystemTapScriptLaunchConfigurationTab_browse);
        selectScriptButon.addSelectionListener(new SelectionListener() {

            @Override
            public void widgetSelected(SelectionEvent e) {
                String path = fileDialog.open();
                if (path != null) {
                    scriptPathText.setText(path);
                }
            }

            @Override
            public void widgetDefaultSelected(SelectionEvent e) {
            }
        });

        // User Settings
        Group userSettingsGroup = new Group(top, SWT.SHADOW_ETCHED_IN);
        layout = new GridLayout();
        userSettingsGroup.setLayout(layout);
        layout.numColumns = 2;
        userSettingsGroup.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, false));

        currentUserCheckButton = new Button(userSettingsGroup, SWT.CHECK);
        currentUserCheckButton.setText(Messages.SystemTapScriptLaunchConfigurationTab_currentUser);
        currentUserCheckButton.setSelection(true);
        gridData = new GridData();
        gridData.horizontalSpan = 2;
        currentUserCheckButton.setLayoutData(gridData);
        currentUserCheckButton.addSelectionListener(checkListener);

        userNameLabel = new Label(userSettingsGroup, SWT.NONE);
        userNameLabel.setText(Messages.SystemTapScriptLaunchConfigurationTab_username);
        userNameText = new Text(userSettingsGroup, SWT.SINGLE | SWT.BORDER);
        userNameText.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, false));

        userPasswordLabel = new Label(userSettingsGroup, SWT.NONE);
        userPasswordLabel.setText(Messages.SystemTapScriptLaunchConfigurationTab_password);
        userPasswordText = new Text(userSettingsGroup, SWT.SINGLE | SWT.BORDER | SWT.PASSWORD);
        userPasswordText.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, false));

        userSettingsGroup.setLayoutData( new GridData(SWT.FILL, SWT.FILL, true, false));
        userSettingsGroup.setText(Messages.SystemTapScriptLaunchConfigurationTab_user);

        userNameText.addModifyListener(new ModifyListener() {
            @Override
            public void modifyText(ModifyEvent e) {
                updateLaunchConfigurationDialog();
            }
        });

        userPasswordText.addModifyListener(new ModifyListener() {
            @Override
            public void modifyText(ModifyEvent e) {
                updateLaunchConfigurationDialog();
            }
        });

        // Host settings
        hostSettingsGroup = new Group(top, SWT.SHADOW_ETCHED_IN);
        hostSettingsGroup.setLayoutData( new GridData(SWT.FILL, SWT.FILL, true, false));
        hostSettingsGroup.setText(Messages.SystemTapScriptLaunchConfigurationTab_host);
        layout = new GridLayout();
        hostSettingsGroup.setLayout(layout);
        layout.numColumns = 2;

        localHostCheckButton = new Button(hostSettingsGroup, SWT.CHECK);
        localHostCheckButton.setText(Messages.SystemTapScriptLaunchConfigurationTab_runLocally);
        gridData = new GridData();
        gridData.horizontalSpan = 2;

        hostNameLabel = new Label(hostSettingsGroup, SWT.NONE);
        hostNameLabel.setText(Messages.SystemTapScriptLaunchConfigurationTab_hostname);
        hostNameText = new Text(hostSettingsGroup, SWT.SINGLE | SWT.BORDER);
        hostNameText.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, false));
        localHostCheckButton.setLayoutData(gridData);
        localHostCheckButton.addSelectionListener(checkListener);
        hostNameText.addModifyListener(new ModifyListener() {
            @Override
            public void modifyText(ModifyEvent e) {
                updateLaunchConfigurationDialog();
            }
        });

        portCheckButton = new Button(hostSettingsGroup, SWT.CHECK);
        portCheckButton.setText(Messages.SystemTapScriptLaunchConfigurationTab_useDefaultPort);
        gridData = new GridData();
        gridData.horizontalSpan = 2;
        portCheckButton.setLayoutData(gridData);
        portCheckButton.addSelectionListener(checkListener);

        portLabel = new Label(hostSettingsGroup, SWT.NONE);
        portLabel.setText(Messages.SystemTapScriptLaunchConfigurationTab_port);
        portText = new Text(hostSettingsGroup, SWT.SINGLE | SWT.BORDER);
        portText.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, false));
        portText.setTextLimit(5);
        portText.addVerifyListener(new VerifyListener() {
            @Override
            public void verifyText(VerifyEvent e) {
                if (e.keyCode == SWT.BS) {
                    return;
                }
                for (int i = 0, n = e.text.length(); i < n; i++) {
                    if (!Character.isDigit(e.text.charAt(i))) {
                        e.doit = false;
                        return;
                    }
                }
            }
        });
        portText.addModifyListener(new ModifyListener() {
            @Override
            public void modifyText(ModifyEvent e) {
                updateLaunchConfigurationDialog();
            }
        });
    }

