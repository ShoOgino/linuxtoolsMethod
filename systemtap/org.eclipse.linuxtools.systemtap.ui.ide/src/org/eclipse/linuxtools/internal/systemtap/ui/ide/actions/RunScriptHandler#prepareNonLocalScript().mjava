	/**
	 * Attempts to set up a channel for a script that runs on a non-local host or user.
	 * @return <code>true</code> on success, <code>false</code> on failure.
	 * @throws ExecutionException If failure occurs during a (non-simple) launch,
	 * this will throw an exception instead of returning <code>false</code>.
	 */
	private boolean prepareNonLocalScript() throws ExecutionException {
		try {
			ScpClient scpclient = new ScpClient(remoteOptions);
			serverfileName = fileName.substring(fileName.lastIndexOf('/')+1);
			tmpfileName="/tmp/"+ serverfileName; //$NON-NLS-1$
			scpclient.transfer(fileName,tmpfileName);
		} catch (final JSchException | IOException e) {
			final String message = e instanceof JSchException ? Localization.getString("RunScriptHandler.checkCredentials") //$NON-NLS-1$
					: Localization.getString("RunScriptHandler.ioError"); //$NON-NLS-1$
			if (launch == null) {
				Display.getDefault().asyncExec(new Runnable() {
					@Override
					public void run() {
						if (e instanceof JSchException) {
							ErrorDialog.openError(PlatformUI.getWorkbench()
									.getActiveWorkbenchWindow().getShell(),
									Localization.getString("RunScriptHandler.serverError"), Localization.getString("RunScriptHandler.serverError"), //$NON-NLS-1$ //$NON-NLS-2$
									new Status(IStatus.ERROR, IDEPlugin.PLUGIN_ID, message));
						} else {
							ExceptionErrorDialog.openError(Localization.getString("RunScriptHandler.ioError"), e); //$NON-NLS-1$
						}
					}
				});
				return false;
			} else {
				throw new ExecutionException(message, e);
			}
		}
		return true;
	}

