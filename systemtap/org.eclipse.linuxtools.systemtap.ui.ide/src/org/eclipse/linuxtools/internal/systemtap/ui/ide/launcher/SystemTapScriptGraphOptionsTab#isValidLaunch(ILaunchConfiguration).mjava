	/**
	 * Checks if a launch configuration's Systemtap Graphing settings are valid.
	 * @param launchConfig The launch configuration to check for graph validity.
	 * @return <code>true</code> if the launch settings are valid, or <code>false</code> if
	 * its graph settings are invalid in some way.
	 * @since 2.2
	 */
	public static boolean isValidLaunch(ILaunchConfiguration launchConfig) throws CoreException {
		// If graphic is disabled then everything is valid.
		if (!launchConfig.getAttribute(RUN_WITH_CHART, false)){
			return true;
		}

		for (int r = 0, n = launchConfig.getAttribute(NUMBER_OF_REGEXS, 1); r < n; r++) {
			// Check for any invalid regexs.
			String regex = launchConfig.getAttribute(REGULAR_EXPRESSION + r, (String) null);
			if (regex == null || checkRegex(regex) != null) {
				return false;
			}
			try {
				Pattern.compile(regex);
			} catch (PatternSyntaxException e) {
				return false;
			}

			// If graphs are plotted but no data is captured by one of them, report this as a problem.
			int numberOfColumns = launchConfig.getAttribute(NUMBER_OF_COLUMNS + r, 0);
			if (numberOfColumns == 0) {
				return false;
			}

			// Check for graphs that are missing required data.
			for (int i = 0, g = launchConfig.getAttribute(NUMBER_OF_GRAPHS + r, 0); i < g; i++) {
				if (GraphFactory.getGraphName(launchConfig.getAttribute(get2DConfigData(GRAPH_ID, r, i), (String) null)) == null) {
					return false;
				}
				if (launchConfig.getAttribute(get2DConfigData(GRAPH_X_SERIES, r, i), 0) >= numberOfColumns) {
					return false;
				}
				for (int j = 0, y = launchConfig.getAttribute(get2DConfigData(GRAPH_Y_SERIES_LENGTH, r, i), 0); j < y; j++) {
					if (launchConfig.getAttribute(get2DConfigData(GRAPH_Y_SERIES, r, i + "_" + j), 0) >= numberOfColumns) { //$NON-NLS-1$
						return false;
					}
				}
			}
		}

		return true;
	}

