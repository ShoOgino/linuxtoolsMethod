	/**
	 * Reads the contents of the cache file into memory.
	 * @return True if the read is successful.
	 */
	private static boolean readData() {
		if (null == settingsFile && !openFile()) {
			return false;
		}

		try (FileReader reader = new FileReader(settingsFile)) {
			if(!reader.ready()) {
				reader.close();
				return false;
			}

			XMLMemento data = XMLMemento.createReadRoot(reader, "TreeSettings"); //$NON-NLS-1$

			IMemento child = data.getChild("functionTree"); //$NON-NLS-1$
			String s = child.getString("string"); //$NON-NLS-1$
			if ("<null>".equals(s)) { //$NON-NLS-1$
				s = null;
			}
			String d = child.getString("data"); //$NON-NLS-1$
			if ("<null>".equals(d)) { //$NON-NLS-1$
				d = null;
			}

			functions = new TreeNode(d, s, false);
			readTree(child, functions, 0);

			child = data.getChild("probeTree"); //$NON-NLS-1$
			s = child.getString("string"); //$NON-NLS-1$
			if ("<null>".equals(s)) { //$NON-NLS-1$
				s = null;
			}
			d = child.getString("data"); //$NON-NLS-1$
			if ("<null>".equals(d)) { //$NON-NLS-1$
				d = null;
			}
			probes = new TreeNode(d, s, false);
			readTree(child, probes, 0);

			child = data.getChild("modifiedDate"); //$NON-NLS-1$
			treeFileDate = Long.parseLong(child.getString("date")); //$NON-NLS-1$
		} catch(IOException|WorkbenchException fnfe) {
			return false;
		}

		return true;
	}

