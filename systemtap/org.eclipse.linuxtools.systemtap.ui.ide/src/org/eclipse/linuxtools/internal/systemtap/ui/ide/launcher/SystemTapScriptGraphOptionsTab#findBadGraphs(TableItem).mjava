	private void findBadGraphs(TableItem itemToCheck){
		TableItem[] items = {itemToCheck};
		if (itemToCheck == null) {
			items = graphsTable.getItems();
		}
		if (items.length == 0){
			badGraphs.clear();
			return;
		}
		for (TableItem item : items){
			GraphData gd = (GraphData) item.getData();
			boolean removed = false;
			if (gd.xSeries >= this.numberOfVisibleColumns){
				removed = true;
			}
			for (int s = 0; s < gd.ySeries.length && !removed; s++){
				if (gd.ySeries[s] >= this.numberOfVisibleColumns){
					removed = true;
				}
			}

			if (removed){
				if (!badGraphs.contains(item)){
					badGraphs.add(item);
					markGraphTableItem(item, true);
				}
			}else if (badGraphs.contains(item)){
				badGraphs.remove(item);
				markGraphTableItem(item, false);
			}
		}
	}

