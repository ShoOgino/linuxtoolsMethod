	/**
	 * Returns <code>true</code> if the document, when scanned backwards from <code>start</code>
	 * appears to contain a field reference, i.e. a (optional) name preceded by a <code>.</code> 
	 * or <code>-&gt;</code> or <code>::</code>.
	 * 
	 * @param start the position after the field reference operator.
	 * @param bound the first position in <code>fDocument</code> to not consider any more, with
	 *        <code>bound</code> &lt; <code>start</code>, or <code>UNBOUND</code>
	 * @return <code>true</code> if the current position looks like a field reference
	 */
	public boolean looksLikeFieldReferenceBackward(int start, int bound) {
		int token= previousToken(start - 1, bound);
		if (token == STPSymbols.TokenIDENT) { // field name
			token= previousToken(getPosition(), bound);
		}
		if (token == STPSymbols.TokenDOT) {
			return true;
		}
		if (token == STPSymbols.TokenARROW) {
			return true;
		} else if (token == STPSymbols.TokenDOUBLECOLON) {
			return true;
		}
		return false;
	}

