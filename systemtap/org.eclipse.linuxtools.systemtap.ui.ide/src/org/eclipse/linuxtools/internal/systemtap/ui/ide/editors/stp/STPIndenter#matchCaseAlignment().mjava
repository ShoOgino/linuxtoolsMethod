	/**
	 * Returns as a reference any previous <code>switch</code> labels (<code>case</code>
	 * or <code>default</code>) or the offset of the brace that scopes the switch
	 * statement. Sets <code>fIndent</code> to <code>prefCaseIndent</code> upon
	 * a match.
	 *
	 * @return the reference offset for a <code>switch</code> label
	 */
	private int matchCaseAlignment() {
		while (true) {
			nextToken();
			switch (fToken) {
			// invalid cases: another case label or an LBRACE must come before a case
			// -> bail out with the current position
			case STPSymbols.TokenLPAREN:
			case STPSymbols.TokenLBRACKET:
			case STPSymbols.TokenEOF:
				return fPosition;

			case STPSymbols.TokenSWITCH:
				// start of switch statement
				fIndent= fPrefs.prefCaseIndent;
				return fPosition;

			case STPSymbols.TokenCASE:
			case STPSymbols.TokenDEFAULT:
				// align with previous label
				fIndent= 0;
				return fPosition;

			// scopes: skip them
			case STPSymbols.TokenRPAREN:
			case STPSymbols.TokenRBRACKET:
			case STPSymbols.TokenRBRACE:
				skipScope();
				break;

			default:
				// keep searching
				continue;
			}
		}
	}

