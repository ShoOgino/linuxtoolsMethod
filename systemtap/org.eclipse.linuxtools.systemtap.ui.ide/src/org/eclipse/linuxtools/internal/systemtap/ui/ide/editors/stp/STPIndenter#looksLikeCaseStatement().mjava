	/**
	 * Test whether the colon at the current position marks a case statement
	 *
	 * @return <code>true</code> if this looks like a case statement
	 */
	private boolean looksLikeCaseStatement() {
		nextToken();
		switch (fToken) {
		case STPSymbols.TokenCASE:
			// char literal got skipped
			return true;
		case STPSymbols.TokenIDENT:
			nextToken();
			while (skipQualifiers()) {
				nextToken();
			}
			while (fToken == STPSymbols.TokenMINUS || fToken == STPSymbols.TokenPLUS) {
				nextToken();
			}
			if (fToken == STPSymbols.TokenCASE) {
				return true;
			}
			break;
		case STPSymbols.TokenOTHER:
			nextToken();
			if (fToken == STPSymbols.TokenCASE) {
				return true;
			}
			break;
		case STPSymbols.TokenDEFAULT:
			return true;
		}
		return false;
	}

