    /**
     * Runs stap to obtain a log of all static probes, and populate the probe tree with them.
     * @return An {@link IStatus} severity level for the result of the operation.
     */
    private int addStaticProbes(IProgressMonitor monitor) {
        TreeNode statics = new TreeNode(Messages.ProbeParser_staticProbes, false);
        tree.add(statics);
        if (monitor.isCanceled()) {
            return IStatus.CANCEL;
        }

        String probeDump = runStap(new String[]{"--dump-probe-types"}, null, false); //$NON-NLS-1$
        int result = verifyRunResult(probeDump);
        if (result != IStatus.OK) {
            return result;
        }

        boolean canceled = false;
        try (Scanner st = new Scanner(probeDump)) {
            TreeNode groupNode = null;
            while (st.hasNextLine()) {
                if (monitor.isCanceled()) {
                    canceled = true;
                    break;
                }
                String tokenString = st.nextLine();
                String probeName = (new StringTokenizer(tokenString)).nextToken();
                groupNode = addOrFindProbeGroup(extractProbeGroupName(probeName), groupNode, statics);
                groupNode.add(makeStaticProbeNode(probeName));
            }
        }
        statics.sortTree();
        return !canceled ? IStatus.OK : IStatus.CANCEL;
    }

