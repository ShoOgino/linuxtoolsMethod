	/**
	 * Appends whitespace to given buffer such that its visual length equals the given width.
	 * @param buffer  the buffer to add whitespace to
	 * @param width  the desired visual indent width
	 * @param tabWidth  the configured tab width
	 * @param useSpaces  whether tabs should be substituted by spaces
	 * @param startColumn  the column where to start measurement
	 * @return StringBuilder
	 */
	private static StringBuilder appendIndent(StringBuilder buffer, int width, int tabWidth, boolean useSpaces, int startColumn) {
		assert tabWidth > 0;
		int tabStop = startColumn - startColumn % tabWidth;
		int tabs = useSpaces ? 0 : (width-tabStop) / tabWidth;
		for (int i = 0; i < tabs; ++i) {
			buffer.append('\t');
			tabStop += tabWidth;
			startColumn = tabStop;
		}
		int spaces = width - startColumn;
		for (int i = 0; i < spaces; ++i) {
			buffer.append(' ');
		}
		return buffer;
	}

