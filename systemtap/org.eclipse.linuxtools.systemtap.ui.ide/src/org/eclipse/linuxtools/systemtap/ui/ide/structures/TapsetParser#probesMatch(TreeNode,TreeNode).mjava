	/**
	 * Compares the probes contained in the treeNodes to make sure they
	 * are actually probing the same kernel location.
	 * @param one A treeNode generated from stap -p1.
	 * @param two A treeNode generated from stap -up2.
	 * @return A boolean signifing if the treeNodes represent the same probe point.
	 */
	private boolean probesMatch(TreeNode one, TreeNode two) {
		try {
			String valOneA = one.getData().toString();
			String valTwoA = two.getData().toString();
			String valOneB = "";
			String valTwoB = valTwoA.substring(valTwoA.indexOf("\"")+1, valTwoA.indexOf("@"));
	
			if(valOneA.contains("\""))
				valOneB = valOneA.substring(valOneA.indexOf("\"")+1);
			if(valOneB.contains("\""))
				valOneB = valOneB.substring(0, valOneB.indexOf("\""));
	
			if(valOneB.equals(valTwoB)) {
				if(valOneA.contains(".return") == valTwoA.contains(".return"))
					return true;
			}
		} catch(Exception e) {
			LogManager.logCritical("Exception probesMatch: " + e.getMessage() + "\n" + one + "\n" + two, this); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
		}
		return false;
	}

