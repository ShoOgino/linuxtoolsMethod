	/**
	 * This method prompts the user to select optional command line arguments to use when running this
	 * script, and adds them to the <code>ArrayList</code> passed in.
	 * @param cmdList The <code>ArrayList</code> to add the arguments to.
	 */
	protected void getCommandLineOptions(ArrayList<String> cmdList) {
		StapSettingsDialog ssd = new StapSettingsDialog(PlatformUI.getWorkbench().getActiveWorkbenchWindow().getShell());
		ssd.open();

		boolean[] cmdOpts = ssd.getStapOpts();
		String[] cmdOptVals = ssd.getStapOptVals();

		if((null != cmdOpts) && (null != cmdOptVals)) {
			int i;
			//Get commandline check options
			for(i=0; i<cmdOpts.length; i++) {
				if(cmdOpts[i])
					cmdList.add(IDEPreferenceConstants.P_STAP[i][0]);
			}

			//Get rest of commandline options
			for(i=0; i<cmdOptVals.length; i++) {
				if(null != cmdOptVals[i] && cmdOptVals[i].trim().length() > 0) {
					if("-v".equals(IDEPreferenceConstants.P_STAP[i+cmdOpts.length][0])) { //$NON-NLS-1$
						cmdList.add("-" + cmdOptVals[i]); //$NON-NLS-1$
					} else if("-p NUM".equals(IDEPreferenceConstants.P_STAP[i+cmdOpts.length][0])) { //$NON-NLS-1$
						cmdList.add("-p" + cmdOptVals[i]); //$NON-NLS-1$
					} else {
						cmdList.add(IDEPreferenceConstants.P_STAP[i+cmdOpts.length][0].substring(0,2));

						cmdList.add(cmdOptVals[i-cmdOpts.length]);
					}
				}
			}
		} else
			continueRun = false;
	}

