	private IStatus loadData(IProgressMonitor mon) {
		IProgressMonitor monitor = mon;
		if (mon == null)
			monitor = new NullProgressMonitor();

		
		/*
		 *                Load graph data
		 */
		g.loadData(SWT.NONE, 0, StapGraph.CONSTANT_TOP_NODE_NAME, 1, 1, -1, false, ""); //$NON-NLS-1$
		boolean marked = false;
		String msg = ""; //$NON-NLS-1$
		
		
	    for (int id_parent : parser.serialMap.keySet()) {
	    	if (id_parent < lastNodeChecked)
	    		continue;
	    	lastNodeChecked = id_parent;
	    	if (g.getNodeData(id_parent) == null) {
				if (parser.markedMap.get(id_parent) != null) {
					marked = true;
					msg = parser.markedMap.get(id_parent);
				}
	    		g.loadData(SWT.NONE, id_parent, parser.serialMap.get(id_parent), parser.timeMap.get(id_parent),
	    				1, 0, marked, msg);
	    	}
	    	
			for (int id_child : parser.outNeighbours.get(id_parent)) {
				
				if (monitor.isCanceled()) {
					return Status.CANCEL_STATUS;
				}
				
				marked = false;
				msg = ""; //$NON-NLS-1$
				if (parser.markedMap.get(id_child) != null) {
					marked = true;
					msg = parser.markedMap.get(id_child);
				}
				if (id_child != -1) {
					if (parser.timeMap.get(id_child) == null){						
						g.loadData(SWT.NONE, id_child, parser.serialMap
								.get(id_child), parser.timeMap.get(0),
								1, id_parent, marked,msg);
					}else{
						g.loadData(SWT.NONE, id_child, parser.serialMap
								.get(id_child), parser.timeMap.get(id_child),
								1, id_parent, marked,msg);
					}
				}
			}
			
		}
	    return Status.OK_STATUS;
	}

