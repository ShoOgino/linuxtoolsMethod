	private void parseEnd() {

		
		//CHECK FOR EXIT() CALL
		if (idList.size() > 1) {
			for (int val : idList){
				String name = serialMap.get(val);
				long time =  endingTimeInNS - timeMap.get(val);
				timeMap.put(val, time);
				if (val == firstNode)
					showTime(val, time);
				if (shouldGetEndingTimeForID.contains(val)){
					long cumulativeTime = aggregateTimeMap.get(name) + endingTimeInNS;
					aggregateTimeMap.put(name, cumulativeTime);
				}
				
				lastFunctionCalled = val;
			}
			String tmp = markedMap.get(lastFunctionCalled);
			if (tmp == null) tmp = ""; //$NON-NLS-1$
			markedMap.put(lastFunctionCalled, 
					tmp + "\n" + Messages.getString("StapGraphParser.16")); //$NON-NLS-1$ //$NON-NLS-2$
		}
		
		
		//timecheck is true if the total execution time is less than 10ms
		//and the first function is more than 1% off from the total time.
		boolean timeCheck = totalTime < 50000000 && 
							(((float)timeMap.get(firstNode)/totalTime) > 1.01 ||
							((float)timeMap.get(firstNode)/totalTime) < 0.99);

		/*
		 * Indicate whether or not we had to manipulate total time, and why
		 */
		if (skippedDirectives || timeCheck) {
			totalTime = timeMap.get(firstNode);
			String markedMessage = ""; //$NON-NLS-1$
			if (markedMap.containsKey(firstNode)) {
				markedMessage = markedMap.get(firstNode) + "\n"; //$NON-NLS-1$
			}
			if (skippedDirectives)
				markedMessage += Messages.getString("StapGraphParser.19"); //$NON-NLS-1$
			if (timeCheck)
				markedMessage += Messages.getString("StapGraphParser.20"); //$NON-NLS-1$
			
			markedMessage += Messages.getString("StapGraphParser.21"); //$NON-NLS-1$
			
			markedMap.put(firstNode, markedMessage);
		}
	}

