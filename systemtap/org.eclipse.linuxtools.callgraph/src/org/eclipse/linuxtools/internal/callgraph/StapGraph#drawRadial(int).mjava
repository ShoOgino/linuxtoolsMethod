    /**
     * Draws a 2-node-layer circle Draws all nodes in place.
     *
     * @param centerNode
     */
    private void drawRadial(int centerNode) {
        int radius = Math.max(CONSTANT_VERTICAL_INCREMENT,
                Math.min(this.getBounds().width, this.getBounds().height) / 2
                        - 2 * CONSTANT_VERTICAL_INCREMENT);

        rootVisibleNodeNumber = centerNode;
        StapData nodeData = getNodeData(centerNode);
        int collapsed = nodeData.getPartOfCollapsedNode();
        if (!nodeData.isCollapsed
                && collapsed != StapData.NOT_PART_OF_COLLAPSED_NODE) {
            nodeData = getNodeData(collapsed);
        }
        treeViewer.expandToLevel(nodeData, 0);
        treeViewer.setSelection(new StructuredSelection(nodeData));

        if (nodeMap.get(centerNode) == null) {
            nodeMap.put(centerNode, getNodeData(centerNode).makeNode(this));
        }

        // Draw node in center
        StapNode n = nodeMap.get(centerNode);
        int x = this.getBounds().width / 2 - n.getSize().width / 2;
        int y = this.getBounds().height / 2;
        n.setLocation(x, y);

        if (getNodeData(centerNode).isMarked()) {
            nodeMap.get(centerNode).setBackgroundColor(CONSTANT_MARKED);
        }
        radialHelper(centerNode, x, y, radius);
    }

