	/**
	 * The action has been activated. The argument of the method represents the
	 * 'real' action sitting in the workbench UI.
	 * 
	 * @see IWorkbenchWindowActionDelegate#run
	 */
	@Override
	public void run(IAction action) {
		IWorkbenchPage page = window.getActivePage();
		IEditorPart part = page.getActiveEditor();
		if (!(part instanceof AbstractTextEditor))
			return;
		ITextEditor editor = (ITextEditor) part;
		IDocumentProvider dp = editor.getDocumentProvider();
		IDocument doc = dp.getDocument(editor.getEditorInput());

		StyledText st = (StyledText) editor.getAdapter(Control.class);

		try {
			int offset = st.getCaretOffset();
			doc.replace(offset, 0, "if (true) { //STAPSTAPSTAP\n" + //$NON-NLS-1$
				"\tchar* stapMarker = new char[20]; //STAPSTAPSTAP\n" + //$NON-NLS-1$
				"\tsprintf(stapMarker, \"\"); //STAPSTAPSTAP\n" + //$NON-NLS-1$
				// "\tprintf(\"%s\\n\", stapMarker); //STAPSTAPSTAP\n"
				// +
				"\t___STAP_MARKER___(stapMarker); //STAPSTAPSTAP\n\t} //STAPSTAPSTAP\n"); //$NON-NLS-1$
			st.setCaretOffset(offset + 68);
		} catch (BadLocationException e1) {
			e1.printStackTrace();
		}
		// TODO: if this is too slow, fix
		if (!doc.get().contains(SYSTEMTAP_MARKER_INSERTED)) {
			try {
				int offset;
				offset = doc.getLineOffset(0);
				String output = SYSTEMTAP_MARKER_INSERTED;

				doc.replace(offset, 0, output);
			} catch (org.eclipse.jface.text.BadLocationException e) {
				e.printStackTrace();
			}
		}
	}

