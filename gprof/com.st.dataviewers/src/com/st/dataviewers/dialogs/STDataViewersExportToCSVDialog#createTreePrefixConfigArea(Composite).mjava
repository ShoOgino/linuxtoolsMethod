	private void createTreePrefixConfigArea(Composite composite) {
		Group prefixConfigGroup = new Group(composite, SWT.NONE);
		prefixConfigGroup.setText("Tree ascii-art drawing");
		GridData layoutData = new GridData(SWT.FILL, SWT.FILL, true, true, 1, 1);
		prefixConfigGroup.setLayoutData(layoutData);
        GridLayout layout = new GridLayout(5, false);
        prefixConfigGroup.setLayout(layout);
		
        exportTreePrefixButton = new Button(prefixConfigGroup, SWT.CHECK);
	    exportTreePrefixButton.setText("Export ascii-art tree");
	    exportTreePrefixButton.addSelectionListener(updatePreviewSelectionListener);
	    exportTreePrefixButton.addSelectionListener(
    		new SelectionListener() {
				public void widgetDefaultSelected(SelectionEvent e) {
					widgetSelected(e);
				}
				
				public void widgetSelected(SelectionEvent e) {
					boolean enabled = exportTreePrefixButton.getSelection();
					enableTreePrefixText(enabled);
				}
    		}
        );
        layoutData = new GridData(SWT.FILL, SWT.FILL, false, false, 2, 1);
        exportTreePrefixButton.setLayoutData(layoutData);
        
        Label blankLabel = new Label(prefixConfigGroup, SWT.NONE);
        blankLabel.setText("");
        layoutData = new GridData(SWT.LEFT, SWT.CENTER, false, false, 3, 1);
        blankLabel.setLayoutData(layoutData);
        
		childLinkLabel = new Label(prefixConfigGroup, SWT.NONE);
		childLinkLabel.setText("Child Link:");
        layoutData = new GridData(SWT.LEFT, SWT.CENTER, false, false, 1, 1);
        childLinkLabel.setLayoutData(layoutData);
		
		childLinkText = new Text(prefixConfigGroup, SWT.BORDER);
		childLinkText.setFont(JFaceResources.getTextFont());
		childLinkText.addModifyListener(updatePreviewModifyListener);
		layoutData = new GridData(SWT.FILL, SWT.FILL, true, false, 1, 1);
		childLinkText.setLayoutData(layoutData);
		
		Label separator = new Label(prefixConfigGroup, SWT.SEPARATOR | SWT.VERTICAL);
		layoutData = new GridData(SWT.CENTER, SWT.FILL, false, true, 1, 3);
		separator.setLayoutData(layoutData);
		
		noChildLinkLabel = new Label(prefixConfigGroup, SWT.NONE);
		noChildLinkLabel.setText("No-child Link:");
        layoutData = new GridData(SWT.LEFT, SWT.CENTER, false, false, 1, 1);
        noChildLinkLabel.setLayoutData(layoutData);
        
		noChildLinkText = new Text(prefixConfigGroup, SWT.BORDER);
		noChildLinkText.setFont(JFaceResources.getTextFont());
		noChildLinkText.addModifyListener(updatePreviewModifyListener);
		layoutData = new GridData(SWT.FILL, SWT.FILL, true, false, 1, 1);
		noChildLinkText.setLayoutData(layoutData);
		
		childMarkerLabel = new Label(prefixConfigGroup, SWT.NONE);
		childMarkerLabel.setText("Child Marker:");
        layoutData = new GridData(SWT.LEFT, SWT.CENTER, false, false, 1, 1);
        childMarkerLabel.setLayoutData(layoutData);
		
		childMarkerText = new Text(prefixConfigGroup, SWT.BORDER);
		childMarkerText.setFont(JFaceResources.getTextFont());
		childMarkerText.addModifyListener(updatePreviewModifyListener);
		layoutData = new GridData(SWT.FILL, SWT.FILL, true, false, 1, 1);
		childMarkerText.setLayoutData(layoutData);
		
		lastChildMarkerLabel = new Label(prefixConfigGroup, SWT.NONE);
		lastChildMarkerLabel.setText("Last child Marker:");
        layoutData = new GridData(SWT.LEFT, SWT.CENTER, false, false, 1, 1);
        lastChildMarkerLabel.setLayoutData(layoutData);
		
		lastChildMarkerText = new Text(prefixConfigGroup, SWT.BORDER);
		lastChildMarkerText.setFont(JFaceResources.getTextFont());
		lastChildMarkerText.addModifyListener(updatePreviewModifyListener);
		layoutData = new GridData(SWT.FILL, SWT.FILL, true, false, 1, 1);
		lastChildMarkerText.setLayoutData(layoutData);
		
		leafMarkerLabel = new Label(prefixConfigGroup, SWT.NONE);
		leafMarkerLabel.setText("Leaf Marker:");
        layoutData = new GridData(SWT.LEFT, SWT.CENTER, false, false, 1, 1);
        leafMarkerLabel.setLayoutData(layoutData);
		
		leafMarkerText = new Text(prefixConfigGroup, SWT.BORDER);
		leafMarkerText.setFont(JFaceResources.getTextFont());
		leafMarkerText.addModifyListener(updatePreviewModifyListener);
		layoutData = new GridData(SWT.FILL, SWT.FILL, true, false, 1, 1);
		leafMarkerText.setLayoutData(layoutData);
		
		nodeMarkerLabel = new Label(prefixConfigGroup, SWT.NONE);
		nodeMarkerLabel.setText("Non-leaf Marker:");
        layoutData = new GridData(SWT.LEFT, SWT.CENTER, false, false, 1, 1);
        nodeMarkerLabel.setLayoutData(layoutData);
		
		nodeMarkerText = new Text(prefixConfigGroup, SWT.BORDER);
		nodeMarkerText.setFont(JFaceResources.getTextFont());
		nodeMarkerText.addModifyListener(updatePreviewModifyListener);
		layoutData = new GridData(SWT.FILL, SWT.FILL, true, false, 1, 1);
		nodeMarkerText.setLayoutData(layoutData);
	}

