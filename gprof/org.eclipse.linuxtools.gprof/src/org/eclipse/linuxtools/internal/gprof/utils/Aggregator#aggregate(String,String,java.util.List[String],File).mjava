    /**
     * Aggregates the given gmon files in the given directory
     *
     * @param gprof2use
     *            typically gprof, but can be something else (cross-development tools like sh4gprof, st200gprof, ...)
     * @param binaryFile
     * @param gmons
     * @param directory
     * @return the location of generated gmon.sum
     */
    public static File aggregate(String gprof2use, String binaryFile, java.util.List<String> gmons, File directory) {
        String[] cmd = new String[gmons.size() + 3];
        cmd[0] = gprof2use;
        cmd[1] = "-s"; //$NON-NLS-1$
        cmd[2] = binaryFile;
        int i = 3;
        for (String string : gmons) {
            cmd[i++] = string;
        }
        String errorMessage = null;
        try {
            final Process p = ProcessFactory.getFactory().exec(cmd, null, directory);
            ProcessReader pr = new ProcessReader(p);
            pr.start();
            int ret = p.waitFor();
            if (ret != 0) {
                errorMessage = Messages.Aggregator_ERROR_COMMON_PREFIX;
                errorMessage += pr.errorMessage;

            }
        } catch (Exception e) {
            errorMessage = Messages.Aggregator_ERROR_COMMON_PREFIX;
            errorMessage += e.getMessage();
        }
        File ret = new File(directory, "gmon.sum"); //$NON-NLS-1$
        if (!ret.isFile() && errorMessage == null) {
            errorMessage = Messages.Aggregator_ERROR_COMMON_PREFIX;
            errorMessage += ret.getName();
            errorMessage += Messages.Aggregator_NOT_FOUND;
        }

        if (errorMessage != null) {
            final String finalErrorMessage = errorMessage;
            PlatformUI.getWorkbench().getDisplay().asyncExec(() -> MessageDialog.openError(PlatformUI.getWorkbench().getActiveWorkbenchWindow().getShell(),
			        Messages.Aggregator_GPROF_ERROR, finalErrorMessage));
            return null;
        }
        return ret;
    }

