	/**
	 * Display gmon results in the GProf View.
	 * NOTE: this method has to be called from within the UI thread.
	 * @param decoder
	 * @param secondary_id_usually_path_to_gmon_file
	 */
	public static GmonView displayGprofView(GmonDecoder decoder, String secondary_id_usually_path_to_gmon_file) {
		GmonView gmonview = null;
		try{
			IWorkbenchWindow window = PlatformUI.getWorkbench().getActiveWorkbenchWindow();
			IWorkbenchPage page = window.getActivePage();
			if (secondary_id_usually_path_to_gmon_file != null) {
				secondary_id_usually_path_to_gmon_file = secondary_id_usually_path_to_gmon_file.replace('.', '_');
				secondary_id_usually_path_to_gmon_file = secondary_id_usually_path_to_gmon_file.replace(':', '_');
			}
			gmonview = (GmonView) page.showView(ID,secondary_id_usually_path_to_gmon_file, IWorkbenchPage.VIEW_ACTIVATE);
			if (decoder.getHistogramDecoder().getProf_rate() == 0){
				gmonview.switchSampleTime.setToolTipText("Unable to display time, because profiling rate is null"); //$NON-NLS-1$
				gmonview.switchSampleTime.setEnabled(false);
			}
			gmonview.setInput(decoder);
			GmonView.setHistTitle(decoder, gmonview.label);
			if (!decoder.getHistogramDecoder().hasValues()) {
				gmonview.action1.setChecked(true);
				gmonview.action2.setChecked(false);
				gmonview.action1.run();
			}
		} catch(CoreException e) {
			Status status = new Status(
					IStatus.ERROR,
					Activator.PLUGIN_ID,
					IStatus.ERROR,
					e.getMessage(),
					e
			);
			Activator.getDefault().getLog().log(status);
		}
		return gmonview;
	}

