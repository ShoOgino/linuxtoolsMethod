	/**
	 * Parse the perl Makefile.
	 *
	 */
	public void parse() {
		String content = "";
		String line = "";
		try {
			Scanner variableScanner = new Scanner(file.getContents());
			grabSimpleDefinitions(cleanUpContent(variableScanner));
			cleanupVariables(mVariableDefinitions);
			resolveVariables(mVariableDefinitions);

			/*
			 * Going through the makefile function's attributes
			 */
			if (!mVariableDefinitions.containsKey(MAKEFILE_FUNCTION_NAME)) {
				return;
			}
			Scanner makefileScanner = new Scanner(
					mVariableDefinitions.get(MAKEFILE_FUNCTION_NAME));
			makefileScanner.useDelimiter("(?<=,)");
			ArrayList<String> makefileList = new ArrayList<String>();

			while (makefileScanner.hasNext()) {
				line = makefileScanner.next();
				if (matchesAssociativeAssignment(line)) {
					makefileList.add(line);
				} else if (!makefileList.isEmpty()) {
					makefileList.set(
							makefileList.size() - 1,
							makefileList.get(makefileList.size() - 1).concat(
									line));
				}
			}

			for (String str : makefileList) {
				content = content.concat(str + '\n');
			}
			grabAssociativeDefinitions(content);
			cleanupVariables(mMakefileDefinitions);
			resolveVariables(mMakefileDefinitions);

			makefileScanner.close();
			variableScanner.close();
		} catch (Exception e) {
			StubbyLog.logError(e);
		}
	}

