	/**
	 * Generates a fetch script. The script is better suited for cvs for now.
	 * It lists all the plugins and features and tries to export them.
	 * @return The generated fetch script.
	 */
	public String generateFetchScript() {
		StringBuilder buffer = new StringBuilder();
		buffer.append("#!/bin/sh\n");
		buffer.append("usage='usage: $0 <tag>'\n");
		buffer.append("name=eclipse-" + getPackageName(mainPackage.getName())
				+ "\n");
		buffer.append("tag=$1\n");
		buffer.append("tar_name=$name-fetched-src-$tag\n\n");
		buffer.append("# example of fetch command:\n");
		buffer
				.append("# fetch_cmd=cvs -d:pserver:anonymous@dev.eclipse.org:/cvsroot/dsdp \\\n");
		buffer.append("# export -r $tag org.eclipse.tm.rse/features/$f;\n\n");
		buffer.append("fetch_cmd=FIXME\n\n");
		buffer.append("if [ \"x$tag\"x = 'xx' ]; then\n");
		buffer.append("   echo >&2 \"$usage\"\n");
		buffer.append("   exit 1\n");
		buffer.append("fi\n\n");
		buffer.append("rm -fr $tar_name && mkdir $tar_name\n");
		buffer.append("pushd $tar_name\n\n");
		buffer.append("# Fetch plugins\n");
		buffer.append("for f in \\\n");
		buffer.append(getProvidesBundlesString(mainPackage.getProvides()));
		HashSet<String> uniqueProvides = new HashSet<String>();
		for (SubPackage subPackage : subPackages) {
			uniqueProvides = getProvidesBundles(subPackage.getProvides(),
					uniqueProvides);
		}
		buffer.append(getProvidesBundlesString(uniqueProvides));
		buffer.append("; do\n");
		buffer.append("$fetch_cmd\n");
		buffer.append("done\n\n");
		buffer.append("popd\n");
		buffer.append("# create archive\n");
		buffer.append("tar -cjf $tar_name.tar.bz2 $tar_name\n");
		return buffer.toString();
	}

