	private void performCreateVM(String vmName, String boxRef, String vmFile,
			Map<String, String> environment) {
		final Job createVMJob = new Job(DVMessages.getFormattedString(CREATE_VM_MSG)) {
			@Override
			protected IStatus run(final IProgressMonitor monitor) {
				monitor.beginTask(DVMessages.getFormattedString(CRATE_VM_TITLE, vmName),
						IProgressMonitor.UNKNOWN);
				IVagrantConnection connection = VagrantService.getInstance();
				File vagrantDir;
				String boxName = boxRef;
				if (vmFile == null) {
					// The boxRef is a reference to an actual box file
					if (Paths.get(boxRef).toFile().canRead()) {
						try {
							String boxPath = boxRef;
							// Generate the box name from the file name (basename)
							boxName = boxRef.substring(
									boxRef.lastIndexOf(File.separator) + 1)
									.replace(".box", ""); //$NON-NLS-1$ //$NON-NLS-2$
							connection.addBox(boxName, boxPath);
						} catch (VagrantException e) {
						} catch (InterruptedException e) {
						}
					}

					// Init a new vagrant folder inside plugin metadata
					vagrantDir = performInit(vmName, boxName, connection);
				} else {
					vagrantDir = Paths.get(vmFile).getParent().toFile();
				}
				EnvironmentsManager.getSingleton().setEnvironment(vagrantDir,
						environment);
				IVagrantBox box = findBox(connection, boxName);
				String provider = (box == null ? null : box.getProvider());
				connection.up(vagrantDir, provider);
				connection.getVMs(true);
				return Status.OK_STATUS;
			}
		};
		createVMJob.setUser(true);
		createVMJob.schedule();
	}

