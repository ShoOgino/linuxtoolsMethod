	/*
	 * init the folder in this bundle's state location, and ensure the
	 * Vagrantfile has the proper vm name and box name
	 */
	private File performInit(String vmName, String boxName,
			IVagrantConnection connection) {
		String stateLoc = Activator.getDefault().getStateLocation()
				.toOSString();
		File vagrantDir = Paths.get(stateLoc, vmName).toFile();
		vagrantDir.mkdir();
		connection.init(vagrantDir);

		Path vagrantFilePath = Paths.get(stateLoc, vmName, "Vagrantfile");
		String defaultContent;
		StringBuffer bcontent = new StringBuffer();
		try {
			defaultContent = new String(Files.readAllBytes(vagrantFilePath),
					StandardCharsets.UTF_8);
			for (String line : defaultContent.split("\n")) {
				if (line.contains("config.vm.box")) {
					String defLine = line.replaceAll("config.vm.box = \".*\"",
							"config.vm.define :" + vmName);
					String boxLine = line.replaceAll("config.vm.box = \".*\"",
							"config.vm.box = \"" + boxName + "\"");
					bcontent.append(defLine + '\n');
					bcontent.append(boxLine + '\n');
				} else {
					bcontent.append(line + '\n');
				}
			}

			Files.write(vagrantFilePath,
					bcontent.toString().getBytes(StandardCharsets.UTF_8));
		} catch (IOException e) {
		}
		return vagrantDir;
	}

