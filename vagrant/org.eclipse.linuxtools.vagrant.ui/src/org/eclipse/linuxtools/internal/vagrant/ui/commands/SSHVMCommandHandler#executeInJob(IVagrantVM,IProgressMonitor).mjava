	@Override
	void executeInJob(final IVagrantVM vm, IProgressMonitor monitor) {
		if (vm.ip() == null || vm.port() == 0 || vm.user() == null) {
			Display.getDefault()
			.syncExec(() -> MessageDialog.openError(Display.getCurrent()
					.getActiveShell(),
					Messages.SSHVMCommandHandler_failed,
					Messages.SSHVMCommandHandler_bad_credentials));
			return;
		}
		// org.eclipse.tm.terminal.connector.ssh.controls.SshWizardConfigurationPanel
		Map<String, Object> properties = new HashMap<>();
		properties.put("ssh.keep_alive", 300); //$NON-NLS-1$
		properties.put("ip.port", vm.port()); //$NON-NLS-1$
		properties.put("delegateId", //$NON-NLS-1$
				"org.eclipse.tm.terminal.connector.ssh.launcher.ssh"); //$NON-NLS-1$
		properties.put("selection", null); //$NON-NLS-1$
		properties.put("ssh.password", ""); //$NON-NLS-1$ //$NON-NLS-2$
		if (!vm.identityFile().isEmpty()) {
			setupKeyPreferences(vm.identityFile());
		}
		properties.put("tm.terminal.connector.id", //$NON-NLS-1$
				"org.eclipse.tm.terminal.connector.ssh.SshConnector"); //$NON-NLS-1$
		properties.put("ip.host", vm.ip()); //$NON-NLS-1$
		properties.put("ssh.user", vm.user()); //$NON-NLS-1$
		properties.put("encoding", null); //$NON-NLS-1$
		properties.put("timeout", 0); //$NON-NLS-1$
		SshLauncherDelegate delegate = new SshLauncherDelegate();
		delegate.execute(properties, null);
	}

