	/**
	 * Waits until the given file is indexed. Fails if this does not happen within the
	 * given time.
	 * @param file
	 * @param maxmillis
	 * @throws Exception
	 * @since 4.0
	 */
	public static void waitUntilFileIsIndexed(IIndex index, IFile file, int maxmillis) throws Exception {
		long fileTimestamp = file.getLocalTimeStamp();
		IIndexFileLocation indexFileLocation = IndexLocationFactory.getWorkspaceIFL(file);

		long endTime= System.currentTimeMillis() + maxmillis;
		int timeLeft= maxmillis;
		while (timeLeft >= 0) {
			assertTrue(CCorePlugin.getIndexManager().joinIndexer(timeLeft, new NullProgressMonitor()));
			index.acquireReadLock();
			try {
				IIndexFile[] files= index.getFiles(ILinkage.CPP_LINKAGE_ID, indexFileLocation);
				if (files.length > 0 && areAllFilesNotOlderThan(files, fileTimestamp)) {
					assertTrue(CCorePlugin.getIndexManager().joinIndexer(timeLeft, new NullProgressMonitor()));
					return;
				}
				files= index.getFiles(ILinkage.C_LINKAGE_ID, indexFileLocation);
				if (files.length > 0 && areAllFilesNotOlderThan(files, fileTimestamp)) {
					assertTrue(CCorePlugin.getIndexManager().joinIndexer(timeLeft, new NullProgressMonitor()));
					return;
				}
			} finally {
				index.releaseReadLock();
			}

			Thread.sleep(50);
			timeLeft= (int) (endTime - System.currentTimeMillis());
		}
		fail("Indexing of " + file.getFullPath() + " did not complete in " + maxmillis / 1000. + " sec");
	}

