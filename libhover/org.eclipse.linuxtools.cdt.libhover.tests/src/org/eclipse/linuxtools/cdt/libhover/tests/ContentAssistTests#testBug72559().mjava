    public void testBug72559() throws Exception {
        StringWriter writer = new StringWriter();
        writer.write("void foo(){               \n"); //$NON-NLS-1$
        writer.write("   int var;               \n"); //$NON-NLS-1$
        writer.write("   {                      \n"); //$NON-NLS-1$
        writer.write("      float var;          \n"); //$NON-NLS-1$
        writer.write("      v                   \n"); //$NON-NLS-1$
        writer.write("   }                      \n"); //$NON-NLS-1$
        writer.write("}                         \n"); //$NON-NLS-1$

        String code = writer.toString();
        IFile cu = importFile( "t.cpp", code ); //$NON-NLS-1$
        ICompletionProposal [] results = getResults( cu, code.indexOf( "v " ) + 1 ); //$NON-NLS-1$
        
        assertTrue( results.length >= 5 );
        
        // Verify first 2 suggestions come from glibc
        assertEquals( results[0].getDisplayString(), "valloc (size_t size) void *" ); //$NON-NLS-1$
        assertEquals( results[1].getDisplayString(), "vasprintf (char **ptr, const char *template, va_list ap) int" ); //$NON-NLS-1$
      
        
        // Verify end of list contains completions from indexer
        assertEquals( results[results.length - 3].getDisplayString(), "var : float" ); //$NON-NLS-1$
        assertEquals( results[results.length - 2].getDisplayString(), "virtual" ); //$NON-NLS-1$
        assertEquals( results[results.length - 1].getDisplayString(), "volatile" ); //$NON-NLS-1$
    }

