    /**
     * Creates a ICProject.
     */
    public static ICProject createCProject(final String projectName, String binFolderName, final String indexerID) throws CoreException {
        final IWorkspace ws = ResourcesPlugin.getWorkspace();
        final ICProject newProject[] = new ICProject[1];
        ws.run(new IWorkspaceRunnable() {
            @Override
            public void run(IProgressMonitor monitor) throws CoreException {
                IWorkspaceRoot root = ws.getRoot();
                IProject project = root.getProject(projectName);
                if (indexerID != null) {
                    IndexerPreferences.set(project, IndexerPreferences.KEY_INDEX_UNUSED_HEADERS_WITH_DEFAULT_LANG, "true");
                    IndexerPreferences.set(project, IndexerPreferences.KEY_INDEXER_ID, indexerID);
                }
                if (!project.exists()) {
                    project.create(null);
                } else {
                    project.refreshLocal(IResource.DEPTH_INFINITE, null);
                }
                if (!project.isOpen()) {
                    project.open(null);
                }
                if (!project.hasNature(CProjectNature.C_NATURE_ID)) {
                    String projectId = PLUGIN_ID + ".TestProject";
                    addNatureToProject(project, CProjectNature.C_NATURE_ID, null);
                    CCorePlugin.getDefault().mapCProjectOwner(project, projectId, false);
                }
                addDefaultBinaryParser(project);
                newProject[0] = CCorePlugin.getDefault().getCoreModel().create(project);
            }
        }, null);

        return newProject[0];
    }

