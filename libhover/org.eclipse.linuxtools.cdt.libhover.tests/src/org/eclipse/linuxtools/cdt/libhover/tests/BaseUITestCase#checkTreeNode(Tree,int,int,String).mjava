	/**
	 * Pass label=null to test that the {i0,i1} node doesn't exist
	 */
	final protected TreeItem checkTreeNode(Tree tree, int i0, int i1, String label) {
		String firstItemText= null;
		int timeout = (label == null) ? 1000 : 5000; // see footnote[0]

		// If {i0,i1} exists, whether or not it matches label (when label != null)
		boolean nodePresent = false;

		for (int millis= 0; millis < timeout; millis= millis == 0 ? 1 : millis * 2) {
			nodePresent = false;
			runEventQueue(millis);
			TreeItem i0Node= tree.getItem(i0);
			if (!i0Node.getExpanded()) {
				expandTreeItem(i0Node);
			}
			try {
				TreeItem firstItem= i0Node.getItem(0);
				firstItemText= firstItem.getText();
				if (firstItemText.length() > 0 && !firstItemText.equals("...")) {
					TreeItem item = i0Node.getItem(i1);
					nodePresent = true;
					if (label != null && label.equals(item.getText())) {
						return item;
					}
				}
			} catch (SWTException e) {
				// in case widget was disposed, item may be replaced
			} catch (IllegalArgumentException e) {
				// item does not yet exist.
			}
		}

		if (label == null) {
			assertFalse("Tree node {" + i0 + "," + i1 + "} exists but shouldn't!", nodePresent);
		} else {
			fail("Tree node " + label + "{" + i0 + "," + i1 + "} does not exist!");
		}
		return null;
	}

