	public void getLibHoverDocs() {
		libraries.clear();
		helpBooks.clear();
		IExtensionRegistry x = RegistryFactory.getRegistry();
		IConfigurationElement[] ces = x.getConfigurationElementsFor(LIBHOVER_DOC_EXTENSION);
		for (int i = 0; i < ces.length; ++i) {
			IConfigurationElement ce = ces[i];
			if (ce.getName().equals("library")) { //$NON-NLS-1$
				Document doc = null;
				try {
					// see comment in initialize()
					try {
						// Use the FileLocator class to open the magic hover doc file
						// in the plugin's jar.
						// Either open the html file or file system file depending
						// on what has been specified.
						String location = ce.getAttribute("location"); //$NON-NLS-1$
						String name = ce.getAttribute("name"); //$NON-NLS-1$
						String helpdocs = ce.getAttribute("docs"); //$NON-NLS-1$
						String type = ce.getAttribute("type"); //$NON-NLS-1$
						URI acDoc = new URI(location);
						IPath p = URIUtil.toPath(acDoc);
						InputStream docStream = null;
						if (p == null) {
							URL url = acDoc.toURL();
							docStream = url.openStream();
						} else {
							docStream = new FileInputStream(p.toFile());
						}
						DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
						factory.setValidating(false);
						try {
							DocumentBuilder builder = factory.newDocumentBuilder();
							doc = builder.parse(docStream);
						}
						catch (SAXParseException saxException) {
							doc = null;
						}
						catch (SAXException saxEx) {
							doc = null;
						}
						catch (ParserConfigurationException pce) {
							doc = null;
						}
						catch (IOException ioe) {
							doc = null;
						}
						// If we found the document, add it to our library list.
						if (doc != null) {
							HelpBook h = new HelpBook(name, type);
							helpBooks.add(h);
							libraries.put(h, new LibHoverLibrary(name, location, helpdocs, doc));
						}
					} catch (MalformedURLException e) {
						CUIPlugin.log(e);
					} catch (FileNotFoundException e) {
						CUIPlugin.log(e);
					} catch (URISyntaxException e) {
						CUIPlugin.log(e);
					}
				}
				catch (IOException ioe) {
				}
			}
		}
	}

