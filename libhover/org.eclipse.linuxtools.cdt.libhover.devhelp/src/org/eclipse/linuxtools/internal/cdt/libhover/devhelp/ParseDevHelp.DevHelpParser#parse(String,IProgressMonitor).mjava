		public void parse(String fileName, IProgressMonitor monitor) {
			try {
				Path path = new Path(fileName);
				File f = new File(fileName);
				FileInputStream stream = new FileInputStream(f);
				DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
				factory.setValidating(false);
				DocumentBuilder builder = factory.newDocumentBuilder();
				builder.setEntityResolver(new EntityResolver()
		        {
		            @Override
					public InputSource resolveEntity(String publicId, String systemId)
		                throws SAXException, IOException
		            {
		                return new InputSource(new StringReader("")); //$NON-NLS-1$
		            }
		        });
				Document doc = builder.parse(stream);
				NodeList bookNodes = doc.getElementsByTagName("book"); //$NON-NLS-1$
				for (int x = 0; x < bookNodes.getLength(); ++x) {
					Node n = bookNodes.item(x);
					NamedNodeMap m = n.getAttributes();
					Node language = m.getNamedItem("language"); //$NON-NLS-1$
					if (language != null && !language.getNodeValue().equals("c"))
						return;
				}
				if (path.lastSegment().endsWith("devhelp")) {
					NodeList nl = doc.getElementsByTagName("function"); // $NON-NLS-1$
					for (int i = 0; i < nl.getLength(); ++i) {
						if (monitor.isCanceled())
							return;
						Node n = nl.item(i);
						NamedNodeMap m = n.getAttributes();
						Node name = m.getNamedItem("name"); // $NON-NLS-1$
						Node link = m.getNamedItem("link"); // $NON-NLS-1$
						if (link != null) {
							parseLink(link, name, path, libhover);
						}
					}
				} else if (path.lastSegment().endsWith("devhelp2")) {
					NodeList nl = doc.getElementsByTagName("keyword"); // $NON-NLS-1$
					for (int i = 0; i < nl.getLength(); ++i) {
						if (monitor.isCanceled())
							return;
						Node n = nl.item(i);
						NamedNodeMap m = n.getAttributes();
						Node type = m.getNamedItem("type"); // $NON-NLS-1$
						if (type != null) {
							String typeName = type.getNodeValue();
							if (typeName.equals("function")) { //$NON-NLS-1$
								Node name = m.getNamedItem("name"); // $NON-NLS-1$
								Node link = m.getNamedItem("link"); // $NON-NLS-1$
								if (link != null) {
									parseLink(link, name, path, libhover);
								}
							}
						}
					}
				}
			} catch (FileNotFoundException e1) {
				// ignore
			} catch (ParserConfigurationException e) {
				e.printStackTrace();
			} catch (SAXException e) {
				e.printStackTrace();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}

