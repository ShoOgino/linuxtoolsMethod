	public void run() {
		ISelection selection = viewer.getSelection();
		Object obj = ((IStructuredSelection)selection).getFirstElement();

		if (obj instanceof PMLineRef) {
			//Open in editor
			PMFile file = (PMFile) ((PMLineRef) obj).getParent();
			try {
				ProfileUIUtils.openEditorAndSelect(file.getPath(), Integer.parseInt(file.getName()));
			} catch (PartInitException e) {
				e.printStackTrace();
			} catch (BadLocationException e) {
				e.printStackTrace();
			}
		} else if (obj instanceof PMFile) {
			PMFile file = (PMFile)obj;
			try {
				ProfileUIUtils.openEditorAndSelect(file.getName(), 1);
			} catch (PartInitException e) {
				e.printStackTrace();
			} catch (BadLocationException e) {
				e.printStackTrace();
			}
		} else if (obj instanceof PMSymbol) {
			PMSymbol sym = (PMSymbol)obj;
			PMFile file = (PMFile) sym.getParent();
			PMDso dso = (PMDso) file.getParent();

			if (file.getName().equals(PerfPlugin.STRINGS_UnfiledSymbols)) 
				return; //Don't try to do anything if we don't know where or what the symbol is.

			String binaryPath = dso.getPath();
			ICProject project;
			try {
				project = ProfileUIUtils.findCProjectWithAbsolutePath(binaryPath);
				HashMap<String, int[]> map = ProfileUIUtils.findFunctionsInProject(project, sym.getFunctionName(), -1, file.getPath(), true);
				boolean bFound = false;
				for (String loc : map.keySet()) {
					ProfileUIUtils.openEditorAndSelect(loc, map.get(loc)[0], map.get(loc)[1]);
					bFound = true;
				}
				if (!bFound) {
					ProfileUIUtils.openEditorAndSelect(file.getPath(), 1);
				}
			} catch (CoreException e) {
				e.printStackTrace();
			} catch (BadLocationException e) {
				e.printStackTrace();
			}
		}
	}

