    public static String[] getAnnotateString(ILaunchConfiguration config, String dso, String symbol, String perfDataLoc, boolean oldPerfVersion) {
        ArrayList<String> base = new ArrayList<>();
        if (oldPerfVersion) {
            base.addAll( Arrays.asList( new String[]{PerfPlugin.PERF_COMMAND, "annotate", "-s", symbol, "-l", "-P"} ) ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$
        } else {
            base.addAll( Arrays.asList( new String[]{PerfPlugin.PERF_COMMAND, "annotate", "--stdio", "-d", dso, "-s", symbol, "-l", "-P"} ) ); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$
        }
        if (config != null) {
            try {
                String kernelLoc = config.getAttribute(PerfPlugin.ATTR_Kernel_Location, PerfPlugin.ATTR_Kernel_Location_default);
                if (!kernelLoc.equals(PerfPlugin.ATTR_Kernel_Location_default)) {
                    base.add("--vmlinux"); //$NON-NLS-1$
                    base.add(kernelLoc);
                }
                if (config.getAttribute(PerfPlugin.ATTR_ModuleSymbols, PerfPlugin.ATTR_ModuleSymbols_default)) {
                    base.add("-m"); //$NON-NLS-1$
                }
                if (perfDataLoc != null) {
                    base.add("-i"); //$NON-NLS-1$
                    base.add(perfDataLoc);
                }
            } catch (CoreException e) { }
        }
        /*
         * Some versions of perf annotate hangs while waiting for an input.
         * Redirect input from an empty file (or /dev/null) to avoid that behavior.
         */
        base.add("<"); //$NON-NLS-1$
        base.add("/dev/null"); //$NON-NLS-1$

        //(Annotate string per symbol)
        return base.toArray( new String[base.size()] );
    }

