    //Gets the current version of perf
    public static PerfVersion getPerfVersion(ILaunchConfiguration config) {
        IProject project = getProject(config);
        Process p = null;

        try {
            p = RuntimeProcessFactory.getFactory().exec(new String [] {PerfPlugin.PERF_COMMAND, "--version"}, project); //$NON-NLS-1$
        } catch (IOException e) {
        	// Issue warning to avoid AERI reports whenever user is missing perf
            Status status = new Status(IStatus.WARNING, PerfPlugin.PLUGIN_ID,
                    e.getMessage());
            PerfPlugin.getDefault().getLog().log(status);
        }

        if (p == null) {
            return null;
        }

        BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));

        String perfVersion = spitStream(input, "Perf --version", null); //$NON-NLS-1$
        int index = perfVersion.indexOf('-');
        if (index > 0) {
            perfVersion = perfVersion.substring(0, index);
        }
        Pattern pattern = Pattern.compile("\\D*((\\d|\\.)+)"); //$NON-NLS-1$
        Matcher matcher = pattern.matcher(perfVersion);
        if (matcher.matches()) {
        	return new PerfVersion(matcher.group(1));
        }
       	return null;
    }

