	/**
	 * Set String input in text display. Adapted from
	 * org.eclipse.linuxtools.internal.perf.ui.SourceDisassemblyView.
	 *
	 * @param input text to display
	 */
	private void setStyledText(String input) {
		text.setText(input);
		text.setAlignment(SWT.LEFT);
		// set default TextConsole font (monospaced).
		text.setFont(JFaceResources.getFont(JFaceResources.TEXT_FONT));

		List<StyleRange> styles = new ArrayList<StyleRange>();
		int ptr = 0;

		String[] lines = input.split("\n"); //$NON-NLS-1$

		for (String line : lines) {
			if (Pattern.matches(OCCURRENCE, line)) {
				Matcher m = Pattern.compile(OCCURRENCE).matcher(line);
				if (m.matches() && m.group(1) != null) {
					try {
						float occurrence = StatComparisonData.toFloat(m
								.group(1).trim());
						if (occurrence > 0) {
							styles.add(new StyleRange(ptr, line.length(), RED,
									null));
						} else if (occurrence < 0) {
							styles.add(new StyleRange(ptr, line.length(),
									GREEN, null));
						}
					} catch (NumberFormatException e) {
						// set no StyleRange
					}
				}
			}
			// + 1 to skip over the '\n' at EOL that the tokenizer eats
			ptr += line.length() + 1;
		}

		text.setStyleRanges(styles.toArray(new StyleRange[0]));
	}

