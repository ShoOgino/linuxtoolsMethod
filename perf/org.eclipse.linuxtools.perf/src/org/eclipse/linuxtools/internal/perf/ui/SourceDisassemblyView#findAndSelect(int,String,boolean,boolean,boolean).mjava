	@Override
	public int findAndSelect(int widgetOffset, String findString,
			boolean searchForward, boolean caseSensitive, boolean wholeWord) {
		int matchIndex = -1;
		String searchString = text.getText();
		String findRegex = findString;

		// offset is -1 when text boundaries are reached during a wrapped search
		if (widgetOffset < 0) {
			widgetOffset = searchForward ? 0 : searchString.length();
		}

		if (wholeWord) {
			findRegex = WORD_BOUNDARY + findRegex + WORD_BOUNDARY;
		}

		int caseFlag = caseSensitive ? 0 : Pattern.CASE_INSENSITIVE;
		Pattern pattern = Pattern.compile(findRegex, caseFlag);
		Matcher matcher = pattern.matcher(searchString);

		if (searchForward) {
			matchIndex = matcher.find(widgetOffset) ? matcher.start() : -1;
		} else {
			// backward search from 0 to offset (exclusive)
			matcher.region(0, widgetOffset);

			// get start index of last match
			while (matcher.find()) {
				matchIndex = matcher.start();
			}
		}

		// only select when a match has been found
		if (matchIndex != -1) {
			text.setSelection(matchIndex, matchIndex + findString.length());
		}
		return matchIndex;
	}

