    /**
     * Set properties for StlyedText widget.
     * @param input String StyledText content.
     */
    private void setStyledText(String input) {
        result.setText(input);
        result.setJustify(true);
        result.setAlignment(SWT.LEFT);

        result.setFont(JFaceResources.getFont(JFaceResources.TEXT_FONT));

        List<StyleRange> styles = new ArrayList<>();
        int ptr = 0;
        String[] lines = input.split("\n"); //$NON-NLS-1$

        for(String line : lines){
            if (Pattern.matches(DIFF_ENTRY, line)) {
                Matcher m = Pattern.compile(DIFF_ENTRY).matcher(line);
                if (m.matches() && m.group(1) != null && m.group(3) != null) {
                    try {
                        float baseline = Float.parseFloat(m.group(1).trim());
                        float delta = Float.parseFloat(m.group(3).trim());
                        if (baseline > 1 && Math.abs(delta) > 1) {
                            StyleRange curStyleRange =  new StyleRange(ptr, line.length(), BLACK, null);
                            if (delta < 0 ) {
                                curStyleRange = delta < -5 ? new StyleRange(ptr, line.length(), LIGHT_GREEN, null) :
                                    new StyleRange(ptr, line.length(), GREEN, null);
                            } else {
                                curStyleRange = delta < 5 ? new StyleRange(ptr, line .length(), ORANGE, null) :
                                    new StyleRange(ptr, line.length(), RED, null);
                            }
                            styles.add(curStyleRange);
                        }
                    } catch (NumberFormatException e) {
                        // set no StyleRange
                    }
                }
            }
            // + 1 to skip over the '\n' at EOL that the tokenizer eats
            ptr += line.length() + 1;
        }

        result.setStyleRanges(styles.toArray(new StyleRange[0]));
    }

