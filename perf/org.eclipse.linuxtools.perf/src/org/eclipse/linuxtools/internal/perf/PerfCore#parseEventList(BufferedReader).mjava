    public static Map<String,List<String>> parseEventList (BufferedReader input){
        Map<String,List<String>> events = new HashMap<>();
        String line;
        try {
            // Process list of events. Each line is of the form <event>\s+<category>.
            while (( line = input.readLine()) != null){
                if (line.matches("\\s*\\S+\\s*\\[.*\\]")) { //$NON-NLS-1$
                    String event;
                    String category;
                    if (line.contains(PerfPlugin.STRINGS_HWBREAKPOINTS)) {
                        category = PerfPlugin.STRINGS_HWBREAKPOINTS;
                        event = line.substring(1,line.indexOf('[', 0)).trim();
                    } else if (line.contains(PerfPlugin.STRINGS_RAWHWEvents)) {
                        category = PerfPlugin.STRINGS_RAWHWEvents;
                        event = line.substring(1,line.indexOf('[', 0)).trim();
                    } else {
                        event = line.substring(1,line.indexOf('[', 0)).trim();
                        if (event.contains("OR")) { //$NON-NLS-1$
                            event = event.split("OR")[0]; //filter out the abbreviations. //$NON-NLS-1$
                        }
                        category = line.replaceFirst(".*\\[(.+)\\]", "$1").trim(); //$NON-NLS-1$ //$NON-NLS-2$
                    }
                    List<String> categoryEvents = events.get(category);
                    if (categoryEvents == null) {
                        categoryEvents = new ArrayList<>();
                        events.put(category, categoryEvents);
                    }
                    categoryEvents.add(event.trim());
                }
            }
        } catch (IOException e) {
            logException(e);
        } finally {
            if (null != input) {
                try {
                    input.close();
                } catch (IOException e) {
                }
            }
        }
        return events;
    }

