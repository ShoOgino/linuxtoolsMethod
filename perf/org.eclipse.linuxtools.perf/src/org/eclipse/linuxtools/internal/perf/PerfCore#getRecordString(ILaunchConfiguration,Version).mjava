    //Generates a perf record command string with the options set in the given config. (If null uses default).
    public static String [] getRecordString(ILaunchConfiguration config, Version perfVersion) {
        String [] base = new String [] {PerfPlugin.PERF_COMMAND, "record"}; //$NON-NLS-1$
        if (config == null) {
            return base;
        } else {
            ArrayList<String> newCommand = new ArrayList<>();
            newCommand.addAll(Arrays.asList(base));
            try {
                if (config.getAttribute(PerfPlugin.ATTR_Record_Realtime, PerfPlugin.ATTR_Record_Realtime_default)) {
                    newCommand.add("-r"); //$NON-NLS-1$
                    int priority = config.getAttribute(PerfPlugin.ATTR_Record_Realtime_Priority, PerfPlugin.ATTR_Record_Realtime_Priority_default);
                    newCommand.add(Integer.toString(priority));
                }
                if (config.getAttribute(PerfPlugin.ATTR_Record_Verbose, PerfPlugin.ATTR_Record_Verbose_default))
                    newCommand.add("-v"); //$NON-NLS-1$
                if (config.getAttribute(PerfPlugin.ATTR_Multiplex, PerfPlugin.ATTR_Multiplex_default))
                    newCommand.add("-M"); //$NON-NLS-1$
                List<?> selE = config.getAttribute(PerfPlugin.ATTR_SelectedEvents, PerfPlugin.ATTR_SelectedEvents_default);
                if (!config.getAttribute(PerfPlugin.ATTR_DefaultEvent, PerfPlugin.ATTR_DefaultEvent_default)
                        && selE != null) {
                    for(Object e : selE) {
                        newCommand.add("-e"); //$NON-NLS-1$
                        newCommand.add((String)e);
                    }
                }
            } catch (CoreException e) { }
            return newCommand.toArray(new String[] {});
        }
    }

