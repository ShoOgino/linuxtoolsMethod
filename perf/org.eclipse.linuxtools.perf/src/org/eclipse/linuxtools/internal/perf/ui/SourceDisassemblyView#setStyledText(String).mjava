    /**
     * Set styled text field based on the specified string, which is parsed in
     * order to set appropriate styles to be used for rendering the widget
     * content.
     *
     * @param input text content of widget.
     */
    private void setStyledText (String input) {
        List<StyleRange> styles = new ArrayList<> ();
        int ptr = 0;

        text.setText(input);

        StringTokenizer tok = new StringTokenizer(input, "\n"); //$NON-NLS-1$
        while (tok.hasMoreTokens()) {
            String line = tok.nextToken();
            if (Pattern.matches(ASM, line)) {
                Matcher m = Pattern.compile(ASM).matcher(line);
                if (m.matches() && m.group(1) != null) {

                    try {
                        float percent = Float.parseFloat(m.group(1).trim());
                        if (percent >= 20) {
                            styles.add(new StyleRange(ptr, line.length(), RED, null));
                        } else if  (percent >= 5) {
                            styles.add(new StyleRange(ptr, line.length(), ORANGE, null));
                        }
                    } catch (NumberFormatException e) {
                        // set no StyleRange
                    }
                }
            } else if (Pattern.matches(CODE, line)) {
                styles.add(new StyleRange(ptr, line.length(), GREEN, null));
            }

            // + 1 to skip over the '\n' at EOL that the tokenizer eats
            ptr += line.length() + 1;
        }
        text.setStyleRanges(styles.toArray(new StyleRange [0]));
    }

