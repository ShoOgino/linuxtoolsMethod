	//Gets the current version of perf
	public static Version getPerfVersion(ILaunchConfiguration config, String[] environ, IPath workingDir) {
		IProject project = getProject(config);
		Process p = null;
		IRemoteFileProxy proxy = null;
		IFileStore workingDirFileStore = null;

		if (workingDir == null) {
			try {
				p = RuntimeProcessFactory.getFactory().exec(new String [] {PerfPlugin.PERF_COMMAND, "--version"}, project); //$NON-NLS-1$
			} catch (IOException e) {
				logException(e);
			}
		} else {
			try {
				proxy = RemoteProxyManager.getInstance().getFileProxy(new URI(workingDir.toOSString()));
				workingDirFileStore = proxy.getResource(workingDir.toOSString());
				p = RuntimeProcessFactory.getFactory().exec(new String [] {PerfPlugin.PERF_COMMAND, "--version"}, environ, workingDirFileStore, project); //$NON-NLS-1$
			} catch (IOException e) {
				logException(e);
			} catch (CoreException e) {
				logException(e);
			} catch (URISyntaxException e) {
				logException(e);
			}
		}

		if (p == null) {
			return null;
		}

		BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));
		String perfVersion = spitStream(input, "Perf --version", null);
		int index = perfVersion.indexOf('-');
		if (index > 0) {
			perfVersion = perfVersion.substring(0, index);
		}
		perfVersion = perfVersion.replace("perf version", "").trim(); //$NON-NLS-1$ //$NON-NLS-2$
		return new Version(perfVersion);
	}

