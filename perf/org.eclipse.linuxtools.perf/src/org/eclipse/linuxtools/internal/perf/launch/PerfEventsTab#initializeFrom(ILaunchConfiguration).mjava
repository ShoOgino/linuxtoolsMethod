	@Override
	public void initializeFrom(ILaunchConfiguration config) {
		IProject project = getProject(config);

		try {
			if(previousProject == null || (previousProject != null && !previousProject.equals(project))){
				Control[] children = top.getChildren();

				for (Control control : children) {
					control.dispose();
				}

				createVerticalSpacer(top, 1);

				// Default event checkbox
				chkDefaultEvent = new Button(top, SWT.CHECK);
				chkDefaultEvent.setText("Default Event"); //$NON-NLS-1$
				chkDefaultEvent.setLayoutData(new GridData());
				chkDefaultEvent.addSelectionListener(new SelectionAdapter() {
					@Override
					public void widgetSelected(SelectionEvent se) {
						refreshDefaultEnabled();
						updateLaunchConfigurationDialog();
					}
				});

				createEventTabs(top, config);
			}

			// restore whether things are default event/enabled or not.
			chkDefaultEvent.setSelection(config.getAttribute(PerfPlugin.ATTR_DefaultEvent, PerfPlugin.ATTR_DefaultEvent_default));
			refreshDefaultEnabled();

			// restore custom hw breakpoints
			List<?> hwbps = config.getAttribute(PerfPlugin.ATTR_HwBreakpointEvents, PerfPlugin.ATTR_HwBreakpointEvents_default);
			if (hwbps != null) {
				for (int i = 0; i < eventTable.length; i++) {
					if (eventTabItems[i].getText().equals(PerfPlugin.STRINGS_HWBREAKPOINTS)) {
						eventTable[i].removeAll();
						for (Object e : hwbps) {
							TableItem x = new TableItem(eventTable[i], SWT.NONE);
							x.setText((String)e);
						}
					}
				}
			}

			// restore custom raw hw events
			List<?> rawhe = config.getAttribute(PerfPlugin.ATTR_RawHwEvents, PerfPlugin.ATTR_RawHwEvents_default);
			if (rawhe != null) {
				for (int i = 0; i < eventTable.length; i++) {
					if (eventTabItems[i].getText().equals(PerfPlugin.STRINGS_RAWHWEvents)) {
						eventTable[i].removeAll();
						for (Object e : rawhe) {
							TableItem x = new TableItem(eventTable[i], SWT.NONE);
							x.setText((String)e);
						}
					}
				}
			}

			// tick all the boxes that are checked
			List<?> selectedEvents = config.getAttribute(PerfPlugin.ATTR_SelectedEvents, PerfPlugin.ATTR_SelectedEvents_default);

			if(selectedEvents != null){
				for (int i = 0; i < eventTable.length; i++) {
					for(TableItem event : eventTable[i].getItems()) {
						if(selectedEvents.contains(event.getText())){
							event.setChecked(true);
						} else {
							event.setChecked(false);
						}
					}
				}
			}
			previousProject = project;
			} catch (CoreException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	}

