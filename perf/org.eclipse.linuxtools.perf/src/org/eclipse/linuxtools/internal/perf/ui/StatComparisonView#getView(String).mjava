	/**
	 * Utility method to get an instance of a {@link StatComparisonView} by
	 * providing the secondary identifier.
	 *
	 * @param sID String secondary identifier.
	 * @return IViewPart {@link StatComparisonView} associated with the
	 *         specified secondary identifier.
	 */
	public static IViewPart getView(final String sID) {
		final AtomicReference<IViewPart> viewRef = new AtomicReference<IViewPart>();

		Display.getDefault().syncExec(new Runnable() {

			@Override
			public void run() {
				try {
					IViewPart view = PlatformUI
							.getWorkbench()
							.getActiveWorkbenchWindow()
							.getActivePage()
							.showView(PerfPlugin.STAT_DIFF_VIEW_ID,
									sID,
									IWorkbenchPage.VIEW_CREATE);
					viewRef.set(view);
				} catch (PartInitException e) {
					IStatus status = new Status(IStatus.ERROR,
							PerfPlugin.PLUGIN_ID, e.getMessage(), e);
					PerfPlugin.getDefault().getLog().log(status);
				}
			}
		});
		return viewRef.get();
	}

