	//Function adapted from org.eclipse.linuxtools.oprofile.launch.configuration.OprofileSetupTab.java
	@Override
	public void createControl(Composite parent) {
		scrollTop = new ScrolledComposite(parent,	SWT.H_SCROLL | SWT.V_SCROLL);
		scrollTop.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true));
		scrollTop.setExpandVertical(true);
		scrollTop.setExpandHorizontal(true);

		setControl(scrollTop);

		top = new Composite(scrollTop, SWT.NONE);
		top.setLayout(new GridLayout());

		GridData data;
		GridLayout layout;
		createVerticalSpacer(top, 1);

		// Create container for kernel image file selection
		Composite p = new Composite(top, SWT.NONE);
		layout = new GridLayout();
		layout.numColumns = 2;
		layout.marginHeight = 0;
		layout.marginWidth = 0;
		p.setLayout(layout);
		data = new GridData(GridData.FILL_HORIZONTAL);
		p.setLayoutData(data);

		Label l = new Label(p, SWT.NONE);
		l.setText(PerfPlugin.STRINGS_Kernel_Location); //$NON-NLS-1$
		data = new GridData();
		data.horizontalSpan = 2;
		l.setLayoutData(data);

		_txtKernel_Location = new Text(p, SWT.SINGLE | SWT.BORDER);
		data = new GridData(GridData.FILL_HORIZONTAL);
		_txtKernel_Location.setLayoutData(data);
		_txtKernel_Location.addModifyListener(new ModifyListener() {
			@Override
			public void modifyText(ModifyEvent mev) {
				_handleKernelImageFileTextModify(_txtKernel_Location);
			}
		});

		Button button = createPushButton(p, "Browse", null); //$NON-NLS-1$
		final Shell shell = top.getShell();
		button.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent sev) {
				_showFileDialog(shell);
			}
		});

		createVerticalSpacer(top, 1);

		// Create checkbox options container
		p = new Composite(top, SWT.NONE);
		layout = new GridLayout();
		layout.numColumns = 1;
		layout.marginHeight = 0;
		layout.marginWidth = 0;
		p.setLayout(layout);
		data = new GridData(GridData.FILL_HORIZONTAL);
		data.horizontalSpan = 2;
		p.setLayoutData(data);
		
		
		_chkRecord_Verbose = _createCheckButton(p, PerfPlugin.STRINGS_Record_Verbose);
		_chkModuleSymbols = _createCheckButton(p, PerfPlugin.STRINGS_ModuleSymbols);
		_chkHideUnresolvedSymbols = _createCheckButton(p, PerfPlugin.STRINGS_HideUnresolvedSymbols);
		_chkSourceLineNumbers = _createCheckButton(p, PerfPlugin.STRINGS_SourceLineNumbers);
		_chkShowSourceDisassembly = _createCheckButton(p, PerfPlugin.STRINGS_ShowSourceDisassembly);

		Composite showStatComp = new Composite(top, SWT.NONE);
		layout = new GridLayout();
		layout.numColumns = 2;
		layout.marginHeight = 0;
		layout.marginWidth = 0;
		showStatComp.setLayout(layout);

		_chkShowStat = _createCheckButton(showStatComp, PerfPlugin.STRINGS_ShowStat);
		_chkShowStat.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent se) {
				if (_chkShowStat.getSelection()) {
					_statRunCount.setEnabled(true);
				}else{
					_statRunCount.setEnabled(false);
				}
			}
		});
		_statRunCount = new Spinner(showStatComp, SWT.BORDER);
		_statRunCount.setEnabled(false);
		_statRunCount.setMinimum(1);
		_statRunCount.addModifyListener(new ModifyListener() {
			@Override
			public void modifyText(ModifyEvent e) {
				updateLaunchConfigurationDialog();
			}
		});

		_chkSourceLineNumbers.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent se) {
				if ((_chkKernel_SourceLineNumbers != null) && (!_chkSourceLineNumbers.getSelection())) {
					_chkKernel_SourceLineNumbers.setEnabled(false);
				} else {
					_chkKernel_SourceLineNumbers.setEnabled(true);
				}
			}
		});
		_chkKernel_SourceLineNumbers = _createCheckButton(p, PerfPlugin.STRINGS_Kernel_SourceLineNumbers);
		_chkRecord_Realtime = _createCheckButton(p, PerfPlugin.STRINGS_Record_Realtime);
		_chkMultiplexEvents = _createCheckButton(p, PerfPlugin.STRINGS_Multiplex);

		scrollTop.setContent(top);
		recomputeSize();
		updateLaunchConfigurationDialog();
	}

