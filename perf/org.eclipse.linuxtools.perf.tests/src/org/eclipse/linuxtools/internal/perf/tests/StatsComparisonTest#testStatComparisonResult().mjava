    @Test
    public void testStatComparisonResult() throws IOException {
        IPath oldStatData = Path.fromOSString(STAT_RES + "perf_old.stat");
        IPath newStatData = Path.fromOSString(STAT_RES + "perf_new.stat");
        IPath diffStatData = Path.fromOSString(STAT_RES + "perf_diff.stat");

        try (BufferedReader diffDataReader = new BufferedReader(new FileReader(
                diffStatData.toFile()))) {
            StatComparisonData diffData = new StatComparisonData("title",
                    oldStatData, newStatData);

            diffData.runComparison();
            String actualResult = diffData.getPerfData();
            String[] actualResultLines = actualResult.split("\n");

            String curLine;
            for (int i = 0; i < actualResultLines.length; i++) {
                curLine = diffDataReader.readLine();

                /**
                 * Elapsed seconds are usually very close to zero, and thus
                 * prone to some small formatting differences across systems.
                 * Total time entry items are checked more thoroughly to avoid
                 * test failures.
                 */
                if (curLine.contains(PMStatEntry.TIME)) {
                    String expectedEntry = curLine.trim();
                    String actualEntry = actualResultLines[i].trim();

                    String expectedSamples = expectedEntry.substring(0,
                            expectedEntry.indexOf(" "));
                    String expectedRest = expectedEntry.substring(expectedEntry
                            .indexOf(" ") + 1);

                    String actualSamples = actualEntry.substring(0,
                            actualEntry.indexOf(" "));
                    String actualRest = actualEntry.substring(actualEntry
                            .indexOf(" ") + 1);

                    assertEquals(StatComparisonData.toFloat(actualSamples),
                            StatComparisonData.toFloat(expectedSamples), 0);
                    assertEquals(actualRest, expectedRest);
                } else {
                    assertEquals(actualResultLines[i], curLine);
                }
            }
        }

    }

