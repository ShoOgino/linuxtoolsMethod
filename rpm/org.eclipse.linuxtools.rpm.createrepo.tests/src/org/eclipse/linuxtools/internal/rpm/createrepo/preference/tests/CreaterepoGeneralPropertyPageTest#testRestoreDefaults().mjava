	/**
	 * Test if all preferences modified in the general createrepo property
	 * page will reset to default.
	 */
	@Test
	public void testRestoreDefaults() {
		bot.checkBox(Messages.CreaterepoGeneralPropertyPage_projectSettings).click();
		bot.checkBox(Messages.CreaterepoPreferencePage_booleanChecksumName).click();
		bot.checkBox(Messages.CreaterepoPreferencePage_booleanGenerateSQLDB).click();
		bot.checkBox(Messages.CreaterepoPreferencePage_booleanIgnoreSymlinks).click();
		bot.checkBox(Messages.CreaterepoPreferencePage_booleanPrettyXML).click();
		bot.textWithLabel(Messages.CreaterepoPreferencePage_numWorkers).setText("9"); //$NON-NLS-1$
		bot.textWithLabel(Messages.CreaterepoPreferencePage_numChangelogLimit).setText("13"); //$NON-NLS-1$
		bot.checkBox(Messages.CreaterepoPreferencePage_booleanCheckTS).click();
		bot.radio(ICreaterepoChecksums.SHA512).click();
		bot.radio(ICreaterepoCompressionTypes.XZ).click();
		bot.button(ICreaterepoTestConstants.OK_BUTTON).click();
		openPropertyPage();
		bot.button(ICreaterepoTestConstants.DEFAULTS).click();
		bot.button(ICreaterepoTestConstants.OK_BUTTON).click();
		IEclipsePreferences pref = project.getEclipsePreferences();
		IPreferenceStore prefStore = Activator.getDefault().getPreferenceStore();
		assertTrue(prefStore.isDefault(CreaterepoPreferenceConstants.PREF_GENERAL_ENABLED));
		assertEquals(pref.getBoolean(CreaterepoPreferenceConstants.PREF_UNIQUE_MD_NAME,
				prefStore.getDefaultBoolean(CreaterepoPreferenceConstants.PREF_UNIQUE_MD_NAME)),
				prefStore.getDefaultBoolean(CreaterepoPreferenceConstants.PREF_UNIQUE_MD_NAME));
		assertEquals(pref.getBoolean(CreaterepoPreferenceConstants.PREF_GENERATE_DB,
				prefStore.getDefaultBoolean(CreaterepoPreferenceConstants.PREF_GENERATE_DB)),
				prefStore.getDefaultBoolean(CreaterepoPreferenceConstants.PREF_GENERATE_DB));
		assertEquals(pref.getBoolean(CreaterepoPreferenceConstants.PREF_IGNORE_SYMLINKS,
				prefStore.getDefaultBoolean(CreaterepoPreferenceConstants.PREF_IGNORE_SYMLINKS)),
				prefStore.getDefaultBoolean(CreaterepoPreferenceConstants.PREF_IGNORE_SYMLINKS));
		assertEquals(pref.getBoolean(CreaterepoPreferenceConstants.PREF_PRETTY_XML,
				prefStore.getDefaultBoolean(CreaterepoPreferenceConstants.PREF_PRETTY_XML)),
				prefStore.getDefaultBoolean(CreaterepoPreferenceConstants.PREF_PRETTY_XML));
		assertEquals(pref.getInt(CreaterepoPreferenceConstants.PREF_WORKERS,
				prefStore.getInt(CreaterepoPreferenceConstants.PREF_WORKERS)),
				prefStore.getDefaultInt(CreaterepoPreferenceConstants.PREF_WORKERS));
		assertEquals(pref.getInt(CreaterepoPreferenceConstants.PREF_CHANGELOG_LIMIT,
				prefStore.getInt(CreaterepoPreferenceConstants.PREF_CHANGELOG_LIMIT)),
				prefStore.getDefaultInt(CreaterepoPreferenceConstants.PREF_CHANGELOG_LIMIT));
		assertEquals(pref.getBoolean(CreaterepoPreferenceConstants.PREF_CHECK_TS,
				prefStore.getDefaultBoolean(CreaterepoPreferenceConstants.PREF_CHECK_TS)),
				prefStore.getDefaultBoolean(CreaterepoPreferenceConstants.PREF_CHECK_TS));
		assertEquals(pref.get(CreaterepoPreferenceConstants.PREF_CHECKSUM, prefStore.getDefaultString(CreaterepoPreferenceConstants.PREF_CHECKSUM)),
				prefStore.getDefaultString(CreaterepoPreferenceConstants.PREF_CHECKSUM));
		assertEquals(pref.get(CreaterepoPreferenceConstants.PREF_COMPRESSION_TYPE, prefStore.getDefaultString(CreaterepoPreferenceConstants.PREF_COMPRESSION_TYPE)),
				prefStore.getDefaultString(CreaterepoPreferenceConstants.PREF_COMPRESSION_TYPE));
	}

