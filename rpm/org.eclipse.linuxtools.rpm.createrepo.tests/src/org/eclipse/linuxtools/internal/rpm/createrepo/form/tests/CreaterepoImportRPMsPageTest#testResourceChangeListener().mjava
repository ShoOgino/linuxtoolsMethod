    /**
     * Test if deleting/adding an RPM into content folder updates the RPM list.
     *
     * @throws CoreException
     * @throws IOException
     */
    @Test
    public void testResourceChangeListener() throws CoreException, IOException {
        // delete the contents of the content folder
        for (IResource resource : project.getContentFolder().members()) {
            resource.delete(true, monitor);
        }
        // run in UI thread because accessing the tree in the import RPMs page
        Display.getDefault().syncExec(new Runnable() {
            @Override
            public void run() {
                Tree tree = importPageBot.widget(WidgetMatcherFactory.widgetOfType(Tree.class));
                assertNotNull(tree);
                // check items in tree are gone
                assertEquals(0, tree.getItemCount());
            }
        });
        // import a file again into the content folder
        URL rpmURL = FileLocator.find(FrameworkUtil
                .getBundle(CreaterepoProjectTest.class), new Path(TEST_RPM_LOC1), null);
        final File rpmFile = new File(FileLocator.toFileURL(rpmURL).getPath());
        assertTrue(rpmFile.exists());
        project.importRPM(rpmFile);
        // run in UI thread because accessing the tree in the import RPMs page
        Display.getDefault().syncExec(new Runnable() {
            @Override
            public void run() {
                Tree tree = importPageBot.widget(WidgetMatcherFactory.widgetOfType(Tree.class));
                assertNotNull(tree);
                // check if items are in tree
                assertEquals(1, tree.getItemCount());
                assertEquals(rpmFile.getName(), tree.getItem(0).getText());
            }
        });
    }

