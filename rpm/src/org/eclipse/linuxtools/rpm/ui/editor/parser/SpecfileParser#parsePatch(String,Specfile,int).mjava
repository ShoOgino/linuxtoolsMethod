	private SpecfileElement parsePatch(String lineText, Specfile specfile, int lineNumber) {
		
		SpecfilePatchMacro toReturn = null;
		
		List tokens = Arrays.asList(lineText.split("\\s+"));
		
		for (Iterator iter = tokens.iterator(); iter.hasNext();) {
			String token = (String) iter.next();
			
			// %patchN+
			try {
				if (token.startsWith("%patch")) {
					int patchNumber = Integer.parseInt(token.substring(6));
					if (specfile.getPatch(patchNumber) == null) {
						errorHandler
						.handleError(new SpecfileParseException(
								"Patch number " + patchNumber + " is not defined.",
								lineNumber, 0, lineText.length(),
								IMarker.SEVERITY_ERROR));
					}
					toReturn = new SpecfilePatchMacro(patchNumber);
				}
			} catch (NumberFormatException e) {
				errorHandler
				.handleError(new SpecfileParseException(
						"Patch number be an integer.",
						lineNumber, 0, lineText.length(),
						IMarker.SEVERITY_ERROR));
				return null;
			}
		}
		
		return (SpecfileElement) toReturn;
	}

