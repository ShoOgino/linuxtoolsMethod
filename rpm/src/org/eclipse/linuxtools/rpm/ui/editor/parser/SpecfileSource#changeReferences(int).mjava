	// Note that changeReferences assumes that the number of the source/patch
	// has *already been set*.  If this is not true, it will simply do nothing
	public void changeReferences(int oldPatchNumber) {
		Specfile specfile = this.getSpecfile();
		Pattern patchPattern = Pattern.compile("%patch" + oldPatchNumber);
		for (Iterator lineIter = getLinesUsed().iterator(); lineIter.hasNext();) {
			int lineNumber = ((Integer) lineIter.next()).intValue();
			String line;
			try {
				line = specfile.getLine(lineNumber);
				Matcher patchMatcher = patchPattern.matcher(line);
				if (!patchMatcher.find()) {
					System.out.println("error:  can't match " + patchPattern.pattern());
//					throw new BadLocationException("can't match " + patchPattern);
				}
				specfile.changeLine(lineNumber, line.replaceAll(patchPattern.pattern(), "%patch" + number));
			} catch (BadLocationException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}

