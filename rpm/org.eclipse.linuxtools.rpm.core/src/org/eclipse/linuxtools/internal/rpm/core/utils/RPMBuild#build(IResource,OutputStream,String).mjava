    /**
     *
     * Operations for actually running rpmbuild binary
     *
     * @param specFile
     *            The specfile used by rpmbuild
     * @param outStream
     *            The stream to write the output to.
     * @param buildParameter
     *            rpmbuild parameters
     * @return The return code of the build job.
     * @throws CoreException
     *             if the operation fails
     * @since 0.4
     */
    public IStatus build(IResource specFile, OutputStream outStream,
            String buildParameter) throws CoreException {
        if (specFile == null) {
            throw new CoreException(new Status(IStatus.ERROR,
                    IRPMConstants.RPM_CORE_ID, Messages.Specfile_not_found));
        }

        final List<String> command = new ArrayList<>();
        command.addAll(macroDefines);
        command.add(buildParameter);

        try {
            if (specFile.getLocation() == null) {
                return remoteBuild(specFile, outStream, command);
            } else {
                command.add(specFile.getLocation().toString());
                return Utils.runCommand(outStream, specFile.getProject(),
                        command.toArray(new String[command.size()]));
            }
        } catch (IOException | URISyntaxException e) {
            throw new CoreException(new Status(IStatus.ERROR,
                    IRPMConstants.RPM_CORE_ID, e.getMessage(), e));
        }
    }

