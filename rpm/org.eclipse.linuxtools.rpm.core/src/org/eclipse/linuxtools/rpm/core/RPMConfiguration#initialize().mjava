	/**
	 * Sets the internal folder fields according to stored properties
	 * in the workspace project, or according to the default properties
	 * if no stored properties are found.  If the folders do not exist,
	 * they are created.
	 * @throws CoreException if:
	 * <ul>
	 * <li>Getting or setting project properties fails</ul>
	 * <li>Creating project folders fails</li>
	 * </ul>
	 */
    private void initialize() throws CoreException {
		String pluginID = RPMCorePlugin.ID;
        
		String sourcesPath = 
			project.getPersistentProperty(new QualifiedName(pluginID, IRPMConstants.SOURCES_FOLDER));
		if(sourcesPath == null) {
			sourcesFolder = project.getFolder(IRPMConstants.SOURCES_FOLDER);
			if(!sourcesFolder.exists()) {
				sourcesFolder.create(false, true, null);
			}
			sourcesFolder.setDerived(true);
			project.setPersistentProperty(new QualifiedName(pluginID, IRPMConstants.SOURCES_FOLDER), 
	                sourcesFolder.getName());
        } else {
			sourcesFolder = project.getFolder(sourcesPath);
			if(!sourcesFolder.exists()) {
				sourcesFolder.create(false, true, null);
			}
        }
		
		String srcRpmPath = 
			project.getPersistentProperty(new QualifiedName(pluginID, IRPMConstants.SRPMS_FOLDER));
        if(srcRpmPath == null) {
			srpmsFolder = project.getFolder(IRPMConstants.SRPMS_FOLDER);
			if(!srpmsFolder.exists()) {
				srpmsFolder.create(false, true, null);
			}
			srpmsFolder.setDerived(true);
			project.setPersistentProperty(new QualifiedName(pluginID, IRPMConstants.SRPMS_FOLDER),
					srpmsFolder.getName());
        } else {
			srpmsFolder = project.getFolder(srcRpmPath);
			if(!srpmsFolder.exists()) {
				srpmsFolder.create(false, true, null);
			}
        }
		
		String buildPath = 
			project.getPersistentProperty(new QualifiedName(pluginID, IRPMConstants.BUILD_FOLDER));
        if(buildPath == null) {
            buildFolder = project.getFolder(IRPMConstants.BUILD_FOLDER);
            if(!buildFolder.exists()) {
				buildFolder.create(false, true, null);
			}
			buildFolder.setDerived(true);
			project.setPersistentProperty(new QualifiedName(pluginID, IRPMConstants.BUILD_FOLDER), 
					buildFolder.getName());
        } else {
			buildFolder = project.getFolder(buildPath);
			if(!buildFolder.exists()) {
				buildFolder.create(false, true, null);
			}
        }
		
		String rpmPath = 
			project.getPersistentProperty(new QualifiedName(pluginID, IRPMConstants.RPMS_FOLDER));
        if(rpmPath == null) {
			rpmsFolder = project.getFolder(IRPMConstants.RPMS_FOLDER);
			if(!rpmsFolder.exists()) {
				rpmsFolder.create(false, true, null);
			}
			rpmsFolder.setDerived(true);
			project.setPersistentProperty(new QualifiedName(pluginID, IRPMConstants.RPMS_FOLDER), 
	                rpmsFolder.getName());
        } else {
			rpmsFolder = project.getFolder(rpmPath);
			if(!rpmsFolder.exists()) {
				rpmsFolder.create(false, true, null);
			}
        }
		
		String specPath = 
			project.getPersistentProperty(new QualifiedName(pluginID, IRPMConstants.SPECS_FOLDER));
        if(specPath == null) {
            specsFolder = project.getFolder(IRPMConstants.SPECS_FOLDER);
            if(!specsFolder.exists()) {
				specsFolder.create(false, true, null);
			}
			specsFolder.setDerived(true);
			project.setPersistentProperty(new QualifiedName(pluginID, IRPMConstants.SPECS_FOLDER),
					specsFolder.getName());
        } else {
			specsFolder = project.getFolder(specPath);
			if(!specsFolder.exists()) {
				specsFolder.create(false, true, null);
			}
        }
    }

