	/**
	 * Finds a list of files to exclude from patch generation.  By default,
	 * all resources that are marked as derived are excluded from patch 
	 * generation.
	 * @return an array of project-relative paths of excluded files
	 * @throws CoreException if the operation fails
	 */
	private String[] findExcludedFiles() throws CoreException {
		Vector<String> excludes = new Vector<String>();
		IResource[] resources = getProject().members();
		for(int i=0; i < resources.length; i++) {
			find(resources[i], excludes);
		}

		String[] excludesArr = new String[excludes.size()];
		for(int i=0; i < excludes.size(); i++) {
			excludesArr[i] = excludes.get(i);
		}
		return excludesArr;
	}

