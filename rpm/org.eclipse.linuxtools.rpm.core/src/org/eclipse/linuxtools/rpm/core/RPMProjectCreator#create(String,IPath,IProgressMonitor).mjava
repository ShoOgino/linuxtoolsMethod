	/**
	 * Creates a project with the given name in the given location.
	 * 
	 * @param projectName
	 *            The name of the project.
	 * @param projectPath
	 *            The parent location of the project.
	 * @param monitor
	 *            Progress monitor to report back status.
	 * @return The newly created project.
	 * @throws CoreException If the location is wrong.
	 */
	public IProject create(String projectName, IPath projectPath,
			IProgressMonitor monitor) throws CoreException {
			IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
			IProject project = root.getProject(projectName);
			IProjectDescription description = ResourcesPlugin.getWorkspace()
					.newProjectDescription(project.getName());
			String parsedIPathString = null;
			if (!Platform.getLocation().equals(projectPath)) {
				parsedIPathString = projectPath.toString().replaceFirst(
						":/", "://"); //$NON-NLS-1$ //$NON-NLS-2$
				try {
					description.setLocationURI(new URI(parsedIPathString));
				} catch (URISyntaxException e) {
					throw new CoreException(new Status(IStatus.ERROR,
							IRPMConstants.RPM_CORE_ID, e.getMessage(), e));
				}
			}

			description
					.setNatureIds(new String[] { IRPMConstants.RPM_NATURE_ID });
			project.create(description, monitor);

			monitor.worked(10);
			project.open(monitor);
			new RPMProject(project, layout);
			return project;
	}

