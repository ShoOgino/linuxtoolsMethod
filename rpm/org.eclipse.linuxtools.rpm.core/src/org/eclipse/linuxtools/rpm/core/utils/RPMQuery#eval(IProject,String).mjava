    /**
     * Uses RPM to eval the given string.
     * @param project Underlying project.
     * @param toEval The string to be evaled.
     * @return The value of the evaluation.
     * @throws CoreException If there is IOException when calling.
     * @since 2.1
     */
    public static String eval(IProject project, String toEval) throws CoreException {
        IEclipsePreferences node = DefaultScope.INSTANCE
                .getNode(IRPMConstants.RPM_CORE_ID);
        String rpmCmd = node.get(IRPMConstants.RPM_CMD, ""); //$NON-NLS-1$
        List<String> command = new ArrayList<>();
        command.add(rpmCmd);
        command.add("--eval"); //$NON-NLS-1$
        command.add(toEval);
        try {
            return Utils.runCommandToString(project, command.toArray(new String[command.size()]));
        } catch (IOException e) {
            throw new CoreException(new Status(IStatus.ERROR,
                    IRPMConstants.RPM_CORE_ID, e.getMessage(), e));
        }
    }

