	private void createDirsRemote(IProgressMonitor monitor, IProject project,
			String parsedIPathString) throws CoreException {
		IRemoteFileProxy proxy = null;
		try {
			proxy = RemoteProxyManager.getInstance().getFileProxy(
					new URI(parsedIPathString));
		} catch (URISyntaxException e) {
			throw new CoreException(new Status(IStatus.ERROR,
					IRPMConstants.RPM_CORE_ID, e.getMessage(), e));
		}

		IFileStore iFileStoreSpecs = proxy
				.getResource(IRPMConstants.SPECS_FOLDER);
		iFileStoreSpecs.mkdir(EFS.NONE, monitor);
		project.getFolder(IRPMConstants.SPECS_FOLDER).create(true, true,
				monitor);

		IFileStore iFileStoreSources = proxy
				.getResource(IRPMConstants.SOURCES_FOLDER);
		iFileStoreSources.mkdir(EFS.NONE, monitor);
		project.getFolder(IRPMConstants.SOURCES_FOLDER).create(true, true,
				monitor);

		IFileStore iFileStoreBuild = proxy
				.getResource(IRPMConstants.BUILD_FOLDER);
		iFileStoreBuild.mkdir(EFS.NONE, monitor);
		project.getFolder(IRPMConstants.BUILD_FOLDER).create(true, true,
				monitor);

		IFileStore iFileStoreRPMs = proxy
				.getResource(IRPMConstants.RPMS_FOLDER);
		iFileStoreRPMs.mkdir(EFS.NONE, monitor);
		project.getFolder(IRPMConstants.RPMS_FOLDER)
				.create(true, true, monitor);

		IFileStore iFileStoreSRPMs = proxy
				.getResource(IRPMConstants.SRPMS_FOLDER);
		iFileStoreSRPMs.mkdir(EFS.NONE, monitor);
		project.getFolder(IRPMConstants.SRPMS_FOLDER).create(true, true,
				monitor);

	}

