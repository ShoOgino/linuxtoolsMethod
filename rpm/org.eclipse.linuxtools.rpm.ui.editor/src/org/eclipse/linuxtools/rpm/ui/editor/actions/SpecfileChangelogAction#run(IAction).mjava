	/**
	 * The action has been activated. The argument of the method represents the
	 * 'real' action sitting in the workbench UI.
	 * 
	 * @see IWorkbenchWindowActionDelegate#run
	 */
	public void run(IAction action) {
		IEditorPart editor = window.getActivePage().getActiveEditor();
		if (editor instanceof SpecfileEditor) {
			SpecfileEditor specEditor = (SpecfileEditor) editor;
			IDocument doc = specEditor.getDocumentProvider().getDocument(
					specEditor.getEditorInput());
			String[] positionCategories = doc.getPositionCategories();
			String contentTypesPositionCategory = null;

			// there is some random number suffix to the category positions,
			// we need to find the one we want
			for (String positionCategory: positionCategories) {
				if (positionCategory.startsWith("__content_types_category")) {
					contentTypesPositionCategory = positionCategory;
				}
			}

			if (contentTypesPositionCategory != null) {
				try {
					Position[] sectionPositions = doc
							.getPositions(contentTypesPositionCategory);
					ITypedRegion changelogPartition = null;
					for (Position position: sectionPositions) {
						int offset = position.getOffset();

						ITypedRegion partition = doc.getPartition(offset);
						if (partition.getType().equals(
								SpecfilePartitionScanner.SPEC_CHANGELOG))
							changelogPartition = partition;

					}

					// there was no changelog partition - add it.
					if (changelogPartition == null) {
						System.err
								.println("Did not get changelog partition. Please make me one!");
					}

					// now add the entry stub
					System.err.println("Got specfile partition: "
							+ changelogPartition.getOffset() + ","
							+ changelogPartition.getLength());
					String changelogText = doc.get(changelogPartition
							.getOffset(), changelogPartition.getLength());
					String[] changelogLines = changelogText.split("\n");
					StringBuilder buf = new StringBuilder();
					buf.append(changelogLines[0]).append("\n");
					buf.append(createChangelogEntry(specEditor.getSpecfile(), doc)).append("\n");
					buf.append(" - \n");
					int newCursorOffset = changelogPartition.getOffset() + buf.length() -1;
					
					for (String changelogLine: changelogLines) {
						buf.append(changelogLine).append("\n");
					}

					doc.replace(changelogPartition.getOffset(),
							changelogPartition.getLength(), buf.toString());
					specEditor.selectAndReveal(newCursorOffset, 0);
					specEditor.setFocus();
				} catch (BadPositionCategoryException e) {
					SpecfileLog.logError(e);
				} catch (BadLocationException e) {
					SpecfileLog.logError(e);
				}
			} else {
				// log error, we didn't find content type category positions,
				// WTF?
			}
		} else {
			// TODO: Log error.
			System.err.println("Got " + editor.getClass().toString()
					+ " editor");
		}
	}

