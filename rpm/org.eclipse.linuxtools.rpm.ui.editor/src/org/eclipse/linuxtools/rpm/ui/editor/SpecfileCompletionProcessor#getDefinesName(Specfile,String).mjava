	/**
	 * Get defines and patches as a String key->value pair for a given specfile
	 * and prefix.
	 * 
	 * @param specfile
	 *            to get defines from.
	 * @param prefix
	 *            used to find defines.
	 * @return a <code>HashMap</code> of defines.
	 * 
	 */
	private Map getDefinesName(Specfile specfile, String prefix) {
		// Get proposals for defines.
		Collection defines = specfile.getDefinesAsList();
		Map ret = new HashMap();
		String defineName;
		for (Iterator iterator = defines.iterator(); iterator.hasNext();) {
			SpecfileDefine define = (SpecfileDefine) iterator.next();
			defineName = "%" + define.getName();
			if (defineName.startsWith(prefix.replaceFirst("\\{", "")))
				ret.put(defineName, define.getStringValue());
		}
		// get proposals for patches
		Collection patches = specfile.getPatchesAsList();
		String patchName;
		for (Iterator iterator = patches.iterator(); iterator.hasNext();) {
			SpecfileSource patch = (SpecfileSource) iterator.next();
			patchName = "%patch" + patch.getNumber();
			System.out.println(patchName);
			if (patchName.startsWith(prefix))
				ret.put(patchName.toLowerCase(), SpecfileHover
						.getSourceOrPatchValue(specfile, "patch"
								+ patch.getNumber()));
		}
		return ret;
	}

