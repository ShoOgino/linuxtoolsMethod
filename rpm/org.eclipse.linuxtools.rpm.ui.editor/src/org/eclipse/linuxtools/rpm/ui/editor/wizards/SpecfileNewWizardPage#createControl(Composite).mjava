    @Override
    public void createControl(Composite parent) {
        final Composite container = new Composite(parent, SWT.NULL);
        GridLayout layout = new GridLayout();
        container.setLayout(layout);
        layout.numColumns = 3;
        layout.verticalSpacing = 9;

        // Project
        Label label = new Label(container, SWT.NULL);
        label.setText(Messages.SpecfileNewWizardPage_11);
        projectText = new Text(container, SWT.BORDER | SWT.SINGLE);
        gd = new GridData(GridData.FILL_HORIZONTAL);
        projectText.setLayoutData(gd);
        projectText.addModifyListener(new ModifyListener() {
            @Override
            public void modifyText(ModifyEvent e) {
                dialogChanged();
            }
        });
        Button button = new Button(container, SWT.PUSH);
        button.setText(Messages.SpecfileNewWizardPage_12);
        button.addSelectionListener(new SelectionAdapter() {
            @Override
            public void widgetSelected(SelectionEvent e) {
                handleBrowse();
            }
        });

        // Template to use
        label = new Label(container, SWT.NULL);
        label.setText(Messages.SpecfileNewWizardPage_13);
        Combo templateCombo = new Combo(container, SWT.NULL);
        try {
            populateTemplateCombo(templateCombo);
        } catch (CoreException e2) {
            SpecfileLog.logError(e2);
        }
        // empty label for the last row.
        label = new Label(container, SWT.NULL);
        templateCombo.addModifyListener(new ModifyListener() {
            @Override
            public void modifyText(ModifyEvent e) {
                selectedTemplate = ((Combo) e.getSource()).getText();
                InputStream inputStream = runRpmdevNewSpec(selectedTemplate);
                LineNumberReader reader = new LineNumberReader(
                        new InputStreamReader(inputStream));
                String line;
                try {
                    content = ""; //$NON-NLS-1$
                    setDefaultValues();
                    while ((line = reader.readLine()) != null) {
                        if (line.startsWith("Name:")) { //$NON-NLS-1$
                            setTemplateTagValue(nameText, line);
                        }
                        if (line.startsWith("Version:")) { //$NON-NLS-1$
                            setTemplateTagValue(versionText, line);
                        }
                        if (line.startsWith("Summary:")) { //$NON-NLS-1$
                            setTemplateTagValue(summaryText, line);
                        }
                        if (line.startsWith("Group:")) { //$NON-NLS-1$
                            String[] items = line.split(":", 2); //$NON-NLS-1$
                            String value = items[1].trim();
                            if (!value.equals("")) {//$NON-NLS-1$
                                groupCombo.setText(value);
                            }
                        }
                        if (line.startsWith("License:")) { //$NON-NLS-1$
                            setTemplateTagValue(licenseText, line);
                        }
                        if (line.startsWith("URL:")) { //$NON-NLS-1$
                            setTemplateTagValue(urlText, line);
                        }
                        if (line.startsWith("Source0:")) { //$NON-NLS-1$
                            setTemplateTagValue(source0Text, line);
                        }
                        content += line + '\n';
                    }
                } catch (IOException e1) {
                    SpecfileLog.logError(e1);
                }
            }
        });

        // Package Name
        nameText = setTextItem(container, Messages.SpecfileNewWizardPage_14);

        // Package Version
        versionText = setTextItem(container, Messages.SpecfileNewWizardPage_15);

        // Package Summary
        summaryText = setTextItem(container, Messages.SpecfileNewWizardPage_16);

        // Package Group
        label = new Label(container, SWT.NULL);
        label.setText(Messages.SpecfileNewWizardPage_17);
        groupCombo = new Combo(container, SWT.NULL);
        populateGroupCombo(groupCombo);
        // empty label for the last row.
        new Label(container, SWT.NULL);

        // Package License
        licenseText = setTextItem(container, Messages.SpecfileNewWizardPage_18);

        // Package URL
        urlText = setTextItem(container, Messages.SpecfileNewWizardPage_19);

        // Package Source0
        source0Text = setTextItem(container, Messages.SpecfileNewWizardPage_20);

        initialize();
        dialogChanged();
        setControl(container);
    }

