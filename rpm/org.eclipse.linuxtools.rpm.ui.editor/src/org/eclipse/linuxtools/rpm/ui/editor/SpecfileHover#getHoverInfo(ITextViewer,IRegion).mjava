	public String getHoverInfo(ITextViewer textViewer, IRegion hoverRegion) {
		if (hoverRegion == null || hoverRegion.getLength() == 0)
			return null;
		
		Specfile spec = editor.getSpecfile();
		
		
		String currentSelection;
		try {
			currentSelection = textViewer.getDocument().get(hoverRegion.getOffset() + 1, hoverRegion.getLength() - 1);
		} catch (BadLocationException e) {
			return null;
		}
		
                
                // First we try to get a define based on the given name
		SpecfileDefine define = spec.getDefine(currentSelection);
		
                String value = currentSelection + ": ";
                
		if (define != null) {
                    value += define.getStringValue();
                    return value;
                }
                
		String macroLower = currentSelection.toLowerCase();

		// If there's no such define we try to see if it corresponds to
		// a Source or Patch declaration
		String retrivedValue = getSourceOrPatchValue(spec, macroLower);
		if (retrivedValue != null) 
			return value += retrivedValue;
		else {
			// If it does not correspond to a Patch or Source macro, try to find it
			// in the macro proposals list.
			retrivedValue = getMacroValueFromMacroList(currentSelection);
			if (retrivedValue != null) 
				return value += retrivedValue;
			else {
				// If it does not correspond to a macro in the list, try to find it
				// in the RPM list. 
				retrivedValue = Activator.getDefault().getRpmPackageList().getValue(currentSelection.replaceFirst(":",""));
				if (retrivedValue != null)
					return retrivedValue;
			}
		}
       // We return null in other cases, so we don't show hover information
       // for unrecognized macros and RPM packages.
       return null;
	}

