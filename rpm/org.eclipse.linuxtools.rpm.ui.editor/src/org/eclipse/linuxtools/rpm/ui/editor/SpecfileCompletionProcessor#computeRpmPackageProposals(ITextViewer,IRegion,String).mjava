	/**
	 * Compute RPM package proposals, these proposals are usable only in the preambule section.
	 * Return an array of RPM macro proposals for the given viewer, region, specfile, prefix.
	 * 
	 * @param viewer
	 *            the viewer for which the context is created
	 * @param region
	 *            the region into <code>document</code> for which the context
	 *            is created
	 * @param prefix
	 * 			  the prefix string
	 * @return 
	 *            a ICompletionProposal[]
	 */
	private ICompletionProposal[] computeRpmPackageProposals(ITextViewer viewer,
			IRegion region, String prefix) {
		List<String[]> rpmPkgProposalsList = Activator.getDefault().getRpmPackageList().getProposals(prefix);
		if (rpmPkgProposalsList == null)
			return new ICompletionProposal[0];
		ArrayList<CompletionProposal> proposals = new ArrayList<CompletionProposal>();
		String[] item;
		Iterator<String[]> iterator = rpmPkgProposalsList.iterator();
		while (iterator.hasNext()) {
			item = iterator.next();
			proposals.add(new CompletionProposal(item[0], 
					region.getOffset(), region.getLength(),
					item[0].length(), Activator.getDefault().getImage(PACKAGE_ICON),
					item[0], null, item[1]));
		}
		return proposals.toArray(new ICompletionProposal[proposals.size()]);
	}

