	/**
	 * Create a template context for the givens Specfile, offset.
	 * 
	 * @param specfile
	 *            the sepcfile element
	 * @param offset
	 *            the offset of the <code>documment</code>
	 * @return a TemplateContextType
	 */
	private TemplateContextType getContextType(Specfile specfile, int offset) {
		SpecfileElement[] elements = specfile.getSections();
			if (elements.length == 0 || offset < elements[0].getLineEndPosition()) {
				return Activator.getDefault().getContextTypeRegistry()
						.getContextType(PREAMBLE_SECTION_TEMPLATE);
			} else if (elements.length == 1 || offset < elements[1].getLineEndPosition()) {
				return Activator.getDefault().getContextTypeRegistry()
						.getContextType(PRE_SECTION_TEMPLATE);
			} else if (elements.length == 2 || offset < elements[2].getLineEndPosition()) {
				return Activator.getDefault().getContextTypeRegistry()
						.getContextType(BUILD_SECTION_TEMPLATE);
			} else if (elements.length == 3 || offset < elements[3].getLineEndPosition()) {
				return Activator.getDefault().getContextTypeRegistry()
						.getContextType(INSTALL_SECTION_TEMPLATE);
			} else {
				return Activator.getDefault().getContextTypeRegistry()
						.getContextType(CHANGELOG_SECTION_TEMPLATE);
			}
		
	}

