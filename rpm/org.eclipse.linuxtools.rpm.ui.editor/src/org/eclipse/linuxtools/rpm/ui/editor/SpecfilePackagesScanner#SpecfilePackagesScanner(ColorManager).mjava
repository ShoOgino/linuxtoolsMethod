	public SpecfilePackagesScanner(ColorManager manager) {
		IToken packageToken = new Token(new TextAttribute(manager
				.getColor(ISpecfileColorConstants.PACKAGES), null, SWT.NONE));

		IToken tagToken = new Token(new TextAttribute(manager
				.getColor(ISpecfileColorConstants.TAGS)));

		IToken macroToken = new Token(new TextAttribute(manager
				.getColor(ISpecfileColorConstants.MACROS)));

		List<IRule> rules = new ArrayList<IRule>();

		// %{ .... }
		rules.add(new SingleLineRule("%{", "}", macroToken));

		// BuildRequires:, ...
		WordRule wordRule = new WordRule(new TagWordDetector(), Token.UNDEFINED);
		for (int i = 0; i < PACKAGES_TAGS.length; i++)
			wordRule.addWord(PACKAGES_TAGS[i] + ":", tagToken);
		rules.add(wordRule);

		// RPM packages
		wordRule = new WordRule(new PackageWordDetector(), Token.UNDEFINED);
		List<String[]> rpmPackages = Activator.getDefault().getRpmPackageList()
				.getProposals("");
		char[] startWith = {' ', '\t', ',', ':'};
		for (String[] item: rpmPackages){
			// FIXME Perhaps, that can slow down the scanning?
			for (int i = 0; i < startWith.length; i++) {
				wordRule.addWord(startWith[i] + item[0], packageToken);
			}
		}
		rules.add(wordRule);

		IRule[] result = new IRule[rules.size()];
		rules.toArray(result);
		setRules(result);
	}

