	public SpecfilePackagesScanner(ColorManager manager) {
		IToken packageToken = new Token(new TextAttribute(manager
				.getColor(ISpecfileColorConstants.PACKAGES), null, SWT.NONE));

		IToken tagToken = new Token(new TextAttribute(manager
				.getColor(ISpecfileColorConstants.TAGS)));

		IToken macroToken = new Token(new TextAttribute(manager
				.getColor(ISpecfileColorConstants.MACROS)));

		List<IRule> rules = new ArrayList<IRule>();

		// %{ .... }
		rules.add(new SingleLineRule("%{", "}", macroToken)); //$NON-NLS-1$ //$NON-NLS-2$

		// BuildRequires:, ...
		WordRule wordRule = new WordRule(new TagWordDetector(), Token.UNDEFINED);
		for (String packageTag : PACKAGES_TAGS) {
			wordRule.addWord(packageTag + ":", tagToken); //$NON-NLS-1$
		}
		rules.add(wordRule);

		// RPM packages
		wordRule = new WordRule(new PackageWordDetector(), Token.UNDEFINED);
		List<String[]> rpmPackages = Activator.getDefault().getRpmPackageList()
				.getProposals(""); //$NON-NLS-1$
		char[] startWith = {' ', '\t', ',', ':'};
		for (String[] item: rpmPackages){
			// FIXME Perhaps, that can slow down the scanning?
			for (char startChar : startWith) {
				wordRule.addWord(startChar + item[0], packageToken);
			}
		}
		rules.add(wordRule);

		IRule[] result = new IRule[rules.size()];
		rules.toArray(result);
		setRules(result);
	}

