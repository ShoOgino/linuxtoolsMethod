	public SpecfileElement parseLine(String lineText, Specfile specfile,
			int lineNumber) {

		if (lineText.startsWith("%")) //$NON-NLS-1$
			return parseMacro(lineText, specfile, lineNumber);

		for (String simpleDefinition : simpleDefinitions) {
			if (lineText.startsWith(simpleDefinition + DEFINE_SEPARATOR)) {
				return parseSimpleDefinition(lineText, specfile, lineNumber,
						false);
			}
		}
		for (String directValuesDefinition : directValuesDefinitions) {
			if (lineText.startsWith(directValuesDefinition + DEFINE_SEPARATOR)) {
				return parseDirectDefinition(lineText, specfile, lineNumber);
			}
		}
		for (String directValuesDefinition : packageLevelDefinitions) {
			if (lineText.startsWith(directValuesDefinition + DEFINE_SEPARATOR)) {
				SpecfileElement definition = parseDirectDefinition(lineText, specfile, lineNumber);
				if (directValuesDefinition.equals(RpmTags.REQUIRES)){
					if (activePackage != null) {
						activePackage.addRequire((SpecfileTag)definition);
					} else {
						specfile.addRequire((SpecfileTag)definition);
					}
				}
				return definition;
			}
		}

		if (lineText.startsWith(complexDefinitions[0])
				&& lineText.contains(DEFINE_SEPARATOR)) {
			return parseComplexDefinition(lineText, lineNumber,
					SourceType.SOURCE);
		} else if (lineText.startsWith(complexDefinitions[1])
				&& lineText.contains(DEFINE_SEPARATOR)) {
			return parseComplexDefinition(lineText, lineNumber,
					SourceType.PATCH);
		} else if (lineText.startsWith("BuildRequires")) { //$NON-NLS-1$
			return parseBuildRequire(lineText, lineNumber, specfile);
		}

		return null;
	}

