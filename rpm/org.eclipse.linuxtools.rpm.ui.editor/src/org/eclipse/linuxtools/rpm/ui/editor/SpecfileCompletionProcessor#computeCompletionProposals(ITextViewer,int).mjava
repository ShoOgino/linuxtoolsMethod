	/*
	 * (non-Javadoc)
	 * 
	 * @see org.eclipse.jface.text.contentassist.IContentAssistProcessor#computeCompletionProposals(org.eclipse.jface.text.ITextViewer,
	 *      int)
	 */
	public ICompletionProposal[] computeCompletionProposals(ITextViewer viewer,
			int offset) {
		List result = new ArrayList();
		Specfile specfile = sEditor.getSpecfile();
		if (specfile == null)
			return null;
		ITextSelection selection = (ITextSelection) viewer
				.getSelectionProvider().getSelection();
		// adjust offset to start of normalized selection:
		if (selection.getOffset() != offset)
			offset = selection.getOffset();
		String prefix = getPrefix(viewer, offset);
		Region region = new Region(offset - prefix.length(), prefix.length()
				+ selection.getLength());
		ICompletionProposal[] templateProposals = computeTemplateProposals(
				viewer, region, specfile, prefix);
		ICompletionProposal[] rpmMacroProposals = computeRpmMacroProposals(
				viewer, region, prefix);
		ICompletionProposal[] rpmPackageProposals = computeRpmPackageProposals(
				viewer, region, specfile, prefix);		
		result.addAll(Arrays.asList(templateProposals));
		result.addAll(Arrays.asList(rpmMacroProposals));
		result.addAll(Arrays.asList(rpmPackageProposals));
		return (ICompletionProposal[]) result
				.toArray(new ICompletionProposal[result.size()]);
	}

