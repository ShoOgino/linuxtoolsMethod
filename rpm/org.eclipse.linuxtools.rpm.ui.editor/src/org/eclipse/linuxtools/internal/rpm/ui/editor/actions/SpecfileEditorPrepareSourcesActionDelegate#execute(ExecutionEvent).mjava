	public Object execute(ExecutionEvent event) throws ExecutionException {
		final Shell shell = HandlerUtil.getActiveShellChecked(event);
		final SpecfileParser specparser = new SpecfileParser();
		final IResource resource = RPMHandlerUtils.getResource(event);
		final RPMProject rpj = RPMHandlerUtils.getRPMProject(resource);
		final IFile workFile = (IFile) rpj.getSpecFile();
		final Specfile specfile = specparser.parse(workFile);

		if (!DownloadFile(shell, rpj, specfile))
			return null;

		Job job = new Job("Preparing sources") { //$NON-NLS-1$
			@Override
			protected IStatus run(IProgressMonitor monitor) {
				monitor.beginTask(
						NLS.bind(Messages.PrepareSources_prepareSources, rpj.getSpecFile().getName()), IProgressMonitor.UNKNOWN);
				int offset = rpj.getSpecFile().getName().toString()
						.lastIndexOf("."); //$NON-NLS-1$
				MessageConsoleStream out = getConsole(
						rpj.getSpecFile().getName().toString()
								.substring(0, offset)).newMessageStream();
				IStatus is = null;
				try {
					is = rpj.buildPrep(out);
				} catch (CoreException e) {
					SpecfileLog.logError(Messages.PrepareSources_coreException,
							e);
					RPMUtils.showErrorDialog(shell,
							Messages.PrepareSources_error,
							Messages.PrepareSources_coreException);
					return is;
				} finally {
					monitor.done();
				}
				return is;
			}
		};
		job.setUser(true); // suppress UI. That's done in encapsulated
		job.schedule();
		return null;
	}

