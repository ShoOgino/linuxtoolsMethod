	@Override
	public IPresentationReconciler getPresentationReconciler(ISourceViewer sourceViewer) {
		PresentationReconciler reconciler = new PresentationReconciler();
		SpecfileScanner scanner = new SpecfileScanner();
		DefaultDamagerRepairer dr = new DefaultDamagerRepairer(scanner);
		reconciler.setDamager(dr, IDocument.DEFAULT_CONTENT_TYPE);
		reconciler.setRepairer(dr, IDocument.DEFAULT_CONTENT_TYPE);

		dr = new DefaultDamagerRepairer(new SpecfilePackagesScanner());
		reconciler.setDamager(dr, SpecfilePartitionScanner.SPEC_PACKAGES);
		reconciler.setRepairer(dr, SpecfilePartitionScanner.SPEC_PACKAGES);

		dr = new DefaultDamagerRepairer(scanner);
		reconciler.setDamager(dr, SpecfilePartitionScanner.SPEC_PREP);
		reconciler.setRepairer(dr, SpecfilePartitionScanner.SPEC_PREP);

		dr = new DefaultDamagerRepairer(scanner);
		reconciler.setDamager(dr, SpecfilePartitionScanner.SPEC_SCRIPT);
		reconciler.setRepairer(dr, SpecfilePartitionScanner.SPEC_SCRIPT);

		dr = new DefaultDamagerRepairer(scanner);
		reconciler.setDamager(dr, SpecfilePartitionScanner.SPEC_FILES);
		reconciler.setRepairer(dr, SpecfilePartitionScanner.SPEC_FILES);

		dr = new DefaultDamagerRepairer(scanner);
		reconciler.setDamager(dr, SpecfilePartitionScanner.SPEC_GROUP);
		reconciler.setRepairer(dr, SpecfilePartitionScanner.SPEC_GROUP);

		dr = new DefaultDamagerRepairer(new SpecfileChangelogScanner());
		reconciler.setDamager(dr, SpecfilePartitionScanner.SPEC_CHANGELOG);
		reconciler.setRepairer(dr, SpecfilePartitionScanner.SPEC_CHANGELOG);

		return reconciler;
	}

