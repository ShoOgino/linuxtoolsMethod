    @Override
    public Object execute(ExecutionEvent event) throws ExecutionException {
        IEditorPart editor = HandlerUtil.getActiveEditor(event);
        if (!(editor instanceof SpecfileEditor)) {
            return null;
        }

        SpecfileEditor specfileEditor = (SpecfileEditor) editor;
        IDocument document = specfileEditor.getAdapter(IDocument.class);
        ISelection currentSelection = specfileEditor.getSpecfileSourceViewer()
                .getSelection();
        if (currentSelection instanceof ITextSelection) {
            ITextSelection selection = (ITextSelection) currentSelection;
            String selectedContent = ""; //$NON-NLS-1$
            try {
                int begin = document.getLineOffset(selection.getStartLine());
                StringBuilder sb = new StringBuilder(document.get().substring(0,
                        begin));
                String content = document.get().substring(begin,
                        selection.getOffset() + selection.getLength());
                if (linesContentCommentChar(content)) {
                    if (selection.getStartLine() == selection.getEndLine()) {
                        selectedContent = ISpecfileSpecialSymbols.COMMENT_START + content;
                    } else {
                        selectedContent = ISpecfileSpecialSymbols.COMMENT_START + content.replaceAll("\n", "\n#"); //$NON-NLS-1$ //$NON-NLS-2$
                    }
                } else {
                    selectedContent = content.replaceFirst(ISpecfileSpecialSymbols.COMMENT_START, "").replaceAll( //$NON-NLS-1$
                            "\n#", "\n"); //$NON-NLS-1$ //$NON-NLS-2$
                }
                sb.append(selectedContent);
                sb.append(document.get().substring(
                        selection.getOffset() + selection.getLength(),
                        document.get().length()));
                document.set(sb.toString());
                specfileEditor.setHighlightRange(selection.getOffset(), selection
                        .getLength(), true);
            } catch (BadLocationException e) {
                SpecfileLog.logError(e);
            }
        }
        return null;
    }

