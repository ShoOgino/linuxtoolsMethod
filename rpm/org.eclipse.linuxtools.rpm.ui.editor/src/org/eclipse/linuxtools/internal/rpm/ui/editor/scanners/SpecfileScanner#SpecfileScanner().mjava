	public SpecfileScanner() {
		super();
		ColorRegistry colors = PlatformUI.getWorkbench().getThemeManager().getCurrentTheme().getColorRegistry();
		IToken sectionToken = new Token(
				new TextAttribute(colors.get(ISpecfileColorConstants.SECTIONS), null, SWT.ITALIC));

		IToken macroToken = new Token(new TextAttribute(colors.get(ISpecfileColorConstants.MACROS)));

		IToken keywordToken = new Token(
				new TextAttribute(colors.get(ISpecfileColorConstants.KEYWORDS), null, SWT.BOLD));

		IToken tagToken = new Token(new TextAttribute(colors.get(ISpecfileColorConstants.TAGS)));

		IToken commentToken = new Token(new TextAttribute(colors.get(ISpecfileColorConstants.COMMENT)));

		List<IRule> rules = new ArrayList<>();

		rules.add(new CommentRule(commentToken));
		rules.add(new MacroRule(macroToken));

		// %define, %make, ...
		WordRule wordRule = new WordRule(new MacroWordDetector(), Token.UNDEFINED);
		for (String definedMacro : DEFINED_MACROS) {
			wordRule.addWord(definedMacro, macroToken);
		}
		rules.add(wordRule);

		// %patch[0-9]+[\ \t]
		rules.add(new StringWithEndingRule("%patch", new PatchNumberDetector(), //$NON-NLS-1$
				macroToken, false));

		// %if, %else ...
		wordRule = new WordRule(new KeywordWordDetector(), Token.UNDEFINED);
		for (String keyword : KEYWORDS) {
			wordRule.addWord(keyword, keywordToken);
		}
		rules.add(wordRule);

		// %prep, %build, ...
		wordRule = new WordRule(new KeywordWordDetector(), Token.UNDEFINED);
		for (String section : SECTIONS) {
			wordRule.addWord(section, sectionToken);
		}
		rules.add(wordRule);

		// Name:, Summary:, ...
		wordRule = new WordRule(new TagWordDetector(), Token.UNDEFINED);
		for (String tag : TAGS) {
			wordRule.addWord(tag + ":", tagToken); //$NON-NLS-1$
		}
		rules.add(wordRule);

		// Source[0-9]*:, Patch[0-9]*:
		rules.add(new StringWithEndingRule("Source", //$NON-NLS-1$
				new SuffixNumberDetector(), tagToken, false));
		rules.add(new StringWithEndingRule("Patch", new SuffixNumberDetector(), //$NON-NLS-1$
				tagToken, false));

		IRule[] result = new IRule[rules.size()];
		rules.toArray(result);
		setRules(result);
		setDefaultReturnToken(new Token(new TextAttribute(colors.get(ISpecfileColorConstants.DEFAULT))));
	}

