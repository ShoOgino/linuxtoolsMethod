	/**
	 * Run the Job if it's needed according with the configuration set in the
	 * preference page.
	 *
	 * @param async
	 *            Whether to run synchronously or asynchronously.
	 */
	public static void update(boolean async) {
		boolean runJob = false;
		// Today's date
		Date today = new Date();
		if (STORE.getBoolean(PreferenceConstants.P_RPM_LIST_BACKGROUND_BUILD)) {
			int period = STORE.getInt(PreferenceConstants.P_RPM_LIST_BUILD_PERIOD);
			// each time that the plugin is loaded.
			if (period == 1) {
				runJob = true;
			} else {
				long lastBuildTime = STORE.getLong(PreferenceConstants.P_RPM_LIST_LAST_BUILD);
				if (lastBuildTime == 0) {
					runJob = true;
				} else {
					long interval = (today.getTime() - lastBuildTime) / (1000 * 60 * 60 * 24);
					// run the job once a week
					if (period == 2 && interval >= 7) {
						runJob = true;
						// run the job once a month
					} else if (period == 3 && interval >= 30) {
						runJob = true;
					}
				}
			}
			if (runJob) {
				if (job == null) {
					job = new RpmPackageBuildProposalsJob(Messages.RpmPackageBuildProposalsJob_0);
				} else {
					job.cancel();
				}
				if (async) {
					job.schedule();
				} else {
					job.run(new NullProgressMonitor());
				}
				STORE.setValue(PreferenceConstants.P_RPM_LIST_LAST_BUILD, today.getTime());
			}
		} else {
			if (job != null) {
				job.cancel();
				job = null;
			}
		}
	}

