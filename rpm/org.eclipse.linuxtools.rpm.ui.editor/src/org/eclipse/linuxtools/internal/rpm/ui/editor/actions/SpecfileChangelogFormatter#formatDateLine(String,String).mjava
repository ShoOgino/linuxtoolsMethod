    public String formatDateLine(String authorName, String authorEmail) {
    	String dateLine;
        Specfile specfile = getParsedSpecfile();
        SpecfileElement resolveElement = new SpecfileElement();
        resolveElement.setSpecfile(specfile);
        String epoch = specfile.getEpoch() == -1 ? EMPTY_STRING : (specfile.getEpoch() + ":"); //$NON-NLS-1$
        String version = specfile.getVersion();
        String release = specfile.getRelease();
        
        // remove the dist macro if it exist in the release string.
        release = release.replaceAll("\\%\\{\\?dist\\}", EMPTY_STRING); //$NON-NLS-1$
     
        // default format
        dateLine = MessageFormat.format("* {0} {1} <{2}> {3}{4}-{5}", formatTodaysDate(), authorName, //$NON-NLS-1$
				authorEmail, epoch, version, release);

        String format = Activator.getDefault().getPreferenceStore().getString(PreferenceConstants.P_CHANGELOG_ENTRY_FORMAT);
        if (format.equals(PreferenceConstants.P_CHANGELOG_ENTRY_FORMAT_VERSIONED_WITH_SEPARATOR)) {
        	dateLine =  MessageFormat.format("* {0} {1} <{2}> - {3}{4}-{5}", formatTodaysDate(), //$NON-NLS-1$
					authorName, authorEmail, epoch, version, release);
        
        } else if (format.equals(PreferenceConstants.P_CHANGELOG_ENTRY_FORMAT_UNVERSIONED)) {
        	dateLine =  MessageFormat
					.format("* {0} {1} <{2}>", formatTodaysDate(), authorName, authorEmail); //$NON-NLS-1$
        }
        
       	dateLine = UiUtils.resolveDefines(specfile, dateLine);
        return dateLine;

    }

