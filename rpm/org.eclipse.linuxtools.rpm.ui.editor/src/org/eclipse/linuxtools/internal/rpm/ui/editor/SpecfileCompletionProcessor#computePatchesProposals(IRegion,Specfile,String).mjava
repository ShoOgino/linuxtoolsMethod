	/**
	 * Compute patches proposals, these proposals are usable in the whole document.
	 * Return an array of patches proposals for the given viewer, region, prefix.
	 *
	 * @param viewer
	 *            the viewer for which the context is created
	 * @param region
	 *            the region into <code>document</code> for which the context
	 *            is created
	 * @param prefix
	 * 			  the prefix string to find
	 * @return
	 *            a ICompletionProposal[]
	 */
	private List<ICompletionProposal> computePatchesProposals(IRegion region,
			Specfile specfile, String prefix) {
		// grab patches and put them into the proposals map
		Map<String, String> patchesProposalsMap = getPatches(specfile, prefix);
		ArrayList<ICompletionProposal> proposals = new ArrayList<ICompletionProposal>();
		if (patchesProposalsMap != null) {
			for (Map.Entry<String, String> entry : patchesProposalsMap
					.entrySet()) {
				proposals.add(new CompletionProposal(entry.getKey(), region
						.getOffset(), region.getLength(), entry.getKey()
						.length(), Activator.getDefault().getImage(PATCH_ICON),
						entry.getKey(), null, entry.getValue()));
			}
		}
		return proposals;
	}

