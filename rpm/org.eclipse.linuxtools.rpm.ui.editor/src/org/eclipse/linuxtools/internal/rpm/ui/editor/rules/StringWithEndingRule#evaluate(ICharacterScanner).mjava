	public IToken evaluate(ICharacterScanner scanner) {
		int c = scanner.read();
		fBuffer.setLength(0);

		for (int i = 0; i < fStartingSequence.length(); i++) {
			fBuffer.append((char) c);
			if (fStartingSequence.charAt(i) != c) {
				unreadBuffer(scanner);
				return Token.UNDEFINED;
			}
			c = scanner.read();
		}

		if (fDetector.isWordStart((char) c)) {
			if (fColumn == UNDEFINED || (fColumn == scanner.getColumn() - 1)) {

				do {
					fBuffer.append((char) c);
					c = scanner.read();
				} while (c != ICharacterScanner.EOF
						&& fDetector.isWordPart((char) c));

				if (c != ICharacterScanner.EOF && !fDetector.isEndingCharacter((char) c)) {
					unreadBuffer(scanner);
					return Token.UNDEFINED;
				}

				return token;
			}

		}

		if (!fMandatoryEndSequence && fDetector.isEndingCharacter((char) c)) {
			return token;
		}
		scanner.unread();

		unreadBuffer(scanner);
		return Token.UNDEFINED;
	}

