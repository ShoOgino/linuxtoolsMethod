    // Note that changeReferences assumes that the number of the source/patch
    // has *already been set*. If this is not true, it will simply do nothing
    public void changeReferences(int oldPatchNumber) {
        Specfile specfile = this.getSpecfile();
        Pattern patchPattern;
        if (oldPatchNumber == 0) {
            patchPattern = Pattern
                    .compile("%patch" + oldPatchNumber + "|%patch"); //$NON-NLS-1$ //$NON-NLS-2$
        } else {
            patchPattern = Pattern.compile("%patch" + oldPatchNumber); //$NON-NLS-1$
        }
        for (int lineNumber : getLinesUsed()) {
            String line;
            try {
                line = specfile.getLine(lineNumber);
                Matcher patchMatcher = patchPattern.matcher(line);
                if (!patchMatcher.find()) {
                    System.out
                            .println(Messages.getString("SpecfileSource.0") + patchPattern.pattern()); //$NON-NLS-1$
                    // throw new BadLocationException("can't match " +
                    // patchPattern);
                }
                specfile.changeLine(lineNumber, line.replaceAll(
                        patchPattern.pattern(),
                        Messages.getString("SpecfileSource.1") + number)); //$NON-NLS-1$
            } catch (BadLocationException e) {
                SpecfileLog.logError(e);
            }
        }
    }

