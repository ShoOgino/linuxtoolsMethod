	/**
	 * Resolve defines for a given string. Defines in the string that are not found
	 * or have some other error will remain unchanged in the returned string.
	 *
	 * @param specfile        The specfile containing the string to resolve.
	 * @param stringToResolve The string to resolve.
	 * @return The resolved string.
	 */
	public static String resolveDefines(Specfile specfile, String stringToResolve) {
		String workingString = stringToResolve;
		SpecfileDefine define;
		try {
			Pattern variablePattern = Pattern.compile("%\\{(\\S+?)\\}"); //$NON-NLS-1$
			Matcher variableMatcher = variablePattern.matcher(stringToResolve);
			Set<String> variablesFound = new HashSet<>();
			while (variableMatcher.find()) {
				String variable = variableMatcher.group(1);
				if (variablesFound.contains(variable)) {
					continue;
				}
				define = specfile.getDefine(variable);
				if (define != null && !stringToResolve.equals(define.getUnresolvedStringValue())) {
					workingString = workingString.replaceAll("\\%\\{" + variable + "\\}", define.getStringValue()); //$NON-NLS-1$ //$NON-NLS-2$
				}
			}
			return workingString;
		} catch (Exception e) {
			return stringToResolve;
		}
	}

