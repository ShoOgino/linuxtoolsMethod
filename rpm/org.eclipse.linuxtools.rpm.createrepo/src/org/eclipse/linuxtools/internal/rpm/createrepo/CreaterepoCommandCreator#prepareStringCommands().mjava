	/**
	 * Prepare the commands that require a string passed with them
	 * when executing.
	 *
	 * @return The command options to add.
	 */
	public List<String> prepareStringCommands() {
		List<String> commands = new ArrayList<String>();
		for (String arg : STRING_COMMANDS) {
			String value = project ? projectPreferences.get(arg, preferenceStore.getDefaultString(arg))
					: preferenceStore.getString(arg);
			arg = ICreaterepoConstants.DASH.concat(arg);
			if (!value.isEmpty()) {
				commands.add(arg);
				commands.add(value);
			}
		}
		for (String arg : STRING_META_COMMANDS) {
			String value = projectPreferences.get(arg, preferenceStore.getDefaultString(arg));
			arg = ICreaterepoConstants.DASH.concat(arg);
			for (String tag : value.split(ICreaterepoConstants.DELIMITER)) {
				if (!tag.isEmpty()) {
					commands.add(arg);
					commands.add(tag);
				}
			}
		}
		if (delta) {
			for (String arg : STRING_DELTA_COMMANDS) {
				String value = projectPreferences.get(arg, preferenceStore.getDefaultString(arg));
				arg = ICreaterepoConstants.DASH.concat(arg);
				for (String dirs : value.split(ICreaterepoConstants.DELIMITER)) {
					if (!dirs.isEmpty()) {
						commands.add(arg);
						commands.add(dirs);
					}
				}
			}
		}
		return commands;
	}

