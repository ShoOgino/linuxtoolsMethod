	/**
	 * Go through the version and compare if the current version passed is
	 * greater or equal to the minimum version required. Assumes left-most
	 * value is higher priority than right-most.
	 *
	 * The minimum should always follow a x.x.x version format, the current can
	 * be x or x.x or x.x.x
	 *
	 * @param current Current version to check.
	 * @param minimum The minimum version to pass.
	 * @return True if the current version is higher or equal to the minimum version.
	 */
	private static boolean isGreaterOrEqual(String[] current, String[] minimum) {
		if (current.length > 0) {
			try {
				int iCurrent = Integer.parseInt(current[0]);
				int iMinimum = minimum.length == 0 ? 0 : Integer.parseInt(minimum[0]);
				if (iCurrent > iMinimum || (current.length == 1 && iCurrent == iMinimum)) {
					return true;
				} else if (iCurrent == iMinimum && current.length > 1){
					return isGreaterOrEqual(Arrays.copyOfRange(current, 1, current.length),
							Arrays.copyOfRange(minimum, 1, minimum.length));
				} else {
					return false;
				}
			} catch (NumberFormatException e) {
				return false;
			}
		}
		return false;
	}

