    /**
     * Find the console to be used, and if none found, create
     * a new console to use.
     *
     * @param name The name of the console.
     * @return The found console or a new one if none found.
     */
    public static MessageConsole findConsole(String name) {
        ConsolePlugin plugin = ConsolePlugin.getDefault();
        IConsoleManager manager = plugin.getConsoleManager();
        MessageConsole console = null;
        for (IConsole cons : ConsolePlugin.getDefault().getConsoleManager()
                .getConsoles()) {
            if (cons.getName().equals(name)) {
                console = (MessageConsole) cons;
            }
        }
        // no existing console, create new one
        if (console == null) {
            console = new MessageConsole(name, null, null, true);
        }
        manager.addConsoles(new IConsole[] { console });
        console.clearConsole();
        console.activate();
        return console;
    }

