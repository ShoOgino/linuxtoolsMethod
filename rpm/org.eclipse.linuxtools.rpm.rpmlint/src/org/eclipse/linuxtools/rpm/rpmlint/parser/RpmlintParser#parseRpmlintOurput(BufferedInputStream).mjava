	/**
	 * Parse a given rpmlint <code>InputStream</code>
	 * 
	 * @param 
	 * 		rpmlint <code>InputStream</code> to parse.
	 * @return
	 * 		a <code>RpmlintItem</code> ArrayList.
	 */
	private ArrayList parseRpmlintOurput(BufferedInputStream in) {
		RpmlintItem item =  new RpmlintItem();
		ArrayList rpmlintItems = new ArrayList();
		LineNumberReader reader = new LineNumberReader(new InputStreamReader(in));
		String line;
		boolean firtItemLine = true;
		String[] lineItems;
		String description = "";
		try {
			while ((line = reader.readLine()) != null) {
				if (firtItemLine) {
					firtItemLine=false;
					lineItems = line.split(":", 4);
					item.setFileName(lineItems[0]);
					int lineNbr;
					
					// TODO: ask rpmlint upstream to display always the same output.
					// at the moment the line number is not always displayed.
					// If the same output is always used, all the workarounds for the line number can be
					// removed.
					try {
						lineNbr = Integer.parseInt(lineItems[1]);
						item.setSeverity(lineItems[2]);
						lineItems = lineItems[3].trim().split(" ", 2);						
					} catch (NumberFormatException e) {
						// No line number showed for this rpmlint warning.
						lineItems = line.split(":", 3);
						lineNbr = -1;
						item.setSeverity(lineItems[1]);
						lineItems = lineItems[2].trim().split(" ", 2);
					} 
					item.setLineNbr(lineNbr);					
					item.setId(lineItems[0]);
					// get content
					if (lineItems.length > 1)
						item.setReferedContent(lineItems[1]);
					else
						item.setReferedContent("");
				} else {
					description += line + '\n';
				}
				
				if (line.equals("")) {
					item.setMessage(description.substring(0, description.length() - 2));
					int useOfTabsAndSpaces = getMixedUseOfTabsAndSpaces(item.getReferedContent());
					if (useOfTabsAndSpaces != -1) 
						item.setLineNbr(useOfTabsAndSpaces);
					rpmlintItems.add(item);
					item = new RpmlintItem();
					firtItemLine=true;
					description = "";
				}

			}
			
			// Close the input stream
			in.close();
		} catch (IOException e) {
			e.printStackTrace();
			RpmlintLog.logError(e);
		}
		return rpmlintItems;
	}

