	public void testImportHelloWorld() throws Exception {
		// Create a project for the test
		IProject testProject = root.getProject("testHelloWorld");
		testProject.create(monitor);
		testProject.open(monitor);

		// Instantiate an RPMProject
		IRPMProject rpmProject = RPMProjectFactory.getRPMProject(testProject);

		// Find the test SRPM and install it
		URL url = FileLocator.find(RPMCoreTestsPlugin.getDefault().getBundle(),
				new Path("resources" + file_sep + "srpms" + file_sep + //$NON-NLS-1$ //$NON-NLS-2$
						"helloworld-2-2.src.rpm"), null);
		if (url == null) {
			fail("Unable to find resource" + file_sep + "srpms" + file_sep
					+ "helloworld-2-2.src.rpm");
		}
		File foo = new File(FileLocator.toFileURL(url).getPath());
		rpmProject.importSourceRPM(foo);

		// Make sure the original SRPM got copied into the workspace
		IFile srpm = rpmProject.getConfiguration().getSrpmsFolder().getFile(
				"helloworld-2-2.src.rpm");
		assertTrue(srpm.exists());
		assertNotNull(rpmProject.getProject()
				.getPersistentProperty(
						new QualifiedName(RPMCorePlugin.ID,
								IRPMConstants.SRPM_PROPERTY)));

		// Make sure everything got installed properly
		IFile spec = rpmProject.getConfiguration().getSpecsFolder().getFile(
				"helloworld.spec");
		assertTrue(spec.exists());
		IFile sourceBall = rpmProject.getConfiguration().getSourcesFolder()
				.getFile("helloworld-2.tar.bz2");
		assertTrue(sourceBall.exists());

		// Make sure we got the spec file
		IFile specFile = rpmProject.getSpecFile();
		assertTrue(specFile != null);
		assertNotNull(rpmProject.getProject().getPersistentProperty(
				new QualifiedName(RPMCorePlugin.ID,
						IRPMConstants.SPEC_FILE_PROPERTY)));

		// Make sure the sources got copied from BUILD to the project root
		IResource[] sources = rpmProject.getConfiguration().getBuildFolder()
				.members();
		// If there is one folder, assume it contains all the sources
		if (sources.length == 1 && sources[0].getType() == IResource.FOLDER) {
			IFolder foo1 = rpmProject.getProject().getFolder(
					sources[0].getProjectRelativePath());
			sources = foo1.members();
		}
		for (int i = 0; i < sources.length; i++) {
			if (sources[i].getType() == IResource.FILE) {
				assertTrue(testProject.getFile(sources[i].getName()).exists());
			} else if (sources[i].getType() == IResource.FOLDER) {
				assertTrue(testProject.getFolder(sources[i].getName()).exists());
			}
		}

		// Make sure the checksum was stored
		assertNotNull(rpmProject.getProject().getPersistentProperty(
				new QualifiedName(RPMCorePlugin.ID,
						IRPMConstants.CHECKSUM_PROPERTY)));

		// Make sure the RPM nature was added
		assertTrue(rpmProject.getProject().hasNature(
				RPMProjectNature.RPM_NATURE_ID));

		// Clean up
		testProject.delete(true, false, monitor);
	}

