	public void testBuildSourceRPMHelloWorld1() throws Exception {
		// Create a project for the test
        IProject testProject = root.getProject("testBuildSourceRPMHelloWorld");
        testProject.create(monitor);
        testProject.open(monitor);
        if(testProject == null) {
            fail("Unable to create test project");
        }
		
		// Instantiate an RPMProject
		IRPMProject rpmProject = RPMProjectFactory.getRPMProject(testProject);
        
        // Find the test SRPM and install it
        URL url = RPMCoreTestsPlugin.getDefault().find(new Path("resources" + file_sep + "srpms" + file_sep + //$NON-NLS-1$ //$NON-NLS-2$
                "helloworld-2-2.src.rpm"));
        if (url == null) {
            fail("Unable to find resource" + file_sep + "srpms" + file_sep +
                "helloworld-2-2.src.rpm");
        }
        File foo = new File(Platform.asLocalURL(url).getPath());
        rpmProject.importSourceRPM(foo);
		IFile sourceFile = rpmProject.getProject().getFile("helloworld.cpp");
		StringBufferInputStream foo1 = new StringBufferInputStream("/* */");
		sourceFile.appendContents(foo1, false, false, null);
		RPMExportDelta export = new RPMExportDelta();
		export.setSpecFile(rpmProject.getSpecFile().getFile());
		export.setVersion("2");
		export.setRelease("4");
		export.setPatchName("myPatchFFFFF.patch");
		Date today = new Date();
		SimpleDateFormat df = new SimpleDateFormat("E MMM dd yyyy"); //$NON-NLS-1$
		export.setChangelogEntry("* " + df.format(today) + "  Foo Bot  <bot@foo.bar>  2-4" + line_sep + 
				"- Made test change" + line_sep);
		rpmProject.buildSourceRPM(export);
		
		// Make sure patch was created
		assertTrue(rpmProject.getConfiguration().getSourcesFolder().getFile(export.getPatchName()).exists());
		
		IFile foo2 = rpmProject.getConfiguration().getSrpmsFolder().getFile("helloworld-2-4.src.rpm");
		assertTrue(foo2.exists());
	}

