    /**
     * Get an RPMProject for the resource creating a new instance to an RPMProject.
     * @param resource The resource to check its parent project.
     * @return The RPMProject of the resource passed in.
     */
    private static RPMProject getRPMProject(IResource resource) {
        if (resource != null) {
            try {
                IProject parentProject = resource.getProject();

                // determine if project selected is an RPMProject
                if (parentProject.hasNature(IRPMConstants.RPM_NATURE_ID)) {
                    if (parentProject.getPersistentProperty(new QualifiedName(IRPMConstants.RPM_CORE_ID, IRPMConstants.SPECS_FOLDER)) != null){
                        return new RPMProject(parentProject, RPMProjectLayout.RPMBUILD);
                    } else {
                        return new RPMProject(parentProject, RPMProjectLayout.FLAT);
                    }
                }
            } catch (CoreException e) {
                Activator.logError(Messages.getString("SpecfileEditorRPMBuildHandler.logRPMProjectError"), e); //$NON-NLS-1$
            }
        }
        return null;
    }

