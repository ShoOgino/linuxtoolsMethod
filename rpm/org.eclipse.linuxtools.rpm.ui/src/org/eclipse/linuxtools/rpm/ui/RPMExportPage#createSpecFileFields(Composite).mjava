	/**
	 * Method createSpecFileField
	 * @param parent
	 *
	 * Creates the Spec file combo box
	 */
	private void createSpecFileFields(Composite parent) {
		Group specGrid = new Group(parent, SWT.NONE);
		specGrid.setLayout(new GridLayout());
		specGrid.setText(Messages.getString("RPMExportPage.SPEC_file")); //$NON-NLS-1$
		specGrid.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL |
				GridData.HORIZONTAL_ALIGN_FILL));

		Composite  composite = new Composite(specGrid, SWT.NONE);

		GridLayout layout = new GridLayout();
		layout.numColumns = 2;
		composite.setLayout(layout);
		composite.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_FILL |
				GridData.GRAB_HORIZONTAL));

		specFileField = new Text(composite, SWT.BORDER);
		specFileField.addModifyListener(new ModifyListener() {
			public void modifyText(ModifyEvent e) {
				handleEvent(null);
			}
		});
		specFileField.addSelectionListener(new SelectionListener() {
			public void widgetDefaultSelected(SelectionEvent e) {
				handleEvent(null);
			}
			public void widgetSelected(SelectionEvent e) {
				handleEvent(null);
			}
		});

		GridData gridData = new GridData();
		gridData.horizontalAlignment = GridData.FILL;
		gridData.grabExcessHorizontalSpace = true;
		
		specFileField.setLayoutData(gridData);
		specFileField.setToolTipText(Messages.getString(
				"RPMExportPage.toolTip_SpecFile")); //$NON-NLS-1$

		Button rpmBrowseButton = new Button(composite, SWT.PUSH);
		rpmBrowseButton.setToolTipText(Messages.getString(
				"RPMExportPage.toolTip_file_navigator")); //$NON-NLS-1$
		rpmBrowseButton.setText(Messages.getString("RPMPage.Browse")); //$NON-NLS-1$
		rpmBrowseButton.addListener(SWT.Selection,
			new Listener() {
				public void handleEvent(Event event) {
					ResourceSelectionDialog specFileDialog = 
						new ResourceSelectionDialog(getContainer().getShell(),
								rpmProject.getConfiguration().getSpecsFolder(), 
								Messages.getString("RPMExportPage.Select_spec_file"));
					specFileDialog.setBlockOnOpen(true);
					int result = specFileDialog.open();
					if(result == Window.OK) {
						Object[] foo = specFileDialog.getResult();
						if(foo[0] instanceof IFile) {
							IFile newSpecFile = (IFile) foo[0];
							specFileField.setText(newSpecFile.getProjectRelativePath().toOSString());
						}
					}
				}
			});


		Composite versionReleaseComposite = new Composite(specGrid, SWT.NONE);
		GridLayout versionReleaseLayout = new GridLayout();
		versionReleaseLayout.numColumns = 5;
		versionReleaseComposite.setLayout(versionReleaseLayout);
		versionReleaseComposite.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_FILL |
				GridData.GRAB_HORIZONTAL));

		GridData lineGridData = new GridData(GridData.HORIZONTAL_ALIGN_FILL |
				GridData.GRAB_HORIZONTAL);
		Label line = new Label(versionReleaseComposite, SWT.SEPARATOR | SWT.HORIZONTAL);
		lineGridData.widthHint = 5;
		line.setLayoutData(lineGridData);

		GridData versionGridData = new GridData(GridData.HORIZONTAL_ALIGN_FILL |
				GridData.GRAB_HORIZONTAL);
		new Label(versionReleaseComposite, SWT.NONE).setText(Messages.getString(
				"RPMExportPage.Version")); //$NON-NLS-1$
		rpmVersion = new Text(versionReleaseComposite, SWT.BORDER);
		rpmVersion.setToolTipText(Messages.getString(
				"RPMExportPage.toolTip_Version")); //$NON-NLS-1$
		rpmVersion.setLayoutData(versionGridData);

		GridData releaseGridData = new GridData(GridData.HORIZONTAL_ALIGN_FILL |
				GridData.GRAB_HORIZONTAL);

		new Label(versionReleaseComposite, SWT.NONE).setText(Messages.getString(
				"RPMExportPage.Release")); //$NON-NLS-1$
		rpmRelease = new Text(versionReleaseComposite, SWT.BORDER);
		rpmRelease.setToolTipText(Messages.getString(
				"RPMExportPage.toolTip_Release")); //$NON-NLS-1$
		rpmRelease.setLayoutData(releaseGridData);
		
		// Set listeners
		ModifyListener modListener = new ModifyListener() {
			public void modifyText(ModifyEvent e) {
				handleEvent(null);
			}
		};
		KeyListener keyListener = new KeyListener() {
			public void keyPressed(KeyEvent e) {
			}
			public void keyReleased(KeyEvent e) {
				handleEvent(null);
			}
		};
		rpmVersion.addModifyListener(modListener);
		rpmRelease.addModifyListener(modListener);
		rpmVersion.addKeyListener(keyListener);
		rpmRelease.addKeyListener(keyListener);
	}

