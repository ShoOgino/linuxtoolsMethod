	/**
	 * finish()
	 * 
	 * Perform finish after finish button is pressed
	 * @return boolean
	 * @throws CoreException
	 * 	 */
	public boolean finish() throws CoreException {
		IProject detailedProject;
			
		// Get the handle to the current activate Workspace	    
		IWorkspaceRoot workspaceRoot = ResourcesPlugin.getWorkspace().getRoot();

		// User chooses an existing project or make a new project
		if (intoExisting.getSelection()) {
			// Get the current selected member from the list box (projectList)
			String[] selectedProject = projectList.getSelection();
			
			// As we only allow a single selection in the listbox, and the listbox always
			// comes with the first element selected, we can assume the first element
			// in the returned array is valid.
			detailedProject = workspaceRoot.getProject(selectedProject[0]);
		}		
		else {
			detailedProject = getNewProject();
			if(detailedProject == null) {
				return false;
			}
		}
		// Add this SRPM to srpmList
		for (int i = 0; i < srpmVector.size(); i++)
		{	// There can only be one occurance 
			if (srpmVector.elementAt(i).equals(sourceSRPM.getText()))
			{
				srpmVector.remove(i);
				break;
			}
		}
		srpmVector.add((sourceSRPM.getText()));
		
		SRPMImportOperation srpmImportOp = null;
		try {
			srpmImportOp = new SRPMImportOperation(detailedProject,
					getSelectedSRPM());
			getContainer().run(true, true, srpmImportOp);
		} catch (Exception e) {
			setErrorMessage(e.toString());
			return false;
		}

		// Get the status of the operation
		IStatus srpmImportStatus = srpmImportOp.getStatus();

		// If the status does not come back clean, open error dialog
		if (!srpmImportStatus.isOK()) {
			ErrorDialog.openError(getContainer().getShell(),
				Messages.getString("SRPMImportPage.Errors_importing_SRPM"), //$NON-NLS-1$
				null, // no special message
				srpmImportStatus);

			return false;
		}

		return true;
	}

