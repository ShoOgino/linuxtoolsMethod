	/**
	 * Method createGenPatchFields
	 *
	 * Create the patch generation widgets
	 */
	private void createPatchFields(Composite parent) {
		Group group = new Group(parent, SWT.NONE);
		group.setLayout(new GridLayout());
		group.setText(Messages.getString("RPMExportPage.Patch_Options")); //$NON-NLS-1$
		group.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL
				| GridData.HORIZONTAL_ALIGN_FILL));

		Composite composite = new Composite(group, SWT.NONE);

		GridLayout layout = new GridLayout();
		layout.numColumns = 2;
		composite.setLayout(layout);
		composite.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_FILL
				| GridData.GRAB_HORIZONTAL));

		ModifyListener patchListener = new ModifyListener() {
			public void modifyText(ModifyEvent e) {
				handleEvent(null);
			}
		};
		KeyListener patchKeyListener = new KeyListener() {
			public void keyPressed(KeyEvent e) {}
			public void keyReleased(KeyEvent e) {
				handleEvent(null);
			}
		};

		GridData patchTagGridData = new GridData(GridData.HORIZONTAL_ALIGN_FILL
				| GridData.GRAB_HORIZONTAL);
		new Label(composite, SWT.NONE).setText(Messages
				.getString("RPMExportPage.Patch_Name")); //$NON-NLS-1$
		patchTag = new Text(composite, SWT.BORDER);
		patchTag.setToolTipText(Messages
				.getString("RPMExportPage.toolTip_Patch_Name")); //$NON-NLS-1$
		patchTag.setLayoutData(patchTagGridData);
		patchTag.addModifyListener(patchListener);
		patchTag.addKeyListener(patchKeyListener);

		GridData pChangelogStampGridData = new GridData(
				GridData.HORIZONTAL_ALIGN_FILL | GridData.GRAB_HORIZONTAL);
		new Label(composite, SWT.NONE).setText(Messages
				.getString("RPMExportPage.Patch_Changelog_Stamp")); //$NON-NLS-1$

		patchChangeLogstamp = new Text(composite, SWT.BORDER);
		patchChangeLogstamp.setLayoutData(pChangelogStampGridData);
		//patchTag.addModifyListener(trapTag);
		patchChangeLogstamp.addModifyListener(patchListener);
		patchChangeLogstamp.setToolTipText(Messages
				.getString("RPMExportPage.toolTip_Changelog_Stamp")); //$NON-NLS-1$

		new Label(composite, SWT.NONE).setText(Messages
				.getString("RPMExportPage.Patch_Changelog")); //$NON-NLS-1$

		KeyListener patchChangelogListener = new KeyListener() {
			public void keyPressed(KeyEvent e) {
				handleEvent(null);
			}

			public void keyReleased(KeyEvent e) {
				handleEvent(null);
				if (e.keyCode == 13) {
					if (patchChangeLog.getCaretPosition() == patchChangeLog
							.getCharCount())
						patchChangeLog.append("- "); //$NON-NLS-1$
					else if (patchChangeLog.getText(
							patchChangeLog.getCaretPosition() - 1,
							patchChangeLog.getCaretPosition() - 1).equals("\n")) //$NON-NLS-1$
						patchChangeLog.insert("- "); //$NON-NLS-1$
				}
			}
		};

		GridData pChangelogGridData = new GridData(
				GridData.HORIZONTAL_ALIGN_FILL | GridData.GRAB_HORIZONTAL);

		patchChangeLog = new Text(composite, SWT.BORDER | SWT.MULTI);
		pChangelogGridData.heightHint = 7 * patchChangeLog.getLineHeight();
		patchChangeLog.setLayoutData(pChangelogGridData);
		patchChangeLog.addKeyListener(patchChangelogListener);
		patchChangeLog.addModifyListener(patchListener);
		patchChangeLog.setToolTipText(Messages
				.getString("RPMExportPage.toolTip_Changelog")); //$NON-NLS-1$

	}

