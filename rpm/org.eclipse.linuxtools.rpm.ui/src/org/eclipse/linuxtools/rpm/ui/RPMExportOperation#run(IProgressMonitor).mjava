	/**
	 * @see org.eclipse.jface.operation.IRunnableWithProgress#run(IProgressMonitor)
	 * 
	 */
	@Override
	public IStatus run(IProgressMonitor progressMonitor) {
		int totalWork = 2;

		monitor = progressMonitor;

		// Start progress
		monitor.beginTask(Messages.getString("RPMExportOperation.Starting"), //$NON-NLS-1$
				totalWork);
		monitor.worked(1);
		IOConsole myConsole = findConsole(); 
		IOConsoleOutputStream out = myConsole.newOutputStream();
		myConsole.clearConsole();
		myConsole.activate();
		switch (exportType) {
		case ALL:
			try {
				monitor.setTaskName(Messages
						.getString("RPMExportOperation.Executing_RPM_Export")); //$NON-NLS-1$
				rpmProject.buildAll(out);
			} catch (CoreException e) {
				return new Status(IStatus.ERROR, RPMUIPlugin.ID, e.getMessage(), e);
			}
			break;

		case BINARY:
			monitor.setTaskName(Messages
					.getString("RPMExportOperation.Executing_RPM_Export")); //$NON-NLS-1$
			try {
				rpmProject.buildBinaryRPM(out);
			} catch (CoreException e) {
				return new Status(IStatus.ERROR, RPMUIPlugin.ID, e.getMessage(), e);
			}
			break;

		case SOURCE:
			monitor.setTaskName(Messages
					.getString("RPMExportOperation.Executing_SRPM_Export")); //$NON-NLS-1$
			try {
				rpmProject.buildSourceRPM(out);
			} catch (CoreException e) {
				return new Status(IStatus.ERROR, RPMUIPlugin.ID, e.getMessage(), e);
			}
			break;
		}
		monitor.worked(1);
		monitor.done();
		return Status.OK_STATUS;
	}

