	/**
	 * @see org.eclipse.jface.operation.IRunnableWithProgress#run(IProgressMonitor)
	 *
	 */
	public void run(IProgressMonitor progressMonitor)
		throws InvocationTargetException {
		int totalWork = 2;

		monitor = progressMonitor;

		// We keep a all our reported errors in an ArrayList.
		rpm_errorTable = new ArrayList();

		// Start progress
		monitor.beginTask(Messages.getString("RPMExportOperation.Starting"), //$NON-NLS-1$
		totalWork);
		monitor.worked(1);
		
		switch(exportType) {
		case IRPMUIConstants.BUILD_ALL:
			try {
				monitor.setTaskName(Messages.getString("RPMExportOperation.Executing_RPM_Export"));
				rpmProject.buildAll(exportDelta);
			} catch(Exception e) {
				rpm_errorTable.add(e);
			}
			break;
		
		case IRPMUIConstants.BUILD_BINARY:
			monitor.setTaskName(Messages.getString("RPMExportOperation.Executing_RPM_Export")); //$NON-NLS-1$
			try {
				rpmProject.buildBinaryRPM(exportDelta);
			} catch(Exception e) {
				rpm_errorTable.add(e);
			}
			break;
		
		case IRPMUIConstants.BUILD_SOURCE:
			monitor.setTaskName(Messages.getString("RPMExportOperation.Executing_SRPM_Export")); //$NON-NLS-1$
			try {
				rpmProject.buildSourceRPM(exportDelta);
			} catch(Exception e) {
				rpm_errorTable.add(e);
			}
			break;
		}
		monitor.worked(1);
	}

