	/**
	 * Return a list of all the Samples in the given session.
	 * @param session the session for which to get samples
	 * @param shell the composite shell to use for the progress dialog
	 */
	public static void getSamples(final SampleSession session, Shell shell) {
		/* As much as I would like to get all this UI stuff back into the UI code, it really confuses
		   things. It would be a real PITA for the UI to check whether we need samples to be read.
		   Reading samples should just magically happen (as far as the UI is concerned). */
		final IRunnableWithProgress opxml;
		try {
			opxml = OprofileCorePlugin.getDefault().getOpxmlProvider().samples(session);
		} catch (OpxmlException e) {
			_showErrorDialog("opxmlProvider", e); //$NON-NLS-1$
			return;
		}
		
		if (shell != null) {
			IRunnableWithProgress runnable = new IRunnableWithProgress() {
				
				public void run(IProgressMonitor monitor) throws InvocationTargetException, InterruptedException {
					Object[] fmtArgs = null;
					String key = null;
					if (session.isDefaultSession()) {
						key = "getSamples.caption.default-session"; //$NON-NLS-1$
						fmtArgs = new Object[0];
					} else {
						key = "getSamples.caption"; //$NON-NLS-1$
						fmtArgs = new Object[] {session.getExecutableName()};
					}
					
					String caption = MessageFormat.format(OprofileProperties.getString(key), fmtArgs);
					monitor.beginTask(caption, session.getSampleCount());				
					opxml.run(monitor);
					monitor.done();
				}
			};

			ProgressMonitorDialog dialog = new ProgressMonitorDialog(shell);
			try {
				dialog.run(true, false, runnable);
			} catch (InterruptedException ie) {
			} catch (InvocationTargetException e) {
			}
		} else {
			// No shell -- just run opxml without a ProgressMonitor
			try {
				opxml.run(null);
			} catch (InvocationTargetException e) {
			} catch (InterruptedException e) {
			}
		}
	}

