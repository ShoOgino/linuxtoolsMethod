    public void assertValidity (String path){
        IFileStore fileStore = null;
        String infoAbsFilePath = null;

        Path infoFilePath = new Path(REL_PATH_TO_INFO_PRE_PARSE_RAW);
        URL infoFileURL = FileLocator.find(FrameworkUtil.getBundle(this.getClass()), infoFilePath, null);
        try {
            infoAbsFilePath = FileLocator.toFileURL(infoFileURL).getFile();
            fileStore = EFS.getLocalFileSystem().getStore(new Path(infoAbsFilePath));
        } catch (IOException e) {
            fail("Failed to convert the resource file's path.");
        }

        InfoAdapter ia = new InfoAdapter(fileStore);
        ia.process();

        cea = new CheckEventAdapter(ctr, "CPU_CLK_UNHALTED", umask);
        cea.process();
        Document actualDocument = cea.getDocument();
        Element actualRoot = (Element) actualDocument.getElementsByTagName(CheckEventAdapter.CHECK_EVENTS).item(0);

        Path filePath = new Path(path);
        URL fileURL = FileLocator.find(FrameworkUtil.getBundle(this.getClass()), filePath, null);
        Element expectedRoot = null;
        try {
            String absFilePath = FileLocator.toFileURL(fileURL).getFile();
            File file = new File (absFilePath);
            FileInputStream inp = new FileInputStream(file);
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
            DocumentBuilder builder;
            builder = factory.newDocumentBuilder();
            Document expectedDocument = builder.parse(inp);
            expectedRoot = (Element) expectedDocument.getElementsByTagName(CheckEventAdapter.CHECK_EVENTS).item(0);

        } catch (FileNotFoundException e) {
            fail("File was not found.");
        } catch (IOException e) {
            fail("Failed to convert the resource file's path.");
        } catch (SAXException e) {
            fail("Failed to parse the XML.");
        } catch (ParserConfigurationException e) {
            fail("Failed to create a document builder.");
        }

        Element expectedResultTag = (Element) expectedRoot.getElementsByTagName(CheckEventAdapter.RESULT).item(0);
        Element actualResultTag = (Element) actualRoot.getElementsByTagName(CheckEventAdapter.RESULT).item(0);
        assertEquals(expectedResultTag.getTextContent(), actualResultTag.getTextContent());
    }

