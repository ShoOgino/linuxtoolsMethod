	@Test
	public void testEventData (){
		final String [] eventTags = new String [] {InfoAdapter.NAME, InfoAdapter.DESCRIPTION, InfoAdapter.MINIMUM};
		final String [] unitMaskTags = new String [] {InfoAdapter.DEFAULT};
		final String [] maskTags = new String [] {InfoAdapter.VALUE};

		// compare the event data
		for (int i = 0; i < rootList.length; i++){
			Element eventListTag = (Element) rootList[i].getElementsByTagName(InfoAdapter.EVENT_LIST).item(0);
			NodeList eventTagList = eventListTag.getElementsByTagName(InfoAdapter.EVENT);
			for (int j = 0; j < eventTagList.getLength(); j++){
				//name description value minimum
				Element event = (Element) eventTagList.item(j);
				for (int k = 0; k < eventTags.length; k++){
					Element elm = (Element) (event.getElementsByTagName(eventTags[k]).item(0));
					valueList.get(i).add(elm.getTextContent());
				}

				//type default
				Element unitMaskTag = (Element) event.getElementsByTagName(InfoAdapter.UNITMASK).item(0);
				for (int k = 0; k < unitMaskTags.length; k++){
					Element elem = (Element) unitMaskTag.getElementsByTagName(unitMaskTags[k]).item(0);
					valueList.get(i).add(elem.getTextContent());
				}

				// value description
				// description is omitted (whitespace differences cause failure)
				NodeList maskTagList = unitMaskTag.getElementsByTagName(InfoAdapter.MASK);
				for (int k = 0; k < maskTagList.getLength(); k++){
					Element mask = (Element) maskTagList.item(k);
					for (int n = 0; n < maskTags.length; n++){
						Element maskVal = (Element) mask.getElementsByTagName(maskTags[n]).item(0);
						valueList.get(i).add(maskVal.getTextContent());
					}
				}
			}
		}
		assertSameValues(valueList);
		clearValues(valueList);
	}

