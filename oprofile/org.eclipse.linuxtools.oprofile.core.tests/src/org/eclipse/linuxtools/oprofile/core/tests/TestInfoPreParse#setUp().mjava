	@Override
	protected void setUp() {
		File file = null;
		String absFilePath = null;
		
		Path filePath = new Path(REL_PATH_TO_INFO_PRE_PARSE_RAW);
		URL fileURL = FileLocator.find(CoreTestsPlugin.getDefault().getBundle(), filePath, null);
		try {
			absFilePath = FileLocator.toFileURL(fileURL).getFile();
			file = new File (absFilePath);
		} catch (IOException e) {
			fail("Failed to convert the resource file's path.");
		}
		InfoAdapter ia = new InfoAdapter(file);
		ia.process();
		Document actualDocument = ia.getDocument();
		Element actualRoot = (Element) actualDocument.getElementsByTagName(InfoAdapter.INFO).item(0);
		
		filePath = new Path(REL_PATH_TO_INFO_PRE_PARSE_EXEPECTED);
		fileURL = FileLocator.find(CoreTestsPlugin.getDefault().getBundle(), filePath, null);
		Element expectedRoot = null;
		try {
			absFilePath = FileLocator.toFileURL(fileURL).getFile();
			file = new File (absFilePath);
			FileInputStream inp = new FileInputStream(file);
			DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
			DocumentBuilder builder;
			builder = factory.newDocumentBuilder();
			Document expectedDocument = builder.parse(inp);
			expectedRoot = (Element) expectedDocument.getElementsByTagName(InfoAdapter.INFO).item(0);
			
		} catch (FileNotFoundException e) {
			fail("File was not found.");
		} catch (IOException e) {
			fail("Failed to convert the resource file's path.");
		} catch (SAXException e) {
			fail("Failed to parse the XML.");
		} catch (ParserConfigurationException e) {
			fail("Failed to create a document builder.");
		}
		
		rootList = new Element [] {expectedRoot, actualRoot};
		valueList = new ArrayList<ArrayList<String>> ();
		
		for (int i = 0; i < rootList.length; i++){
			valueList.add(new ArrayList<String>());
		}
	}

