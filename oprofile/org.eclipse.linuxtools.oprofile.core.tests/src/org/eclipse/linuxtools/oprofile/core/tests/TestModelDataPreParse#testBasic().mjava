	@Test
	public void testBasic (){
		final String [] imageAttrs = new String [] {ModelDataAdapter.NAME, ModelDataAdapter.COUNT};
		final String [] symbolAttrs = new String [] {ModelDataAdapter.NAME, ModelDataAdapter.FILE, ModelDataAdapter.COUNT};
		final String [] sampleTags = new String [] {ModelDataAdapter.COUNT, ModelDataAdapter.LINE};

		for (int i = 0; i < rootList.length; i++){
			Element imageTag = (Element) rootList[i].getElementsByTagName(ModelDataAdapter.IMAGE).item(0);
			// image name, count
			for (int j = 0; j < imageAttrs.length; j++){
				String attr = imageTag.getAttribute(imageAttrs[j]);
				valueList.get(i).add(attr);
			}

			Element symbolsTag = (Element) rootList[i].getElementsByTagName(ModelDataAdapter.SYMBOLS).item(0);
			NodeList symbolList = symbolsTag.getElementsByTagName(ModelDataAdapter.SYMBOL);
			// go through each symbol
			for (int j = 0; j < symbolList.getLength(); j++){
				Element symbolTag = (Element) symbolList.item(j);
				// symbol name, file, count
				for (int k = 0; k < symbolAttrs.length; k++){
					String attr = symbolTag.getAttribute(symbolAttrs[k]);
					valueList.get(i).add(attr);
				}

				NodeList sampleList = symbolsTag.getElementsByTagName(ModelDataAdapter.SAMPLE);
				// go through each sample
				for (int k = 0; k < sampleList.getLength(); k++){
					Element sampleTag = (Element) sampleList.item(k);

					for (int n = 0; n < sampleTags.length; n++){
						Element elem = (Element) sampleTag.getElementsByTagName(sampleTags[n]).item(0);
						valueList.get(i).add(elem.getTextContent());
					}
				}
			}
		}
		assertSameValues(valueList);
	}

