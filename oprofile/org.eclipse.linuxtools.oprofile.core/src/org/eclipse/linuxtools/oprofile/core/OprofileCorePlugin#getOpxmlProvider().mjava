	/**
	 * Returns the OpxmlProvider registered with the plugin or throws an exception
	 * @return the OpxmlProvider
	 * @throws OpxmlException
	 */
	public IOpxmlProvider getOpxmlProvider() throws OpxmlException {
		if (_pathToOpxml != null) {
			URL opxmlUrl = FileLocator.find(Platform.getBundle(OPXML_FRAGMENT_PLUGIN_ID + Platform.getOSArch()), new Path(OPXML_PATH_STRING), null); 
			
			if (opxmlUrl == null) {
				// If no provider found, throw a new exception
				String msg = OprofileProperties.getString("opxmlProvider.error.missing"); //$NON-NLS-1$
				Status status = new Status(IStatus.ERROR, getId(), IStatus.OK, msg, null);
				throw new OpxmlException(status);
			} else {
				try {
					_pathToOpxml = FileLocator.toFileURL(opxmlUrl).getPath();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}
		
		return new LinuxOpxmlProvider(_pathToOpxml);
	}

