	// Will add opcontrol program to beginning of args
	// args: list of opcontrol arguments (not including opcontrol program itself)
	private void _runOpcontrol(ArrayList<String> args) throws OpcontrolException {
		args.add(0, OPCONTROL_PROGRAM);
//		args.add(0, SUDO_PROGRAM);
		// Verbosity hack. If --start or --start-daemon, add verbosity, if set
//		String cmd = (String) args.get(2);
		String cmd = (String) args.get(1);
		if (_verbosity.length() > 0 && (cmd.equals (_OPD_START_COLLECTION) || cmd.equals(_OPD_START_DAEMON))) {
			args.add(_verbosity);
		}
		
		String[] cmdArray = new String[args.size()];
		args.toArray(cmdArray);
		
		Process p = null;
		try {
			p = Runtime.getRuntime().exec(cmdArray);
		} catch (IOException ioe) {
			if (p != null) {
				p.destroy();
				p = null;
			}
			
			throw new OpcontrolException(OprofileCorePlugin.createErrorStatus("opcontrolRun", ioe)); //$NON-NLS-1$
		}
		
		if (p != null) {
			BufferedReader stdout = new BufferedReader(new InputStreamReader(p.getInputStream()));
			try {
				while ((stdout.readLine()) != null) {
					// drain
				}
				
				if (p.waitFor() != 0) {
					throw new OpcontrolException(OprofileCorePlugin.createErrorStatus("opcontrolNonZeroExitCode", null)); //$NON-NLS-1$
				}
			} catch (IOException ioe) { 
				ioe.printStackTrace();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
	}

