	// Will add opcontrol program to beginning of args
	// args: list of opcontrol arguments (not including opcontrol program itself)
	private void _runOpcontrol(ArrayList<String> args) throws OpcontrolException {
		args.add(0, _OPCONTROL_PROGRAM);
		// Verbosity hack. If --start or --start-daemon, add verbosity, if set
		String cmd = (String) args.get(1);
		if (_verbosity.length() > 0 && (cmd.equals (_OPD_START_COLLECTION) || cmd.equals(_OPD_START_DAEMON))) {
			args.add(_verbosity);
		}
		
		String[] cmdArray = new String[args.size()];
		args.toArray(cmdArray);
		
		Process p = null;
		try {
			p = Runtime.getRuntime().exec(cmdArray);
		} catch (IOException ioe) {
			if (p != null) {
				p.destroy();
				p = null;
			}
			
			// Throw an exception
			Status status = new Status(Status.ERROR,
									   OprofileCorePlugin.getId(),
									   0 /* code */,
									   "error message",
									   ioe);
			throw new OpcontrolException(status);
		}
		
		if (p != null) {
			BufferedReader stdout = new BufferedReader(new InputStreamReader(p.getInputStream()));
			try {
				while ((stdout.readLine()) != null) {
					// drain
				}
			} catch (IOException ioe) { /* We don't care if there were errors draining the output */ }
			
//			if (p.exitValue() != 0) {
//				Status status = new Status(Status.ERROR, OprofileCorePlugin.getId(), 0 /* code */, "opcontrol return status indicates a failure!", null);
//				throw new OpcontrolException(status);
//			}
		}
	}

