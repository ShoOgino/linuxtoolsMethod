	/**
	 * 
	 * @param binName the binary to query against
	 * @param oldDetailTableList the list of 'symboldetails' tags within detailtable
	 * @return a HashMap where the keys are the vma offsets and values are the
	 * corresponding line numbers
	 */
	private HashMap<String, String> hashVMAOffset (String binName, NodeList oldDetailTableList){
		StringBuffer arg = new StringBuffer();
		ArrayList<String> vma_offsets = new ArrayList<String>();
		HashMap<String, String> ret = new HashMap<String, String> ();
		for (int i = 0; i < oldDetailTableList.getLength(); i++){
			Element symbolDetails = (Element) oldDetailTableList.item(i);
			NodeList detailDataList = symbolDetails.getElementsByTagName(DETAIL_DATA);
			for (int j = 0; j < detailDataList.getLength(); j++){
				String vma_offset = ((Element)detailDataList.item(j)).getAttribute(VMA_OFFSET);
				vma_offsets.add(vma_offset);
				arg.append(" " + vma_offset);
			}
		}
		
		try {
			Process p = Runtime.getRuntime().exec(ADDR2LINE + " " + binName + arg);
			BufferedReader bi = new BufferedReader(new InputStreamReader(p.getInputStream()));
			
			int count = 0;
			String line;
			while ((line = bi.readLine()) != null){
				ret.put(vma_offsets.get(count), line);
				count++;
			}
			bi.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		return ret;
	}

