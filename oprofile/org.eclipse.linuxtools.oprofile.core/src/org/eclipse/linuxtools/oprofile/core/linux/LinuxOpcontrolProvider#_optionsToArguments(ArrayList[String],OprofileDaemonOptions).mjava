	// Convert the options into arguments for opcontrol
	private void _optionsToArguments(ArrayList<String> args, OprofileDaemonOptions options) {
		// Add separate flags
		int mask = options.getSeparateProfilesMask();

		String separate = new String(_OPD_SETUP_SEPARATE);
		
		if (mask == OprofileDaemonOptions.SEPARATE_ALL) {
			separate += _OPD_SETUP_SEPARATE_ALL;
		} else if (mask == OprofileDaemonOptions.SEPARATE_NONE) {
			separate += _OPD_SETUP_SEPARATE_NONE;
		} else {
			if ((mask & OprofileDaemonOptions.SEPARATE_LIBRARY) != 0)
				separate += _OPD_SETUP_SEPARATE_LIBRARY
						+ _OPD_SETUP_SEPARATE_SEPARATOR;
			if ((mask & OprofileDaemonOptions.SEPARATE_KERNEL) != 0)
				separate += _OPD_SETUP_SEPARATE_KERNEL
						+ _OPD_SETUP_SEPARATE_SEPARATOR;
			if ((mask & OprofileDaemonOptions.SEPARATE_THREAD) != 0)
				separate += _OPD_SETUP_SEPARATE_THREAD
						+ _OPD_SETUP_SEPARATE_SEPARATOR;
			if ((mask & OprofileDaemonOptions.SEPARATE_CPU) != 0)
				separate += _OPD_SETUP_SEPARATE_CPU
						+ _OPD_SETUP_SEPARATE_SEPARATOR;
		}
		args.add(separate);
		
		// Add kernel image
		if (options.getKernelImageFile() == null || options.getKernelImageFile().equals("")) {
			args.add(_OPD_KERNEL_NONE);
		} else {
			args.add(_OPD_KERNEL_FILE + options.getKernelImageFile());
		}

		//image filter -- always non-null
		args.add(_OPD_SETUP_IMAGE + options.getImage());
	}

