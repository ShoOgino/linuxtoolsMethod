	// Convert the options into arguments for opcontrol
	private void optionsToArguments(ArrayList<String> args, OprofileDaemonOptions options) {
		// Add separate flags
		int mask = options.getSeparateProfilesMask();

		StringBuilder separate = new StringBuilder();
		separate.append(OPD_SETUP_SEPARATE);
		
		if (mask == OprofileDaemonOptions.SEPARATE_NONE) {
			separate.append(OPD_SETUP_SEPARATE_NONE);
		} else {
			//note that opcontrol will nicely ignore the trailing comma
			if ((mask & OprofileDaemonOptions.SEPARATE_LIBRARY) != 0)
				separate.append(OPD_SETUP_SEPARATE_LIBRARY + OPD_SETUP_SEPARATE_SEPARATOR);
			if ((mask & OprofileDaemonOptions.SEPARATE_KERNEL) != 0)
				separate.append(OPD_SETUP_SEPARATE_KERNEL + OPD_SETUP_SEPARATE_SEPARATOR);
			if ((mask & OprofileDaemonOptions.SEPARATE_THREAD) != 0)
				separate.append(OPD_SETUP_SEPARATE_THREAD + OPD_SETUP_SEPARATE_SEPARATOR);
			if ((mask & OprofileDaemonOptions.SEPARATE_CPU) != 0)
				separate.append(OPD_SETUP_SEPARATE_CPU + OPD_SETUP_SEPARATE_SEPARATOR);
		}
		args.add(separate.toString());
		
		// Add kernel image
		if (options.getKernelImageFile() == null || options.getKernelImageFile().length() == 0) {
			args.add(OPD_KERNEL_NONE);
		} else {
			args.add(OPD_KERNEL_FILE + options.getKernelImageFile());
		}

		//image filter -- always non-null
		args.add(OPD_SETUP_IMAGE + options.getBinaryImage());
		
		//callgraph depth
		args.add(OPD_CALLGRAPH_DEPTH + options.getCallgraphDepth());
	}

