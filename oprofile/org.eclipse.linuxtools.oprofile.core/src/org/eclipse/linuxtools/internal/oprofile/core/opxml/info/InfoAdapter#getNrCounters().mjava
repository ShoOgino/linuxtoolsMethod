	/**
	 * Get the number of counters for the system
	 * @return the number of counters for the system
	 */
	private int getNrCounters() {
		/*
		 * TODO: Originally the number of counters for a given arch were
		 * hard-coded in a list. This method may not be entirely correct,
		 * although much simpler.
		 */

		/*
		 * Returning 1 for operf since it multiplexes the events through the counters
		 * and it is not possible to read data from opcontrol /dev dir if the opcontrol
		 * module was not initialized.
		 * TODO: Make possible to select more than one event in a tab.
		 */
		if (OprofileProject.getProfilingBinary().equals(OprofileProject.OPERF_BINARY)) {
			return 1;
		}
		try {
			proxy = RemoteProxyManager.getInstance().getFileProxy(Oprofile.OprofileProject.getProject());
		} catch (CoreException e) {
			e.printStackTrace();
		}
		final int MAXCPUS = Integer.MAX_VALUE;
		for (int i = 0; i < MAXCPUS; i++){
			IFileStore fileStore = proxy.getResource(DEV_OPROFILE + i);
			if(!fileStore.fetchInfo().exists()){
				return i;
			}
		}
		return -1;
	}

