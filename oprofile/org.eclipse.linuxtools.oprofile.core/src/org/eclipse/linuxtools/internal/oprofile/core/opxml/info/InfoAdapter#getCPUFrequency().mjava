	/**
	 * Get the system's cpu frequency
	 * @return the system's cpu frequency
	 */
	private int getCPUFrequency() {
		File file = new File(CPUINFO);
		int val = 0;
		BufferedReader bi = null;
		try {
			bi = new BufferedReader(new FileReader(file));
			String line;

			while ((line = bi.readLine()) != null) {
				int index = line.indexOf(':');
				if (index != -1) {
					String substr;

					// x86/ia64/x86_64
					if (line.startsWith("cpu MHz")) { //$NON-NLS-1$
						substr = line.substring(index + 1).trim();
						return (int) Double.parseDouble(substr);
					// ppc/pc64
					} else if (line.startsWith("clock")) { //$NON-NLS-1$
						int MHzLoc = line.indexOf("MHz"); //$NON-NLS-1$
						substr = line.substring(index + 1, MHzLoc);
						return (int) Double.parseDouble(substr);
					// alpha
					} else if (line.startsWith("cycle frequency [Hz]")) { //$NON-NLS-1$
						substr = line.substring(index + 1).trim();
						return (int) (Double.parseDouble(substr) / 1E6);
					// sparc64
					} else if (line.startsWith("Cpu0ClkTck")) { //$NON-NLS-1$
						substr = line.substring(index + 1).trim();
						return (int) (Double.parseDouble(substr) / 1E6);
					}
				}
			}
			bi.close();
		} catch (NumberFormatException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			if (null != bi) {
				try {
					bi.close();
				} catch (IOException e) {
				}
			}
		}

		return val;
	}

