	public void testSetupTab() throws CoreException {
		OprofileTestingSetupTab tab = new OprofileTestingSetupTab();
		tab.createControl(new Shell());
		assertNotNull(tab.getImage());
		assertNotNull(tab.getName());
		
		//default config
		tab.setDefaults(config.getWorkingCopy());
		tab.initializeFrom(config);
		
		Button libraryCheck = tab.getLibraryCheck();
		libraryCheck.setSelection(true);
		libraryCheck.notifyListeners(SWT.Selection, null);
		tab.performApply(config.getWorkingCopy());
		assertEquals(OprofileDaemonOptions.SEPARATE_LIBRARY, config.getAttribute(OprofileLaunchPlugin.ATTR_SEPARATE_SAMPLES, -1));
		libraryCheck.setSelection(false);
		libraryCheck.notifyListeners(SWT.Selection, null);
		tab.performApply(config.getWorkingCopy());
		assertEquals(OprofileDaemonOptions.SEPARATE_NONE, config.getAttribute(OprofileLaunchPlugin.ATTR_SEPARATE_SAMPLES, -1));
		
		Button kernelCheck = tab.getKernelCheck();
		kernelCheck.setSelection(true);
		kernelCheck.notifyListeners(SWT.Selection, null);
		tab.performApply(config.getWorkingCopy());
		assertEquals(OprofileDaemonOptions.SEPARATE_KERNEL, config.getAttribute(OprofileLaunchPlugin.ATTR_SEPARATE_SAMPLES, -1));
		kernelCheck.setSelection(false);
		kernelCheck.notifyListeners(SWT.Selection, null);
		tab.performApply(config.getWorkingCopy());
		assertEquals(OprofileDaemonOptions.SEPARATE_NONE, config.getAttribute(OprofileLaunchPlugin.ATTR_SEPARATE_SAMPLES, -1));
		
		libraryCheck.setSelection(true);
		libraryCheck.notifyListeners(SWT.Selection, null);
		kernelCheck.setSelection(true);
		kernelCheck.notifyListeners(SWT.Selection, null);
		tab.performApply(config.getWorkingCopy());
		tab.initializeFrom(config);
		assertTrue(libraryCheck.getSelection());
		assertTrue(kernelCheck.getSelection());
		
		Text kernelLocationText = tab.getTextKernelImage();
		kernelLocationText.setText("doesntexist"); //$NON-NLS-1$
		kernelLocationText.notifyListeners(SWT.Selection, null);
		tab.performApply(config.getWorkingCopy());
		assertFalse(tab.isValid(config));

		kernelLocationText.setText(""); //$NON-NLS-1$
		kernelLocationText.notifyListeners(SWT.Selection, null);
		tab.performApply(config.getWorkingCopy());
		assertTrue(tab.isValid(config));
	}

