	/**
	 * @see org.eclipse.cdt.oprofile.ui.internal.IProfileElement#getChildren()
	 */
	public IProfileElement[] getChildren()
	{
		// Children of Executable are: libraries, object files
		ArrayList objects = new ArrayList();
		ArrayList libs = new ArrayList();
		
		// how to get objfiles?
		ICElement[] elements = new ICElement[0];
		try {
			elements = _binary.getChildren();
		} catch (CModelException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		for (int i = 0; i < elements.length; i++)
		{
			/* FIXME: ICFile and C_FILE are gone!
			if (elements[i].getElementType() == ICElement.C_FILE)
			{
				ICFile cfile = (ICFile) elements[i];
				if (cfile.isArchive())
				{
					int j = 0; // ??
				}
				else if (cfile.isBinary())
				{
					int j = 0; //
				}
				else if (cfile.isTranslationUnit())
				{
					// This is an object representing the source file of an object file
					objects.add(new ProjectProfileObjectFile(this, cfile));					
				}
			}
			else*/ if (elements[i].getElementType() == ICElement.C_FUNCTION)
			{
				// These probably came from a library which was statically linked with the executable
				libs.add(new ProjectProfileFunction(this, (IFunction) elements[i]));
			}
		}
		
		// TODO: add sort option
		objects.addAll(libs);

		// Add required shared libraries
		/* FIXME: getFile gone!
		IBinaryParser parser = CModelManager.getBinaryParser(_binary.getFile().getProject());
		IArchiveContainer archive = _binary.getCProject().getArchiveContainer();
		IArchive[] archives = archive.getArchives();
		*/
	
		IProfileElement[] children = new IProfileElement[objects.size()];
		objects.toArray(children);
		return children;
	}

