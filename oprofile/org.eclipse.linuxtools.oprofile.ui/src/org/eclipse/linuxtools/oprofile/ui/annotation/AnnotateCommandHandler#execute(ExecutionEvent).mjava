	public Object execute(ExecutionEvent exEvent) throws ExecutionException {
		boolean toggleEnabled = true;//((ToolItem)((Event)exEvent.getTrigger()).widget).getSelection();
		
		if (toggleEnabled) {
			if (!UiModelRoot.getDefault().hasChildren()) {
				//no sessions to annotate
				OprofileCorePlugin.showErrorDialog("ui.annotate.no.sessions", null); //$NON-NLS-1$
			} else {
				//choose the session
				IUiModelElement[] events = UiModelRoot.getDefault().getChildren();
				if (events.length == 1 && events[0].getChildren().length == 1) {
					currentSession = events[0].getChildren()[0];
				} else {
					currentSession = openSessionSelectionDialog();
				}
				
				//create the list of symbols from the session
				populateSamples();
				
				//annotate current editors
				annotations = new ArrayList<Annotation>();
				IWorkbenchWindow[] windows = PlatformUI.getWorkbench().getWorkbenchWindows();
			    for (int i = 0; i < windows.length; i++) {
					IWorkbenchPage[] pages = windows[i].getPages();
					for (int j = 0; j < pages.length; j++) {
					    IEditorReference[] editors = pages[j].getEditorReferences();
					    for (int k = 0; k < editors.length; k++) {
					        IWorkbenchPart editor = editors[k].getPart(false);
					        if (editor instanceof ITextEditor) {
								annotateEditor((ITextEditor) editor);
					        }
					    }
					}      
			    }
			    
			    //create the editor tracker to annotate editors as they open
				editorTracker = new EditorTracker();
			}
		} else {
			//remove annotations
			if (editorTracker != null) {
				editorTracker.dispose();
				editorTracker = null;
			}
			
			removeAllAnnotations();
			if (sessionSymbols != null) {
				sessionSymbols.clear();
			}
			if (sessionSymbolFilePaths != null) {
				sessionSymbolFilePaths.clear();
			}
			currentSession = null;
		}
		

		return null;	//required
	}

