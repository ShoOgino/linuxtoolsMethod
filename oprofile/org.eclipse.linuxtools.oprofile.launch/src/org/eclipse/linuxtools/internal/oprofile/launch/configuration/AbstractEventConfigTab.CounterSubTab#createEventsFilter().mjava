        /**
         * Creates a text filter for the events list widget
         */
        private void createEventsFilter(){
            // Event Filter
            ViewerFilter eventFilter = new ViewerFilter() {

                @Override
                public Object[] filter(Viewer viewer, Object parent, Object[] elements) {
                    Object[] filteredElements = super.filter(viewer,parent,elements);
                    handleEventListSelectionChange();
                    return filteredElements;
                }

                @Override
                public boolean select(Viewer viewer, Object parentElement, Object element) {
                    String[] filterTerms = eventFilterText.getText().trim().toLowerCase().split(" "); //$NON-NLS-1$
                    String eventName = ((OpEvent)element).getText().toLowerCase();
                    String eventDescription = ((OpEvent)element).getTextDescription().toLowerCase();

                    boolean contains = true;

                    for (String filterTerm : filterTerms) {
                        if(contains){
                            contains = eventName.contains(filterTerm) || eventDescription.contains(filterTerm);
                        }
                    }
                    return contains;
                }
            };
            if(eventList != null){
                eventList.addFilter(eventFilter);
            }
        }

