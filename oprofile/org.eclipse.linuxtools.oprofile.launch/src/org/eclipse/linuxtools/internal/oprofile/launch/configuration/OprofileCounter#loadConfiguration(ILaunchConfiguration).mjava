    /**
     * Loads a counter configuration from the specified launch configuration.
     * @param config    the launch configuration
     */
    public void loadConfiguration(ILaunchConfiguration config) {
        try {
            _enabled = config.getAttribute(OprofileLaunchPlugin.attrConterEnabled(number), false);
            int numEvents = config.getAttribute(OprofileLaunchPlugin.attrNumberOfEvents(number), 1);
            daemonEvent = new OprofileDaemonEvent[numEvents];

            for (int i = 0; i < numEvents; i++) {
                String str = config.getAttribute(OprofileLaunchPlugin.attrConterEvent(number, i), ""); //$NON-NLS-1$
                int maskValue = config.getAttribute(OprofileLaunchPlugin.attrCounterUnitMask(number), OpUnitMask.SET_DEFAULT_MASK);
                String maskName = config.getAttribute(OprofileLaunchPlugin.attrCounterUnitMaskName(number), ""); //$NON-NLS-1$

                daemonEvent[i] = new OprofileDaemonEvent();
                daemonEvent[i].setEvent(eventFromString(str));

                if (daemonEvent[i].getEvent() == null) {
                    continue;
                }

                daemonEvent[i].getEvent().getUnitMask().setMaskValue(maskValue);
                daemonEvent[i].getEvent().getUnitMask().setMaskName(maskName);
                daemonEvent[i].setProfileKernel(config.getAttribute(OprofileLaunchPlugin.attrCounterProfileKernel(number), false));
                daemonEvent[i].setProfileUser(config.getAttribute(OprofileLaunchPlugin.attrCounterProfileUser(number), false));

                daemonEvent[i].setResetCount(config.getAttribute(OprofileLaunchPlugin.attrCounterCount(number), OprofileDaemonEvent.COUNT_UNINITIALIZED));
            }
        } catch (CoreException ce) {

        }
    }

