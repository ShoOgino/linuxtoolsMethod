		/**
		 * Handling method for the event list. Gets the selection from the listviewer
		 * and updates the UnitMask and event description text box.
		 */
		private void handleEventListSelectionChange() {
			int [] indices = eventList.getList().getSelectionIndices();
			if (indices.length != 0) {
				ArrayList<OpEvent> tmp = new ArrayList<OpEvent> ();
				for (int index : indices) {
					OpEvent event = (OpEvent) eventList.getElementAt(index);
					tmp.add(event);
					eventDescText.setText(event.getTextDescription());
					unitMaskViewer.displayEvent(event);
				}

				// Check the min count to update the error message (events
				// can have
				// different minimum reset counts)
				int min = Integer.MIN_VALUE;
				for (OpEvent ev : tmp) {
					// We want the largest of the min values
					if (ev.getMinCount() > min) {
						min = ev.getMinCount();
					}
				}
				if ((counter.getCount() < min)
						&& (!defaultEventCheck.getSelection())) {
					setErrorMessage(getMinCountErrorMessage(min));
				}

				counter.setEvents(tmp.toArray(new OpEvent[0]));
			} else {
				eventDescText.setText(""); //$NON-NLS-1$
				if(unitMaskViewer != null){
					unitMaskViewer.displayEvent(null);
				}
			}

			updateLaunchConfigurationDialog();
		}

