    /**
     * Validate events specified in the given configuration.
     * @param config
     * @return
     */
    private boolean validateEvents(ILaunchConfiguration config) {
        int numEnabledEvents = 0;
        boolean valid = true;

        try {
            if (config.getAttribute(OprofileLaunchPlugin.ATTR_USE_DEFAULT_EVENT, false)) {
                numEnabledEvents = 1;
            } else {
                //This seems like an odd way to validate, but since most of the validation
                // is done with the OprofileDaemonEvent that the counter wraps, this
                // is the easiest way.
                OprofileCounter[] counters = new OprofileCounter[getNumberOfOprofileCounters()];
                for (int i = 0; i < counters.length; i++) {
                    counters[i] = getOprofileCounter(i);
                    counters[i].loadConfiguration(config);

                    for (CounterSubTab counterSubTab : counterSubTabs){
                        int nr = counterSubTab.counter.getNumber();
                        if(counterSubTab.enabledCheck.getSelection() && config.getAttribute(OprofileLaunchPlugin.attrNumberOfEvents(nr), 0) == 0){
                            valid = false;
                        }
                        // if target list is empty valid is false
                        // target event list item count
                        int count = counterSubTab.selectedEventList.getList().getItemCount();
                        if(count == 0)
                        {
                            valid = false;
                        }
                    }

                    if (counters[i].getEnabled()) {
                        ++numEnabledEvents;

                        for (OpEvent event : counters[i].getEvents()) {
                            if (event == null) {
                                valid = false;
                                break;
                            }

                            // First check min count
                            int min = event.getMinCount();
                            if (counters[i].getCount() < min) {
                                Object[] args = new Object[] { min };
                                setErrorMessage(MessageFormat
                                        .format(OprofileLaunchMessages
                                                .getString("tab.event.counterSettings.count.too-small"), //$NON-NLS-1$
                                                args));
                                valid = false;
                                break;
                            }

                            // Next ask oprofile if it is valid
                            if (!checkEventSetupValidity(
                                    counters[i].getNumber(), event.getText(), event.getUnitMask().getMaskValue())) {
                                Object[] args = new Object[] { event.getText() };
                                setErrorMessage(MessageFormat.format(OprofileLaunchMessages.getString("tab.event.validation.msg"), args)); //$NON-NLS-1$
                                valid = false;
                                break;
                            }
                        }
                    }
                }
            }
        } catch (CoreException e) {
            e.printStackTrace();
        }

        return (numEnabledEvents > 0 && valid);
    }

