		/**
		 * Initializes the tab on first creation.
		 * @param config default configuration for the counter and the associated widgets
		 */
		public void initializeTab(ILaunchConfiguration config) {
			//make all controls inactive, since the 'default event' checkbox
			// is checked by default
			try {
				defaultEventCheck.setSelection(config.getAttribute(OprofileLaunchPlugin.ATTR_USE_DEFAULT_EVENT, true));
			} catch (CoreException e) {
				e.printStackTrace();
			}
			setEnabledState(false);

			if (config != null) {
				counter.loadConfiguration(config);
			}

			boolean enabled = counter.getEnabled();
			enabledCheck.setSelection(enabled);

			if (counter.getEvents().length == 0 || counter.getEvents()[0] == null) {
				// Default to first in list
				counter.setEvents(new OpEvent [] {counter.getValidEvents()[0]});
			}

			//load default states
			profileKernelCheck.setSelection(counter.getProfileKernel());
			profileUserCheck.setSelection(counter.getProfileUser());

			eventDescText.setText(counter.getEvents()[0].getTextDescription());


			// add opevent to target event list
			ArrayList<OpEvent> tmp = new ArrayList<OpEvent>(Arrays.asList(counter.getEvents()));
			targetList.addAll(tmp);
			selectedEventList.add(tmp.toArray());
			selectedEventList.refresh();
			selectedEventList.setSelection(new StructuredSelection(tmp.toArray()));

			// remove selected opevent from source list

			sourceList.removeAll(tmp);
			eventList.remove(tmp.toArray());
			eventList.refresh();
		}

