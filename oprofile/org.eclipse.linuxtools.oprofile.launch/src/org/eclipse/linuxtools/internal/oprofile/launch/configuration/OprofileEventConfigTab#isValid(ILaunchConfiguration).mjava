	/**
	 * @see ILaunchConfigurationTab#isValid(ILaunchConfiguration)
	 */
	@Override
	public boolean isValid(ILaunchConfiguration config) {
		IProject project = getProject(config);
		Oprofile.OprofileProject.setProject(project);

		try{
			if(!hasPermissions(project)){
					return false;
			}
		} catch(OpcontrolException e){
			return false;
		}

		if (getTimerMode()) {
			return true;		//no options to check for validity
		} else {
			int numEnabledEvents = 0;
			boolean valid = true;
	
			try {
				if (config.getAttribute(OprofileLaunchPlugin.ATTR_USE_DEFAULT_EVENT, false)) {
					numEnabledEvents = 1;
				} else {
					//This seems like an odd way to validate, but since most of the validation
					// is done with the OprofileDaemonEvent that the counter wraps, this
					// is the easiest way.
					OprofileCounter[] counters = new OprofileCounter[getNumberOfCounters()];
					for (int i = 0; i < counters.length; i++) {
						counters[i] = new OprofileCounter(i);
						counters[i].loadConfiguration(config);
						if (counters[i].getEnabled()) {
							++numEnabledEvents;
	
							if (counters[i].getEvent() == null) {
								valid = false;
								break;
							}
	
							// First check min count
							int min = counters[i].getEvent().getMinCount();
							if (counters[i].getCount() < min) {
								valid = false;
								break;
							}
	
							// Next ask oprofile if it is valid
							if (!checkEventSetupValidity(counters[i].getNumber(), counters[i].getEvent().getText(), counters[i].getEvent().getUnitMask().getMaskValue())) {
								valid = false;
								break;
							}
						}
					}
				}
			} catch (CoreException e) {
				e.printStackTrace();
			}
	
			return (numEnabledEvents > 0 && valid);
		} 
	}

