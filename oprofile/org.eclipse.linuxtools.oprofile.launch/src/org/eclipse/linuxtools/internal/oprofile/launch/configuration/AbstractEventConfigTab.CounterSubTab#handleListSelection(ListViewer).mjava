        /**
         * Generic method for handling source & target selection list
         * @param eventList - list to be handled
         * @since 3.0
         */
        private void handleListSelection(ListViewer eventList)
        {
            setErrorMessage(null);
            int [] indices = eventList.getList().getSelectionIndices();
            if (indices.length != 0) {
                ArrayList<OpEvent> tmp = new ArrayList<> ();
                for (int index : indices) {
                    OpEvent event = (OpEvent) eventList.getElementAt(index);
                    tmp.add(event);
                    eventDescText.setText(event.getTextDescription());

                }

                // Check the min count to update the error message (events
                // can have
                // different minimum reset counts)
                int min = Integer.MIN_VALUE;
                for (OpEvent ev : tmp) {
                    // We want the largest of the min values
                    if (ev.getMinCount() > min) {
                        min = ev.getMinCount();
                    }
                }
                if(counter.getEvents().length == 0 || counter.getEvents()[0] == null)
                {
                    counter.setEvents(new OpEvent [] {counter.getValidEvents()[0]});
                }
                if ((counter.getCount() < min)
                        && (!defaultEventCheck.getSelection())) {
                    setErrorMessage(getMinCountErrorMessage(min));
                }

                //counter.setEvents(tmp.toArray(new OpEvent[0]));
            } else {
                eventDescText.setText(""); //$NON-NLS-1$

            }



        }

