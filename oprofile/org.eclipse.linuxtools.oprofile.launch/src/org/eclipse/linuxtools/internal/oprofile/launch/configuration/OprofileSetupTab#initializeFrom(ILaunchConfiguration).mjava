    @Override
    public void initializeFrom(ILaunchConfiguration config) {
    	String name = ""; //$NON-NLS-1$
    	/*
    	 * Update the global OprofileProject object. In many occasions its
    	 * value is read, which may produce inconsistencies if it is not
    	 * up-to-date.
    	 */
    	try {
    		name = config.getAttribute(ICDTLaunchConfigurationConstants.ATTR_PROJECT_NAME, ""); //$NON-NLS-1$
    		if (!name.isEmpty()) {
    			IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(name);
    			Oprofile.OprofileProject.setProject(project);
    		}
    	} catch (CoreException e) {
    		// Nothing to do
    	}

        options.loadConfiguration(config);
        try {
            if (config.getType().getIdentifier().equals("org.eclipse.linuxtools.oprofile.launch.oprofile.manual")) { //$NON-NLS-1$
                controlCombo.setEnabled(false);
            }
        } catch (CoreException e) {
            e.printStackTrace();
        }
        controlCombo.setText(options.getOprofileComboText());

        kernelImageFileText.setText(options.getKernelImageFile());
        executionsSpinner.setSelection(options.getExecutionsNumber());

        int separate = options.getSeparateSamples();

        if (separate == OprofileDaemonOptions.SEPARATE_NONE) {
            checkSeparateLibrary.setSelection(false);
            checkSeparateKernel.setSelection(false);
        } else {
            //note that opcontrol will nicely ignore the trailing comma
            if ((separate & OprofileDaemonOptions.SEPARATE_LIBRARY) != 0)
                checkSeparateLibrary.setSelection(true);
            if ((separate & OprofileDaemonOptions.SEPARATE_KERNEL) != 0)
                checkSeparateKernel.setSelection(true);
        }
        enableOptionWidgets();
    }

