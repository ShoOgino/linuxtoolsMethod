	/**
	 * Constructor for UnitMaskViewer
	 * @param parent	the parent composite
	 */
	public UnitMaskViewer(Composite parent)
	{
		Label l = new Label(parent, SWT.NONE);
		l.setText(OprofileLaunchMessages.getString("unitmaskViewer.label.text")); //$NON-NLS-1$

		FormData fdata;
		GridData gdata;
		
		Composite top = new Composite(parent, SWT.NONE);
		gdata = new GridData(GridData.FILL_BOTH);
		top.setLayoutData(gdata);
		top.setLayout(new FormLayout());
		
		_group[RADIO] = new Composite(top, SWT.NONE);
		fdata = new FormData();
		fdata.left = new FormAttachment(0, 0);
		fdata.right = new FormAttachment(100, 0);
		_group[RADIO].setLayoutData(fdata);
		_group[RADIO].setLayout(new GridLayout());
		_group[RADIO].setVisible(false);
		_group[CHECK] = new Composite(top, SWT.NONE);
		fdata = new FormData();
		fdata.left = new FormAttachment(0, 0);
		fdata.right = new FormAttachment(100, 0);
		_group[CHECK].setLayoutData(fdata);
		_group[CHECK].setLayout(new GridLayout());
		_group[CHECK].setVisible(false);

		for (int i = 0; i < MAX_BUTTONS; i++)
		{
			final int num = i;
			_maskButton[RADIO][i] = new Button(_group[RADIO], SWT.RADIO);
			_maskButton[RADIO][i].addSelectionListener(new SelectionAdapter()
			{
				public void widgetSelected(SelectionEvent se)
				{
					_handleToggle(RADIO, num);
				}
			});
			gdata = new GridData(GridData.FILL_HORIZONTAL);
			_maskButton[RADIO][i].setLayoutData(gdata);
			
			_maskButton[CHECK][i] = new Button(_group[CHECK], SWT.CHECK);
			_maskButton[CHECK][i].addSelectionListener(new SelectionAdapter()
			{
				public void widgetSelected(SelectionEvent se)
				{
					_handleToggle(CHECK, num);
				}
			});
			gdata = new GridData(GridData.FILL_HORIZONTAL);
			_maskButton[CHECK][i].setLayoutData(gdata);
		}
	}

