	public ILaunch run () {
		ILaunch prog = null;
		
		try {
			// Shutdown any currently running oprofile session
			OprofileCorePlugin.getDefault().getOpcontrolProvider().shutdownDaemon();
			
			//reset any data from the current session (otherwise causes problems with multiple sessions)
			OprofileCorePlugin.getDefault().getOpcontrolProvider().reset();
			
			ArrayList events = new ArrayList();
			for (int i = 0; i < _counters.length; ++i) {
				if (_counters[i].getEnabled())
					events.add(_counters[i].getDaemonEvent());
			}
			OprofileDaemonEvent[] devents = new OprofileDaemonEvent[events.size()];
			events.toArray(devents);
			OprofileCorePlugin.getDefault().getOpcontrolProvider().setupDaemon(_options.getOprofileDaemonOptions(), devents);
			
			// Start the daemon & collection
			OprofileCorePlugin.getDefault().getOpcontrolProvider().startCollection();
		} catch (OpcontrolException oe) {
			String title = OprofileProperties.getString("opcontrolProvider.error.dialog.title"); //$NON-NLS-1$
			String msg = OprofileProperties.getString("opcontrolProvider.error.dialog.message"); //$NON-NLS-1$
			ErrorDialog.openError(null /* parent shell */, title, msg, oe.getStatus());
		}
		
		// Run c/c++ launch config, if defined
		if (_launchConfig != null) {
			ILaunchConfiguration claunch = null;
			ILaunchManager manager = DebugPlugin.getDefault().getLaunchManager();
			try {
				claunch = manager.getLaunchConfiguration(_launchConfig);
			} catch (CoreException ce) {
				claunch = null;
			}
			
			if (claunch != null) {
				try {
					// TODO: Progress monitor
					prog = claunch.launch(ILaunchManager.RUN_MODE, null);
				} catch (CoreException ce) {
				}
			}
		}
		
		return prog;
	}

