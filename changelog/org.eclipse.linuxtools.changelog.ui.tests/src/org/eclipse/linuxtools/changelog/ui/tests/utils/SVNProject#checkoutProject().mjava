    /**
     * Use File => Import => SVN to create a svn-backed project.
     */
    public IProject checkoutProject() throws IllegalStateException {
        if (repoURL == null || projectName == null) {
            // need to have url and project set
            throw new IllegalStateException();
        }
        bot.menu("File").menu("Import...").click();

        SWTBotShell shell = bot.shell("Import");
        shell.activate();
        bot.tree().expandNode("SVN").select("Checkout Projects from SVN");
        bot.button("Next >").click();

        // create new repo
        shell = bot.shell("Checkout from SVN");
        shell.activate();
        bot.button("Next >").click();

        shell = bot.shell("Checkout from SVN");
        shell.activate();
        // Enter url
        bot.comboBoxWithLabelInGroup("Url:", "Location").setText(repoURL);
        bot.button("Next >").click();

        // the next few operation can take quite a while, adjust
        // timout accordingly.
        long oldTimeout = SWTBotPreferences.TIMEOUT;
        SWTBotPreferences.TIMEOUT = 3 * 5000;

        shell = bot.shell("Progress Information").activate();
        bot.waitUntil(Conditions.shellCloses(shell));
        shell = bot.shell("Checkout from SVN").activate();
        bot.waitUntil(new TreeItemAppearsCondition(repoURL, projectName));
        SWTBotTreeItem projectTree = bot.tree().expandNode(repoURL);
        projectTree.expandNode(projectName).select();
        bot.button("Finish").click();
        // Wait for import operation to finish
        bot.waitUntil(Conditions.shellCloses(shell));
        SWTBotShell svnCheckoutPopup = bot.shell("SVN Checkout").activate();
        bot.waitUntil(Conditions.shellCloses(svnCheckoutPopup));
        // need a little delay
        bot.waitUntil(new SVNProjectCreatedCondition(projectName));

        // Set timout back what it was.
        SWTBotPreferences.TIMEOUT = oldTimeout;

        // A quick sanity check
        IWorkspaceRoot wsRoot = ResourcesPlugin.getWorkspace().getRoot();
        IProject changelogTestsProject = (IProject)wsRoot.findMember(new Path(projectName));
        assertNotNull(changelogTestsProject);
        try {
            changelogTestsProject.refreshLocal(IResource.DEPTH_INFINITE, null);
        } catch (CoreException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        IResource manifest = changelogTestsProject.findMember(new Path("/META-INF/MANIFEST.MF"));
        assertNotNull(manifest);
        return changelogTestsProject;
    }

