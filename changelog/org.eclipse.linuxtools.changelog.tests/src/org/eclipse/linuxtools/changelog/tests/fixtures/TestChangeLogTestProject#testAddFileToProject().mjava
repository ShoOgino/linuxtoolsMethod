	/**
	 * Test method for
	 * {@link org.eclipse.linuxtools.changelog.tests.fixtures.ChangeLogTestProject#addFileToProject(java.lang.String, java.lang.String, java.io.InputStream)}
	 * .
	 */
	@Test
	public void testAddFileToProject() throws Exception {
		String fileContent = "some content";
		InputStream newFileInputStream = new ByteArrayInputStream(
				fileContent.getBytes());
		// Create file "testfile.txt" with content "some content" at
		// "/this/is/a/testpath"
		project.addFileToProject("/this/is/a/testpath", "testfile.txt",
				newFileInputStream);
		IProject p = project.getTestProject();

		// Paths along the way should have been created
		IResource member = p.findMember(new Path("/this"));
		assertNotNull(member);
		assertEquals("this", member.getName());
		member = p.findMember(new Path("/this/is"));
		assertNotNull(member);
		assertEquals("is", member.getName());
		member = p.findMember(new Path("/this/is/a"));
		assertNotNull(member);
		assertEquals("a", member.getName());
		member = p.findMember(new Path("/this/is/a/testpath"));
		assertNotNull(member);
		assertEquals("testpath", member.getName());

		// Testfile should be around
		IResource createdFile = p.findMember(new Path("/this/is/a/testpath/testfile.txt"));
		assertNotNull(createdFile);
		assertEquals("this/is/a/testpath/testfile.txt", createdFile.getProjectRelativePath().toString());
		assertEquals("testfile.txt", createdFile.getName());
		assertTrue(createdFile instanceof IFile);

		// Content should be "some content"
		BufferedReader br = new BufferedReader(new InputStreamReader(
				new FileInputStream(createdFile.getLocation().toFile())));
		String actualContent = br.readLine();
		br.close();
		assertEquals(fileContent, actualContent);
		
		// this should throw an IllegalStateException
		boolean exceptionTrown = false;
		try {
			project.addFileToProject("donnot/care", "not_important.java",
					null /* should cause exception */);
		} catch (IllegalStateException e) {
			// pass
			exceptionTrown = true;
		}
		assertTrue(exceptionTrown);
	}

