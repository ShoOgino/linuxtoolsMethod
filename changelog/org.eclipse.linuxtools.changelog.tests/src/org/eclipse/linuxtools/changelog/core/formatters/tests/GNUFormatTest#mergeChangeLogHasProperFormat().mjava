	/**
	 * Basic format check.
	 */
	@Test
	public void mergeChangeLogHasProperFormat() throws Exception {
		// set date/author line
		String authorName = "Test Author";
		String email = "test@example.com";
		final String dateLine = gnuFormatter.formatDateLine(authorName, email);

		// full absolute path to ChangeLog file (relative to project root)
		String changelogPath = "/" + project.getTestProject().getName() + "/path/to";
		final String changelogFilePath = changelogPath + "/ChangeLog";

		// Content to merge into
		String content = "";
		
		assertNull(project.getTestProject().findMember(new Path("/path/to/ChangeLog")));
		
		// add a ChangeLog file to our test project
		InputStream newFileInputStream = new ByteArrayInputStream(
				content.getBytes());
		IFile changelogFile = project.addFileToProject( "/path/to", "ChangeLog",
				newFileInputStream);
		// Open a document and get the IEditorPart
		changelogEditorPart = openEditor(changelogFile);
		
		// make sure changelog editor content is empty
		assertEquals(content, getContent(changelogEditorPart));

		// entry file path (need overlap with changelogPath)
		String fileEntryRelPath = "eclipse/example/test/NewCoffeeMaker.java";
		final String entryFilePath = changelogPath + "/" + fileEntryRelPath;
		
		// Will show up surrounded by "(" and ")" in ChangeLog
		final String guessedFunctionName = "bazinga"; 
		
		// This always returns an empty String (should probably be changed...)
		// merge result will be written to editorContent
		gnuFormatter.mergeChangelog(dateLine, guessedFunctionName,
				"" /* empty default content */, changelogEditorPart,
				changelogFilePath, entryFilePath);
		
		final String actualMergeResult = getContent(changelogEditorPart);		
		
		final String expectedResult = dateLine + TAB + FILE_ENTRY_START_MARKER + 
									  fileEntryRelPath + SPACE + FUNCTION_START_MARKER +
									  guessedFunctionName + FUNCTION_END_MARKER +
									  FILE_ENTRY_END_MARKER;
		
		assertEquals(expectedResult, actualMergeResult);
	}

