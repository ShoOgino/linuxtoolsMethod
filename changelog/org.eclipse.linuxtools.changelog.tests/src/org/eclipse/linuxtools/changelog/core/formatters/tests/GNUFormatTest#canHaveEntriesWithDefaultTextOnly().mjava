	/**
	 * Here's the scenario for this test. It may be that there are only files removed and
	 * new files added for a commit. This should yield to changelog entries for the following
	 * form:
	 * 
	 *<code>
	 * 2010-11-26  Some Author  <some.author@example.com>
	 * 
	 *     * path/to/deleted/file.c: Removed.
	 *     * path/to/new/file.c: New file.
	 *</code>
	 *
	 * Prior to the fix for Eclipse Bz #331244 the result was:
	 * 
	 *<code>
	 * 2010-11-26  Some Author  <some.author@example.com>
	 * 
	 *     * path/to/deleted/file.c: Removed.
	 *     * path/to/new/file.c:
	 *</code>
	 * 
	 * This regression test should catch this.
	 */
	@Test
	public void canHaveEntriesWithDefaultTextOnly() throws Exception {
		// set date/author line
		String authorName = "Test Author";
		String email = "test@example.com";
		final String dateLine = gnuFormatter.formatDateLine(authorName, email);

		// full absolute path to ChangeLog file (relative to project root)
		String changelogPath = "/" + project.getTestProject().getName() + "/path/example";
		final String changelogFilePath = changelogPath + "/ChangeLog";

		// Content to merge into
		String content = "";
		
		// add a ChangeLog file to our test project
		InputStream newFileInputStream = new ByteArrayInputStream(
				content.getBytes());
		IFile changelogFile = project.addFileToProject( "/path/example", "ChangeLog",
				newFileInputStream);
		// Open a document and get the IEditorPart
		changelogEditorPart = openEditor(changelogFile);
		
		// make sure changelog editor content is empty
		assertEquals(content, getContent(changelogEditorPart));

		// entry file path (need overlap with changelogPath)
		final String firstFileEntryRelPath = "eclipse/example/test/NewCoffeeMaker.java";
		String entryFilePath = changelogPath + "/" + firstFileEntryRelPath;
		
		final String firstDefaultContent = "New file.";
		
		// Note: This always returns an empty String (should probably be changed...)
		// merge result will be written to editorContent.
		// 
		// Create a line with default text "New file"
		gnuFormatter.mergeChangelog(dateLine, "" /* no guessed function name */,
				firstDefaultContent, changelogEditorPart,
				changelogFilePath, entryFilePath);
		final String secondFileEntryRelPath = "eclipse/example/test/OldCoffeeMaker.java";
		entryFilePath = changelogPath + "/" + secondFileEntryRelPath;
		final String secondDefaultContent = "Removed.";
		// Add entry for removed file
		gnuFormatter.mergeChangelog(dateLine, "" /* no guessed function name */,
				secondDefaultContent,	changelogEditorPart,
				changelogFilePath, entryFilePath);
				
		final String actualMergeResult = getContent(changelogEditorPart);		
		
		// Note: Removed files occur in the list first, new file items come after that.
		final String expectedResult = dateLine + TAB + FILE_ENTRY_START_MARKER + 
									  secondFileEntryRelPath+ FILE_ENTRY_END_MARKER +
									  secondDefaultContent + NEW_LINE + TAB + FILE_ENTRY_START_MARKER +
									  firstFileEntryRelPath + FILE_ENTRY_END_MARKER +
									  firstDefaultContent; 
		
		assertEquals(expectedResult, actualMergeResult);
	}

