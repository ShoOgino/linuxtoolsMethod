	/**
	 * @see IParserChangeLogContrib#parseCurrentFunction(IEditorPart)
	 */
	public String parseCurrentFunction(IEditorInput input, int offset)
			throws CoreException {
	    
		String currentElementName;
		int elementType;
		
		// Get the working copy and connect to input.
		IWorkingCopyManager manager = JavaUI.getWorkingCopyManager();
		manager.connect(input);

		// Retrieve the Java Element in question.
		ICompilationUnit workingCopy = manager.getWorkingCopy(input);
		
		if (workingCopy == null)
			return "";
		
		IJavaElement method = workingCopy.getElementAt(offset);
		
		manager.disconnect(input);

		// no element selected
		if (method == null)
			return "";

		// Get the current element name, to test it.
		currentElementName = method.getElementName();

		// Element doesn't have a name. Can go no further.
		if (currentElementName == null)
			return "";

		// Get the Element Type to test.
		elementType = method.getElementType();

		switch (elementType) {
		case IJavaElement.METHOD:
		case IJavaElement.FIELD:
		    break;
		case IJavaElement.COMPILATION_UNIT:
		    return "";
		case IJavaElement.INITIALIZER:
		    return "static initializer";

		// So it's not a method, field, type, or static initializer. Where are we?
		default:
		    IJavaElement tmpMethodType;
		    if (((tmpMethodType = method.getAncestor(IJavaElement.METHOD)) == null)
			&& ((tmpMethodType = method.getAncestor(IJavaElement.TYPE)) == null)) {
			return "";
		    } else {
			// In a class, but not in a method. Return class name instead.
			method = tmpMethodType;
			currentElementName = method.getElementName();
		    }
		}

		// Build all ancestor classes.
		// Append all ancestor class names to string

		IJavaElement tmpParent = method.getParent();
		boolean firstLoop = true;

		while (tmpParent != null) {
			IJavaElement tmpParentClass = tmpParent
					.getAncestor(IJavaElement.TYPE);
			if (tmpParentClass != null) {
				String tmpParentClassName = tmpParentClass.getElementName();
				if (tmpParentClassName == null)
					return "";
				currentElementName = tmpParentClassName + "."
						+ currentElementName;
			} else {
				// cut root class name
				int rootClassPos = currentElementName.indexOf(".");
				if (rootClassPos >= 0)
					currentElementName = currentElementName
							.substring(rootClassPos + 1);
				if (firstLoop)
					return "";
				else
					return currentElementName;
			}
			tmpParent = tmpParentClass.getParent();
			firstLoop = false;

		}

		return "";
	}

