	/**
	 * Parses patch generated by CVS diff into <code>PatchFile</code> array.
	 * 
	 * @param diffResult
	 *            patch file
	 * @param projectPathh
	 *            local parent path for the patch
	 * @return array of PatchFile info
	 */
	protected PatchFile[] parseStandardPatch(String diffResult,
			String projectPath, IProgressMonitor monitor) {
		StringTokenizer st = new StringTokenizer(diffResult, "\n");
		ArrayList fileList = new ArrayList();

		// regex pattern for matching line info in standard patch.
		Pattern lineInfoPattern = Pattern
				.compile("(\\d+|\\d+,\\d+)[adc](\\d+|\\d+,\\d+)");

		boolean inRange = false;
		if (st.countTokens() == 0) 
			return null;
		int unitwork = 250 / st.countTokens();
		while (st.hasMoreTokens()) {
			String ln = st.nextToken();
			// this line contains file path relative to resource
			// and starts new file entry
			if (ln.indexOf("Index: ") == 0) {
				String fullPath = projectPath + "/" + ln.substring(7);

				// ignore all ChangeLogs
				if (fullPath.substring(
						fullPath.length() - "ChangeLog".length(),
						fullPath.length()).equals("ChangeLog")) {
					continue;
				}

				// System.out.println(fullPath + "- full path");
				fileList.add(new PatchFile(fullPath));
				inRange = false;
				continue;
			}

			if (fileList.size() > 0) {

				PatchFile tpe = (PatchFile) fileList.get(fileList.size() - 1);
				if (tpe != null) {

					Matcher linem = lineInfoPattern.matcher(ln);

					if (linem.matches()) {
						inRange = true;
						int from = 1;
						int length = 0;

						int modifierIndex;

						if ((modifierIndex = ln.indexOf("a")) < 0)
							if ((modifierIndex = ln.indexOf("d")) < 0)
								modifierIndex = ln.indexOf("c");

						// String firstHalf = ln.substring(0, modifierIndex);
						String secondHalf = ln.substring(modifierIndex + 1);

						int commaIndex;
						switch (ln.charAt(modifierIndex)) {

						case 'a':
						case 'c':

							if ((commaIndex = secondHalf.indexOf(",")) >= 0) {
								from = Integer.parseInt(secondHalf.substring(0,
										commaIndex));
								length = Integer.parseInt(secondHalf
										.substring(commaIndex + 1))
										- Integer.parseInt(secondHalf
												.substring(0, commaIndex));
							} else {
								from = Integer.parseInt(secondHalf);
							}

							break;

						case 'd':
							from = Integer.parseInt(secondHalf);
							from++;
							break;
						}

						tpe.addLineRange(from, from + length);
						continue;
					}

					// add actual patch just in case if we need it later.
					if (inRange)
						tpe.appendTxtToLastRange(ln);

				}
			}
			monitor.worked(unitwork);
		}

		PatchFile[] parseResult = new PatchFile[fileList.size()];
		for (int i = 0; i < fileList.size(); i++)
			parseResult[i] = (PatchFile) fileList.get(i);

		return (parseResult.length == 0) ? null : parseResult;
	}

