	public Object execute(ExecutionEvent event) throws ExecutionException {

		IWorkspaceRoot workspaceRoot = ResourcesPlugin.getWorkspace().getRoot();
		IProject[] currentProject = null;
		IStructuredSelection tempResult = null;

		
		// try getting currently selected project
		try {
			IWorkbenchPage ref = getWorkbench().getActiveWorkbenchWindow().getActivePage();
			IWorkbenchPart part = ref.getActivePart();
			ISelection selected = ref.getSelection();
			if (selected instanceof IStructuredSelection) {
				IResource r = null;
				IStructuredSelection iss = (IStructuredSelection)selected;
				Object o = ((IStructuredSelection)selected).getFirstElement();
				if (o instanceof ISynchronizeModelElement) {
					r = ((ISynchronizeModelElement)o).getResource();
				} else if (o instanceof IAdaptable) {
					r = (IResource)((IAdaptable)o).getAdapter(IResource.class);
				}
				if (r != null)
					tempResult = iss;
			}
			if (tempResult == null) {
			    // We don't have an obvious project match in the current active view.  
				// Let's search all open views for the Synchronize View which is our first
				// choice to fall back on.
				IViewReference[] views = ref.getViewReferences();
				for (int j = 0; j < views.length; ++j) {
					if (views[j].getId().equals("org.eclipse.team.sync.views.SynchronizeView")) { // $NON-NLS-1$
						IViewPart v = views[j].getView(false);
						ISelection s = null;
						ISelectionProvider sp = v.getViewSite().getSelectionProvider();
						if (sp != null) {
							s = sp.getSelection();
						}
						if (s != null && s instanceof IStructuredSelection) {
							IStructuredSelection ss = (IStructuredSelection)s;
							Object element = ss.getFirstElement();
							IResource r = null;
							if (element instanceof ISynchronizeModelElement) {
								r = ((ISynchronizeModelElement)element).getResource();
							} else if (element instanceof IAdaptable) {
								r = (IResource)((IAdaptable)element).getAdapter(IResource.class);
							}

							if (r != null) {
								tempResult = ss;
							}
						}
					}
				}
			}
		} catch (Exception e) {
			tempResult = null;
		}

		// If we can't find the project directly, let the user know.
		if (tempResult == null) {
			MessageDialog.openInformation(getActiveWorkbenchShell(), Messages.getString("ChangeLog.PrepareChangeLog"), // $NON-NLS-1$, 
					Messages.getString("PrepareChangeLog.InfoNoProjectFound")); // $NON-NLS-1$
		} 

		final IStructuredSelection result = tempResult;
		try {
			Action exampleAction;
			exampleAction = new PrepareChangeLogAction() {
				public void run() {
					setSelection(result);
					doRun();
				}
			};

			exampleAction.run();

		} catch (Exception e) {
			ChangelogPlugin.getDefault().getLog().log(
					new Status(IStatus.ERROR, ChangelogPlugin.PLUGIN_ID, IStatus.ERROR,
							e.getMessage(), e));
		}

		return null;
	}

