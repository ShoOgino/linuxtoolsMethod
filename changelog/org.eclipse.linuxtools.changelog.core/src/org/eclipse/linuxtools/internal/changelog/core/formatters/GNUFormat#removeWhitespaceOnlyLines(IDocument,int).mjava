    /**
     * Remove any empty lines (i.e. lines only containing whitespace) between
     * <code>offset</code> and index backed-up until a '\n' preceded by some non-whitespace
     * character is reached. Whitespace will be merged to '\n\n'. For example
     * consider the following string "(main): Removed.\n\t\ \n\n\t\n" and
     * <code>offset</code> pointing to the last '\n'. This string would be
     * changed to: "(main): Removed.\n\n".
     *
     * @param changelogDoc
     * @param offset
     * @return The new offset.
     */
    private int removeWhitespaceOnlyLines(IDocument changelogDoc, int offset) {
        int initialOffset = offset;
        int backedUpOffset = offset;
        char charAtOffset;
        try {
            charAtOffset = changelogDoc.get(offset, 1).charAt(0);
        } catch (BadLocationException e) {
            e.printStackTrace();
            return offset;
        }
        while( backedUpOffset > 0 && (charAtOffset == '\n' || charAtOffset == '\t' || charAtOffset == ' ') ) {
            backedUpOffset--;
            try {
            charAtOffset = changelogDoc.get(backedUpOffset, 1).charAt(0);
            } catch (BadLocationException e) {
                e.printStackTrace();
                break;
            }
        }
        if ( (initialOffset - backedUpOffset) > 2 ) {
            try {
                int replaceLength = (initialOffset - backedUpOffset - 2);
                changelogDoc.replace(backedUpOffset + 2, replaceLength, "");
                // change offset accordingly
                offset -= replaceLength;
            } catch (BadLocationException e) {
                // exception should have been thrown earlier if that's
                // really a bad location...
            }
        }
        return offset;
    }

